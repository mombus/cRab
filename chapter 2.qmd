---
title: "Нейронные сети в экологии: практическое введение"
format: html
---

## Введение

Это практическое занятие можно рассматривать не только как введение в нейронные сети, но и как введение в экологическое моделирование в общем с помошью R. Занятие основано на статье Андрея Викторовича Коросова "[Нейронные сети в экологии: введение](https://ecopri.ru/journal/article.php?id=14002)", опубликованной в журнале Принципы экологии, №3, 2023, стр. 76-96. В статье рассмотрены основы нейросетевого моделирования в экологии, начиная с классических регрессионных методов и заканчивая искусственными нейронными сетями. Представленные примеры демонстрируют эволюционный переход от простых линейных моделей к сложным нейросетевым конструкциям, что позволяет решать задачи классификации и прогнозирования в экологии. "Теоретическая" лекция, основанная на этой статье, находиться по [ссылке](KOROSOV.ppt).

Можно скачать скрипт целиком в трех версиях: [KOROSOV.R](https://mombus.github.io/cRab/data/KOROSOV.R) - максимально приближен к оригинальной работе; [KOROSOV_updated.R](https://mombus.github.io/cRab/data/KOROSOV_updated.R) - тотже скрипт, но с комментариями и пояснениями (содержание этого занятия); [KOROSOV_visual.R](https://mombus.github.io/cRab/data/KOROSOV_visual.R) - почти такой же с дополнительным продвинутым визуалом и аналитикой.

#### **Для работы скрипта:**

1.  Скачайте файлы данных ([vipkar.csv](https://mombus.github.io/cRab/data/vipkar.csv) и [kihzsdat.csv](https://mombus.github.io/cRab/data/kihzsdat.csv))

2.  Установите рабочую директорию в setwd()

3.  Установите необходимые пакеты : **`install.packages(c("neuralnet", "ggplot2"))`**

```{r}
#| output: false
#| eval: false
# ЗАГРУЗКА БИБЛИОТЕК И НАСТРОЙКА СРЕДЫ ================================
library(neuralnet)   # Для построения нейронных сетей
library(ggplot2)     # Для продвинутой визуализации (в данном скрипте не используется напрямую)

# Установите свою рабочую директорию (где лежат файлы данных)
# setwd("C:/ВАША_ДИРЕКТОРИЯ/")

```

## ЛИНЕЙНАЯ РЕГРЕССИЯ

В этом разделе мы изучим основы экологического моделирования на примере зависимости массы тела гадюки от ее длины. Вы построите простую линейную регрессионную модель, визуализируете данные и линию регрессии, а также интерпретируете результаты с помощью функции `summary()`.

Загружаем данные

```{r}
#| output: false
#| eval: false
# Данные: масса (w) и длина тела (lt) гадюк (в см и граммах)
w <- c(85, 90, 85, 95, 95, 135, 165, 135, 140)
lt <- c(51, 51, 52, 54, 54, 59, 59, 60, 62)
```

Строим и запускаем модель $$
w_t = a_0 + a_1 \cdot l_t
$$

где: - $w_t$ — зависимая переменная, - $a_0$ — свободный член, - $a_1$ — коэффициент регрессии, - $l_t$ — независимая переменная.

```{r}
#| output: false
#| eval: false
# Построение линейной модели: w = a0 + a1*lt
lreg <- lm(w ~ lt)
```

Выведем результаты модели

```{r}
#| output: false
#| eval: false
# Просмотр результатов модели:
summary(lreg)  # Обратите внимание на коэффициенты и p-значения
```

На экране появится:

```{r}
#| output: false
#| eval: false
Call:
lm(formula = w ~ lt)

Residuals:
    Min      1Q  Median      3Q     Max 
-13.452  -7.585  -4.868   1.490  30.623 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) -240.766     64.457  -3.735 0.007308 ** 
lt             6.358      1.153   5.516 0.000891 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 13.81 on 7 degrees of freedom
Multiple R-squared:  0.813,     Adjusted R-squared:  0.7863 
F-statistic: 30.43 on 1 and 7 DF,  p-value: 0.0008911
```

Мы получили результаты линейной регрессии, где зависимая переменная — масса тела гадюки (w), а независимая переменная — длина тела (lt). Разберем каждый параметр:

1\. \*\*Call (Вызов модели):\*\*

\`lm(formula = w \~ lt)\`

Это просто напоминание, какая модель была построена. Здесь указано, что мы моделировали зависимость массы (w) от длины тела (lt) с помощью линейной регрессии.

2\. \*\*Residuals (Остатки):\*\*

Остатки — это разница между наблюдаемыми значениями массы и предсказанными моделью значениями. Они показывают, насколько хорошо модель описывает данные.

-   \`Min\`: минимальный остаток = -13.452 (наибольшее недооцененное значение)

-   \`1Q\`: первый квартиль = -7.585 (25% остатков меньше этого значения)

-   \`Median\`: медиана остатков = -4.868 (середина распределения остатков)

-   \`3Q\`: третий квартиль = 1.490 (75% остатков меньше этого значения)

-   \`Max\`: максимальный остаток = 30.623 (наибольшее переоцененное значение)

Распределение остатков: медиана немного смещена влево (отрицательное значение), а размах между 1Q и 3Q составляет примерно 9 единиц. Это может указывать на легкую асимметрию, но выборка мала.

3\. \*\*Coefficients (Коэффициенты):\*\*

-   \`(Intercept)\`: свободный член (a0) = -240.766. Это предсказанное значение массы при длине тела, равной нулю. Биологически это не имеет смысла (длина не может быть нулевой), но это математическая особенность модели.

-   \`lt\`: коэффициент регрессии (a1) = 6.358. Это означает, что при увеличении длины тела на 1 см масса тела увеличивается в среднем на 6.358 г.

Для каждого коэффициента приведены:

-   \`Estimate\`: точечная оценка коэффициента.

-   \`Std. Error\`: стандартная ошибка оценки коэффициента. Для intercept = 64.457, для lt = 1.153. Это мера изменчивости оценки.

-   \`t value\`: t-статистика. Рассчитывается как Estimate / Std.Error. Для intercept: -240.766 / 64.457 ≈ -3.735; для lt: 6.358 / 1.153 ≈ 5.516.

-   \`Pr(\>\|t\|)\`: p-значение для проверки гипотезы о равенстве коэффициента нулю.

-   Для intercept: p=0.007308 (значим на уровне α=0.01, т.е. intercept статистически значимо отличается от нуля).

-   Для lt: p=0.000891 (значим на уровне α=0.001). Это означает, что длина тела значимо влияет на массу.

Значимость кодов: три звездочки (\`\*\*\*\`) означают, что коэффициент значим на уровне 0.001.

4\. \*\*Residual standard error (Стандартная ошибка остатков):\*\* 13.81 на 7 степенях свободы. Это мера разброса остатков. В среднем, предсказания модели отклоняются от реальных значений на ±13.81 г. Степени свободы (df) = n - 2 = 9 - 2 = 7 (n — количество наблюдений).

5\. \*\*Multiple R-squared (Коэффициент детерминации R²):\*\* 0.813. Это означает, что 81.3% вариации массы тела объясняется длиной тела. Остальные 18.7% — это неучтенные факторы и случайная изменчивость.

6\. \*\*Adjusted R-squared (Скорректированный R²):\*\* 0.7863. Этот показатель корректирует R² с учетом числа предикторов. Он полезен при сравнении моделей с разным числом предикторов. Здесь он немного меньше R², так как учитывает, что в модели один предиктор.

7\. \*\*F-statistic (F-статистика):\*\* 30.43 на 1 и 7 степенях свободы. Проверяет гипотезу о том, что все коэффициенты (кроме intercept) равны нулю (т.е. модель не лучше, чем модель только с константой).

-   p-value: 0.0008911 (крайне значимый), что означает, что модель в целом адекватна.

\*\*Выводы:\*\*

\- Уравнение модели: \`w = -240.77 + 6.36 \* lt\`

\- Длина тела значимо влияет на массу (p\<0.001).

\- Модель объясняет 81.3% вариации массы.

\- На каждый сантиметр длины тела масса увеличивается примерно на 6.36 г.

\- Остатки модели показывают, что есть несколько точек, которые модель предсказывает с заметной ошибкой (особенно максимальный остаток в 30.6 г). Возможно, для более точного прогноза нужна нелинейная модель или учет дополнительных факторов.

\*\*Рекомендации:\*\*

\- Проверить допущения линейной регрессии (нормальность остатков, гомоскедастичность) с помощью диагностических графиков.

\- Рассмотреть возможность включения других переменных (например, возраста, пола) в модель.

\- Убедиться, что в данных нет выбросов, которые могут влиять на коэффициенты.

```{r}
#| output: false
#| eval: false
# Визуализация зависимости
plot(lt, w, 
     main = "Зависимость массы от длины тела гадюки", 
     xlab = "Длина тела (см)", 
     ylab = "Масса (г)", 
     pch = 19,        # Кружки вместо стандартных точек
     col = "darkgreen")
abline(lreg, col = "red", lwd = 2)  # Добавляем линию регрессии
```

![Рис. 1.: Пример линейной регрессии](images/KOROSOV1.PNG){fig-align="center" width="60%"}

## ЧИСЛЕННАЯ ОПТИМИЗАЦИЯ

Здесь вы познакомитесь с численными методами оптимизации параметров моделей, которые применяются, когда аналитическое решение невозможно. На примере той же зависимости массы от длины вы подгоните параметры модели с помощью функции `nls()` и сравните результаты с аналитическим решением.

Аналитические методы дают точное решение в виде математической формулы, используя алгебраические преобразования и теоремы математического анализа. Они идеальны для простых моделей, где существуют явные решения, обеспечивая прозрачную интерпретацию параметров. В экологии такие методы применимы для базовых зависимостей типа линейной регрессии. Численные методы используются, когда аналитическое решение невозможно, и работают через последовательные приближения, начиная со стартовых значений и итеративно улучшая параметры модели. Они незаменимы для сложных экологических моделей с нелинейными зависимостями, взаимодействиями факторов и "шумными" полевыми данными, позволяя решать задачи, недоступные для аналитических подходов.

```{r}
#| output: false
#| eval: false
# Подгонка параметров через оптимизацию
nls_model <- nls(w ~ a0 + a1 * lt, start = list(a0 = 1, a1 = 1))
summary(nls_model)
```

На экране появится:

```{r}
#| output: false
#| eval: false
Formula: w ~ a0 + a1 * lt

Parameters:
   Estimate Std. Error t value Pr(>|t|)    
a0 -240.766     64.457  -3.735 0.007308 ** 
a1    6.358      1.153   5.516 0.000891 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 13.81 on 7 degrees of freedom

Number of iterations to convergence: 1 
Achieved convergence tolerance: 3.247e-08
```

### **Интерпретация результатов модели**

Мы построили линейную модель зависимости массы гадюки (w) от длины её тела (lt) по формуле:\
**`w = a0 + a1 * lt`**

**Ключевые параметры модели:**

-   **a0 (свободный член)**: -240.8 г\
    Это теоретическая масса при нулевой длине тела. Отрицательное значение указывает, что модель не подходит для очень молодых особей.

-   **a1 (коэффициент при lt)**: 6.36 г/см\
    Каждый дополнительный сантиметр длины тела увеличивает массу в среднем на 6.36 г.

**Точность и значимость:**

-   Оба коэффициента **высоко значимы** (p \< 0.01), что подтверждает реальность зависимости.

-   Стандартная ошибка для a1 составляет 1.15 г/см - это значит, что реальное значение, вероятно, находится между 5.2 и 7.5 г/см.

-   Модель хорошо сошлась за 1 шаг (итерацию), что говорит об удачном подборе параметров.

**Ошибка прогноза:**\
Среднее отклонение предсказаний от реальных значений - 13.8 г (стандартная ошибка остатков). Для особи массой 100 г это означает возможную ошибку прогноза около 14%.

> **Биологический смысл:** Модель подтверждает сильную аллометрию - крупные гадюки имеют относительно большую массу тела. Каждый сантиметр длины добавляет около 6.4 г массы. Для особи длиной 55 см прогнозируемая масса составит: -240.8 + 6.36\*55 ≈ 109 г.

##МНОЖЕСТВЕННАЯ РЕГРЕССИЯ

В этом разделе мы расширим модель, включив несколько факторов. Вы построите множественную регрессию, учитывающую одновременно длину тела и длину хвоста гадюки, и научитесь интерпретировать влияние нескольких предикторов на зависимую переменную.

```{r}
#| output: false
#| eval: false
# Добавляем новый признак - длину хвоста (lc)
w <- c(40, 156, 105, 85, 80, 50, 75, 48, 75, 67)
lt <- c(44, 59, 49, 50, 54, 43, 49, 42, 47, 47)
lc <- c(70, 78, 66, 90, 83, 70, 62, 75, 40, 80)
```

Используя glm-функцию, построим модель с двумя предикторами: $$
w = a_0 + a_1 \cdot l_t + a_2 \cdot l_c
$$

где: - $w$ — масса гадюки, - $l_t$ — длина тела гадюки, - $l_c$ — длина хвоста гадюки, - $a_0$ — свободный член (константа), - $a_1$ — коэффициент регрессии при длине тела, - $a_2$ — коэффициент регрессии при длине хвоста.

```{r}
#| output: false
#| eval: false
# Множественная регрессия: w = a0 + a1*lt + a2*lc
multi_reg <- glm(w ~ lt + lc)
summary(multi_reg)
```

На экране появится:

```{r}
#| output: false
#| eval: false
Call:
glm(formula = w ~ lt + lc)

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept) -191.2982    53.6908  -3.563 0.009183 ** 
lt             6.0308     1.1051   5.457 0.000949 ***
lc            -0.3150     0.4133  -0.762 0.470913    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for gaussian family taken to be 270.9752)

    Null deviance: 10132.9  on 9  degrees of freedom
Residual deviance:  1896.8  on 7  degrees of freedom
AIC: 88.832

Number of Fisher Scoring iterations: 2
```

### **Интерпретация результатов множественной регрессии**

Мы исследовали зависимость массы гадюки (w) от длины тела (lt) и длины хвоста (lc) с помощью модели:\
**`w = b0 + b1*lt + b2*lc`**

**Ключевые выводы модели:**

1.  **Длина тела (lt) сильно влияет на массу**:

    -   Коэффициент: +6.03 г/см

    -   Каждый сантиметр длины тела увеличивает массу на \~6 г

    -   Высокая значимость (p = 0.00095)

2.  **Длина хвоста (lc) не влияет значимо на массу**:

    -   Коэффициент: -0.315 г/см (незначимый)

    -   p-значение 0.47 \> 0.05 - статистически недостоверно

    -   После учета длины тела, длина хвоста не добавляет информации

3.  **Свободный член (b0)**: -191.3 г\
    Отрицательное значение подтверждает нелинейность роста у молодых особей

**Качество модели:**

-   Модель объясняет значительную часть вариации:\
    Общая вариация (Null deviance) = 10132.9\
    Остаточная вариация (Residual deviance) = 1896.8 → **Объяснено 81% вариации**

-   AIC = 88.8 (ниже, чем у модели без lc - 92.1, что указывает на лучшее качество)

-   Модель быстро сошлась за 2 итерации

**Биологическая интерпретация:**

1.  Масса тела определяется в основном длиной туловища, а не хвоста

2.  Для прогноза массы достаточно учитывать только длину тела

3.  Пример прогноза для особи (lt=50 см, lc=70 см):\
    **`-191.3 + 6.03*50 - 0.315*70 ≈ 111 г`**

> **Рекомендация**: При изучении массы гадюк можно исключить длину хвоста из модели, так как она не вносит значимого вклада в предсказание. Основным морфометрическим показателем остается длина тела.

## НЕЛИНЕЙНЫЕ ЗАВИСИМОСТИ

Экологические данные часто имеют нелинейный характер. Здесь вы смоделируете степенную зависимость (аллометрию) между массой и длиной тела, используя линеаризацию через логарифмирование, а затем визуализируете кривую модели.

```{r}
#| output: false
#| eval: false
# Часто в экологии связи имеют степенной характер: w = a0 * lt^a1
# Линеаризация через логарифмирование
log_model <- lm(log(w) ~ log(lt))

# Преобразование коэффициентов обратно
a0 <- exp(coef(log_model)[1])  # Переход от логарифмов
a1 <- coef(log_model)[2]       # Показатель степени

# Визуализация степенной зависимости
plot(lt, w, 
     main = "Степенная зависимость массы от длины", 
     xlab = "Длина тела (см)", 
     ylab = "Масса (г)",
     pch = 17,
     col = "blue")
curve(a0 * x^a1, add = TRUE, col = "red", lwd = 2)  # Кривая модели
```

![Рис. 2.: Расчет степенной функции](images/KOROSOV2.PNG){fig-align="center" width="60%"}

## ЛОГИСТИЧЕСКАЯ РЕГРЕССИЯ

Вы изучите моделирование пороговых эффектов в экологии на примере смертности дафний в зависимости от концентрации токсиканта. Построив логистическую регрессию, вы получите S-образную кривую, характерную для таких процессов.

```{r}
#| output: false
#| eval: false
# Пример: смертность дафний при разных концентрациях токсиканта
# Данные:
K <- c(100, 126, 158, 200, 251, 316, 398, 501, 631, 794, 1000)
p <- c(0, 0, 0, 0, 0, 0.5, 0.5, 1, 1, 1, 1)  # Доля погибших
d <- data.frame(K, p)

# Построение логистической модели
logit_model <- glm(p ~ K, family = binomial(), data = d)

# Визуализация S-образной кривой
plot(d$K, d$p, 
     xlab = "Концентрация токсиканта (мг/л)", 
     ylab = "Доля погибших", 
     main = "Токсическое воздействие на дафний",
     pch = 19,
     col = "red")
lines(d$K, predict(logit_model, type = "response"), 
      col = "blue", lwd = 2, lty = 1)
```

![Рис. 3.: Расчет логистической регрессии гибели дафний в токсиканте](images/KOROSOV3.PNG){fig-align="center" width="60%"}

## ПЕРЕХОД К СЕТЯМ

Сделаем первый шаг к нейронным сетям, построив простейшую сеть без скрытых слоев (аналог линейной регрессии) для модели токсичности. Вы визуализируете структуру сети и убедитесь, что она дает результат, аналогичный линейной модели.

```{r}
#| output: false
#| eval: false
# Простейшая нейросеть (аналог линейной регрессии)
nn_simple <- neuralnet(p ~ K, data = d, hidden = 0)

# Визуализация структуры сети
plot(nn_simple, rep = "best")
```

![Рис. 4.: Схема нейрона](images/KOROSOV4.PNG){fig-align="center" width="40%"}

## НЕЙРОНЫ КАК НЕЛИНЕЙНЫЕ ПРЕОБРАЗОВАТЕЛИ

Здесь вы добавите в нейронную сеть скрытый слой с одним нейроном, что позволит моделировать нелинейные зависимости. Вы сравните результат работы такой сети с логистической регрессией и увидите, как нейронная сеть имитирует пороговый эффект.

```{r}
#| output: false
#| eval: false
# Сеть с одним скрытым нейроном (имитирует логистическую регрессию)
nn_1hidden <- neuralnet(p ~ K, data = d, hidden = 1)

# Сравнение с логистической регрессией
plot(d$K, predict(logit_model, type = "response"), 
     type = "l", 
     col = "darkgreen", 
     lwd = 2,
     xlab = "Концентрация", 
     ylab = "Смертность",
     main = "Сравнение моделей")
lines(d$K, predict(nn_1hidden, d), col = "blue", lty = 2, lwd = 2)
legend("bottomright", 
       legend = c("Логистическая регрессия", "Нейронная сеть (1 нейрон)"),
       col = c("darkgreen", "blue"), 
       lty = 1:2,
       lwd = 2)
```

![Рис. 5.: Сравнение работы](images/KOROSOV5.PNG){fig-align="center" width="40%"}

## КЛАССИФИКАЦИЯ В ЭКОЛОГИИ

Вы примените нейронные сети для решения задачи классификации - определения пола гадюк по морфометрическим признакам. Построив и сравнив несколько архитектур сетей (без скрытых нейронов, с одним и тремя нейронами), вы оцените их точность.

```{r}
#| output: false
#| eval: false
# Загрузка данных по гадюкам (пол, длина тела, длина хвоста, масса)
v <- read.csv("vipkar.csv")
head(v, 3)  # Просмотр первых строк данных
```

Модель без скрытых нейронов (аналог линейной регрессии)

```{r}
#| output: false
#| eval: false
nv0 <- neuralnet(ns ~ lc, data = v, hidden = 0)
plot(nv0)  # Визуализация простейшей сети
```

![Рис. 6.: Визуализация простейшей сети](images/KOROSOV6.PNG){fig-align="center" width="40%"}

Модель с одним скрытым нейроном

```{r}
#| output: false
#| eval: false
nv1 <- neuralnet(ns ~ lc, data = v, hidden = 1)
plot(nv1)  # Схема сети с одним нейроном
```

![Рис. 7.: Схема сети с одним нейроном](images/KOROSOV7.PNG){fig-align="center" width="40%"}

Модель с тремя скрытыми нейронами (полноценная нейросеть)

```{r}
#| output: false
#| eval: false
nv3 <- neuralnet(ns ~ lc + lt + w, data = v, hidden = 3)
plot(nv3)  # Визуализация сложной сети
```

![Рис. 8.: Модель с тремя скрытыми нейронами](images/KOROSOV8.PNG){fig-align="center" width="40%"}

Оценка точности классификации

```{r}
#| output: false
#| eval: false
predictions <- predict(nv3, v)
predicted_sex <- round(predictions)
accuracy <- mean(v$ns == predicted_sex)
cat("Точность классификации:", round(accuracy*100, 1), "%\n")
```

Сравнение разных архитектур нейронных сетей (см. срипт [KOROSOV_visual.R](https://mombus.github.io/cRab/data/KOROSOV_visual.R))

![Рис. 9.: Точность определения пола гадюк](images/KOROSOV9.PNG){fig-align="center" width="60%"}

## ПРОСТРАНСТВЕННОЕ МОДЕЛИРОВАНИЕ

В завершение вы построите нейронную сеть для прогнозирования численности гадюк на островах по характеристикам биотопов. Вы разделите данные на обучающую и тестовую выборки, оцените точность модели и используете ее для прогноза в новых условиях.

```{r}
#| output: false
#| eval: false
# Данные по островам Кижского архипелага
v <- read.csv("kihzsdat.csv")
head(v, 3)  # Структура данных: площадь, биотопы, численность видов

# Случайное разделение данных на обучающую и тестовую выборки
set.seed(123)  # Для воспроизводимости
train_indices <- sample(1:nrow(v), 12)
train_data <- v[train_indices, ]
test_data <- v[-train_indices, ]

# Построение нейросети с 5 нейронами в скрытом слое
model <- neuralnet(vb ~ fo + me + bo, data = train_data, hidden = 5)

# Прогнозирование на обучающей выборке
train_pred <- predict(model, train_data)
train_accuracy <- mean(round(train_pred) == train_data$vb)
cat("Точность на обучающей выборке:", round(train_accuracy*100, 1), "%\n")

# Прогнозирование на тестовой выборке
test_pred <- predict(model, test_data)
test_accuracy <- mean(round(test_pred) == test_data$vb)
cat("Точность на тестовой выборке:", round(test_accuracy*100, 1), "%\n")

# Прогноз для новых условий (пример)
new_conditions <- data.frame(
  fo = c(57.9, 35.3, 83.0),  # Площадь лесов (%)
  me = c(4.1, 0.0, 7.3),     # Площадь лугов (%)
  bo = c(3.4, 7.9, 11.5)     # Площадь болот (%)
)

future_pred <- predict(model, new_conditions)
cat("Прогнозируемая численность гадюк:", round(future_pred), "\n")
```

{"title":"Основы картографии","markdown":{"yaml":{"title":"Основы картографии","format":"html"},"headingText":"Введение","containsRefs":false,"markdown":"\n\n\nЭто занятие — про то, как превратить координаты и уловы в честные карты, которые помогают думать, а не просто украшать отчёт. Мы будем работать в R, потому что он дисциплинирует: каждая операция видна, воспроизводима и проверяема, а любой красивый результат можно разобрать до строчки кода. В логике курса мы пойдём от простого к сложному: от базовой точечной карты распределения уловов — к картам с береговой линией, к учёту нулевых уловов и разбиению по квартилям, к фасетам для сравнения лет, к локальной автокорреляции (LISA), к промысловым картам и картограммам, и, наконец, к гибридным решениям, где данные съёмок и промысла встречаются на одной карте. В конце добавим «служебные» карты для раздела «Материал и методы» и карты с врезками — тот самый минимум, который ожидают рецензенты. В духе Ноама Хомского напомним: карта — это не территория, а модель наших предположений; чем прозрачнее исходные решения (данные, проекция, шкалы), тем меньше поводов для самообмана.\n\nВ основе любой качественной карты лежат три вещи: корректная подготовка данных, грамотная картографическая основа и осмысленная визуальная метафора. Сначала убеждаемся, что координаты в единой системе (WGS84), отсутствуют перепутанные долготы и широты, а нулевые уловы размечены как нули, а не пропуски. Затем выбираем основу: береговая линия и полигоны стран из rnaturalearth, при необходимости батиметрия из marmap, корректная проекция для расстояний и площадей (в задачах локального масштаба — UTM). И только после этого — визуальные решения: непрерывные шкалы с воспринимаемо ровной палитрой (viridis), понятная легенда, единицы измерения, подписи, масштабная линейка и, где уместно, стрелка «север». Важный этический момент: размер и цвет несут разные смыслы; не заставляйте читателя угадывать, что из них интенсивность, а что — частота или категория. Нулевые уловы — это не «мусор», а сильный сигнал об отсутствии; показывайте их отдельным слоем и символом, чтобы не переоценивать «горячие точки».\n\nПо мере усложнения задач мы добавляем структуру. Разбиение по квартилям даёт сопоставимость между годами, фасеты позволяют увидеть межгодовую динамику без наложения, LISA подсвечивает кластеры высокой и низкой интенсивности и аномалии, где значение точки расходится с окружением. Картограммы или сеточная агрегация помогают уйти от шумной точки к устойчивой картинке на уровне промысловых квадратов; гибридные карты честно показывают возможный разрыв между научной съёмкой и промыслом. Здесь важно помнить про «анатомию ошибки»: выбор размера ячейки, числа соседей в LISA, границ квартилей и способа агрегации — это не техническая деталь, а модельное решение; фиксируйте его явно, чтобы завтра вы сами могли воспроизвести сегодняшнюю карту.\n\nПрактический результат должен быть пригоден для публикации. Все примеры в R можно экспортировать в векторные форматы (PDF, SVG) и растровые (PNG, TIFF) с высоким разрешением, где подписи, легенды и цвета сохраняют читаемость при печати. В скрипте мы покажем, как автоматически подбирать границы области с небольшим буфером — и почему чаще лучше задать их вручную, чтобы карта не «гуляла» между рис. 1 и рис. 2. Мы разберём, как организовать легенды, чтобы они не спорили друг с другом при фасетировании, как синхронизировать цветовые шкалы между годами, чтобы зелёное «вчера» и зелёное «сегодня» значили одно и то же, и как использовать врезку, чтобы читатель понял контекст региона, а не искал его на глобусе.\n\nНаконец, про дисциплину и воспроизводимость. Данные берём из одного файла ([KARTOGRAPHIC.xlsx](https://mombus.github.io/cRab/data/KARTOGRAPHIC.xlsx)), зависимости минимальны и явно перечислены, рабочая директория задаётся в начале, все параметры карт — на виду. Такой стиль не только ускоряет работу, но и воспитывает привычку проверять себя: если карта получилась слишком «красивая», вернитесь и взгляните на нули, на шкалы, на проекцию, на подписи. Хорошая карта в рыбохозяйственной и гидробиологической практике — это не \"арт‑объект\", а прозрачный инструмент коммуникации: с ней удобно спорить, её можно повторить и на её основе можно принять решение. Если к концу занятия вы без подсказок соберёте три‑четыре типовых карты для результатов и одну аккуратную для «Материалов и методов», задача занятия выполнена.\n\n**Для работы скрипта:**\n\n1.  Скачайте файл данных ([KARTOGRAPHIC.xlsx](https://mombus.github.io/cRab/data/KARTOGRAPHIC.xlsx))\n\n2.  Установите рабочую директорию в setwd()\n\n3.  Установите необходимые пакеты : **`install.packages(c(\"readxl\", \"tidyverse, \"rnaturalearth\", \"sf\", \"viridis\" ))`** `и др.`\n\n## Карта распределения уловов в съемке\n\nДанная карта демонстрирует распределение уловов краба в ходе исследовательской съемки. На ней отображены точки наблюдений, где размер и цвет точек соответствуют величине улова.\n\n![Рис. 1.: Пример карты распределения уловов в съемке](images/KARTOGRAPH1.jpg){fig-align=\"center\" width=\"70%\"}\n\nВ скрипте границы карты (лимиты) определяются автоматически с буфером, но чаще их просто устанавливают вручную, например:\n\n```{r}\n#| output: false\n#| eval: false\nxmin <- 37\nxmax <- 49\nymin <- 68.5\nymax <- 70.5\n```\n\nСкрипт карты целиком:\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка памяти и установка рабочей папки\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Загрузка необходимых пакетов\nlibrary(tidyverse)  # Обработка данных и визуализация\nlibrary(readxl)     # Чтение Excel-файлов\n\n# 1. ЗАГРУЗКА ДАННЫХ\nDATA <- read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(YEAR == 2023, SURV == \"CRAB\")  # Фильтр для 2023 года и съемки CRAB\n\n# 2. АВТОМАТИЧЕСКИЙ РАСЧЕТ ГРАНИЦ С БУФЕРОМ 5%\n# Расчет диапазонов координат\nx_range <- range(DATA$X, na.rm = TRUE)\ny_range <- range(DATA$Y, na.rm = TRUE)\n\n# Расчет 5% буфера\nx_buffer <- 0.05 * diff(x_range)\ny_buffer <- 0.05 * diff(y_range)\n\n# Установка границ с буфером\nxmin <- x_range[1] - x_buffer\nxmax <- x_range[2] + x_buffer\nymin <- y_range[1] - y_buffer\nymax <- y_range[2] + y_buffer\n\n# 3. ВИЗУАЛИЗАЦИЯ ТОЧЕК\nggplot(DATA) +\n  # Точки наблюдений с размером и цветом по величине улова\n  geom_point(aes(x = X, y = Y, size = PROM, color = PROM), alpha = 0.7) +\n  \n  # Цветовая шкала (виридисная палитра)\n  scale_color_viridis_c(option = \"H\", name = \"Улов\") +\n  \n  # Шкала размеров точек\n  scale_size_continuous(name = \"Улов\") +\n  \n  # Настройка границ с автоматически рассчитанными значениями\n  coord_cartesian(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +\n  \n  # Подписи осей\n  labs(x = \"Долгота\", y = \"Широта\", \n       title = \"Распределение уловов краба\", \n       subtitle = \"2023 год, тип съемки: CRAB\") +\n  \n  # Оформление графика\n  theme_bw() +\n  theme(\n    panel.grid = element_line(color = \"grey90\"),\n    legend.position = \"bottom\"\n  )\n\n```\n\n## Карта распределения уловов в съемке с береговой линией\n\n![Рис. 2.: Пример карты распределения уловов в съемке с береговой линией](images/KARTOGRAPH2.jpg){fig-align=\"center\" width=\"70%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())  # Удаление всех объектов из глобального окружения\nsetwd(\"C:/COURSES/KARTOGRAPH/\")  # Установка рабочей директории\n\n# Загрузка необходимых библиотек\nlibrary(rnaturalearth)  # Для получения векторных карт мира\nlibrary(tidyverse)      # Коллекция пакетов для работы с данными\nlibrary(sf)             # Пространственный анализ\n\n####### ЗАГРУЗКА ДАННЫХ И ПОДГОТОВКА ПРОСТРАНСТВЕННЫХ ОБЪЕКТОВ ################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(YEAR == 2023, SURV == \"CRAB\")  # Фильтр данных за 2023 год по типу съемки\n\n# Получение границ России\nrussia <- ne_countries(scale = 10, country = \"Russia\")  # Загрузка векторных границ (масштаб 1:10м)\n\n# Установка границ отображаемой области (долгота/широта)\nxmin=37  # Западная граница\nxmax=49  # Восточная граница\nymin=68.5 # Южная граница\nymax=70.5 # Северная граница\n\n# Построение карты\nggplot() +\n  # Базовая карта России\n  geom_sf(data = russia, fill = \"lightblue\") + \n  # Ограничение области отображения\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +\n  # Точки наблюдений с размером и цветом по переменной PROM\n  geom_point(aes(x = X, y = Y, size = PROM, color = PROM),\n             data = DATA, alpha = 0.6) +\n  # Цветовая шкала (viridis, вариант H)\n  scale_color_viridis_c(option = \"H\")\n```\n\n## Карта распределения уловов, включая нулевые\n\n![Рис. 3.: Карта распределения уловов, включая нулевые](images/KARTOGRAPH3.jpg){fig-align=\"center\" width=\"70%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())  # Удаление всех объектов из глобального окружения\nsetwd(\"C:/COURSES/KARTOGRAPH/\")  # Установка рабочей директории\n\n# Загрузка необходимых библиотек\nlibrary(rnaturalearth)  # Для получения векторных карт мира\nlibrary(tidyverse)      # Коллекция пакетов для работы с данными\nlibrary(sf)             # Пространственный анализ\n\n####### ЗАГРУЗКА ДАННЫХ И ПОДГОТОВКА ПРОСТРАНСТВЕННЫХ ОБЪЕКТОВ ################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(YEAR == 2023, SURV == \"CRAB\")  # Фильтр данных за 2023 год по типу съемки\n\n# Получение границ России\nrussia <- ne_countries(scale = 10, country = \"Russia\")  # Загрузка векторных границ (масштаб 1:10м)\n\n# Установка границ отображаемой области (долгота/широта)\nxmin=37  # Западная граница\nxmax=49  # Восточная граница\nymin=68.5 # Южная граница\nymax=70.5 # Северная граница\n\n# Построение карты\nggplot() +\n  # Базовая карта России\n  geom_sf(data = russia, fill = \"lightblue\") + \n  # Ограничение области отображения\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +\n  # Точки наблюдений с размером и цветом по переменной PROM (ненулевые уловы)\n  geom_point(aes(x = X, y = Y, size = PROM, color = PROM),\n             data = filter(DATA, PROM > 0), alpha = 0.6) +\n  # Точки для нулевых уловов (крестики)\n  geom_point(aes(x = X, y = Y),\n             data = filter(DATA, PROM == 0),\n             shape = 4, size = 1, stroke = 1, color = \"black\") +\n  # Цветовая шкала (viridis, вариант H)\n  scale_color_viridis_c(option = \"H\")\n```\n\n## Карта распределения уловов, распределенных по квартилям\n\n![Рис. 4.: Карта распределения уловов, распределенных по квартилям](images/KARTOGRAPH4.jpg){fig-align=\"center\" width=\"70%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Загрузка необходимых библиотек\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(sf)\n\n####### ЗАГРУЗКА ДАННЫХ И ПОДГОТОВКА ПРОСТРАНСТВЕННЫХ ОБЪЕКТОВ ################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(YEAR == 2023, SURV == \"CRAB\")\n\n# Получение границ России\nrussia <- ne_countries(scale = 10, country = \"Russia\") %>% \n  st_as_sf()\n\n# Установка границ отображаемой области\nxmin=37; xmax=49; ymin=68.5; ymax=70.5\n\n####### ПОДГОТОВКА ДАННЫХ ДЛЯ ВИЗУАЛИЗАЦИИ ################\n# Вычисляем квартили отдельно\nquantiles <- quantile(DATA$PROM[DATA$PROM > 0], probs = seq(0, 1, 0.25))\n\n# Создаем 4 категории с реальными диапазонами значений\nnonzero_data <- DATA %>% \n  filter(PROM > 0) %>%\n  mutate(\n    PROM_cat = cut(\n      PROM,\n      breaks = quantiles,\n      include.lowest = TRUE,\n      labels = c(\n        sprintf(\"%.1f - %.1f\", quantiles[1], quantiles[2]),\n        sprintf(\"%.1f - %.1f\", quantiles[2], quantiles[3]),\n        sprintf(\"%.1f - %.1f\", quantiles[3], quantiles[4]),\n        sprintf(\"%.1f - %.1f\", quantiles[4], quantiles[5])\n      )\n    )\n  )\n\n# Построение карты\nggplot() +\n  # Базовая карта России\n  geom_sf(data = russia, fill = \"lightblue\", color = \"gray40\") + \n  # Ограничение области отображения\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +\n  # Точки наблюдений с категориальным размером\n  geom_point(\n    data = nonzero_data,\n    aes(x = X, y = Y, size = PROM_cat, color = PROM),\n    alpha = 0.7\n  ) +\n  # Точки для нулевых уловов (крестики)\n  geom_point(\n    data = filter(DATA, PROM == 0),\n    aes(x = X, y = Y),\n    shape = 4, size = 1.2, stroke = 1, color = \"black\"\n  ) +\n  # Цветовая шкала (непрерывная)\n  scale_color_viridis_c(option = \"H\", name = NULL) +\n  # Ручная настройка размеров для категорий\n  scale_size_manual(\n    name = \"Улов (экз./ч)\",\n    values = c(2, 4, 6, 8),  # Размеры точек для категорий\n    drop = FALSE\n  ) +\n  # Настройки темы\n  theme_bw() +\n  labs(\n    title = \"Распределение уловов краба (2023)\",\n    subtitle = \"Черные крестики - нулевые уловы\",\n    x = \"Долгота\", \n    y = \"Широта\"\n  ) +\n  theme(\n    panel.grid = element_line(color = \"gray90\"),\n    legend.position = \"bottom\"\n  )\n```\n\n## Карта распределения уловов по фасеткам\n\n![Рис. 5.: Карта распределения уловов по фасеткам](images/KARTOGRAPH5.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Установка и подключение библиотек (если не установлено — раскомментируй)\n# install.packages(c(\"rnaturalearth\", \"tidyverse\", \"sf\", \"readxl\", \"viridis\"))\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(readxl)\nlibrary(viridis)\n\n####### ЗАГРУЗКА ДАННЫХ И ПОДГОТОВКА ПРОСТРАНСТВЕННЫХ ОБЪЕКТОВ ################\n\n# Чтение и фильтрация данных (убираем фильтр по году, чтобы работать со всеми годами)\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(SURV == \"CRAB\")\n\n# Получение границ России\nrussia <- ne_countries(scale = 10, country = \"Russia\") %>% \n  st_as_sf()\n\n# Установка границ отображаемой области\nxmin <- 37; xmax <- 49\nymin <- 68.5; ymax <- 70.5\n\n# Вычисляем общие квартили для всех лет (чтобы категории были сопоставимыми)\nquantiles <- quantile(DATA$PROM[DATA$PROM > 0], probs = seq(0, 1, 0.25))\n\n# Создаем данные с ненулевыми уловами и категориями\nnonzero_data <- DATA %>%\n  filter(PROM > 0) %>%\n  mutate(\nPROM_cat = cut(\n  PROM,\n  breaks = c(-Inf, quantiles[2:4], Inf),\n  include.lowest = TRUE,\n  labels = c(\n    sprintf(\"%d - %d\", floor(quantiles[1]), floor(quantiles[2])),\n    sprintf(\"%d - %d\", floor(quantiles[2]), floor(quantiles[3])),\n    sprintf(\"%d - %d\", floor(quantiles[3]), floor(quantiles[4])),\n    sprintf(\"%d - %d\", floor(quantiles[4]), floor(max(DATA$PROM)))\n  )\n)\n  )\n\n# Отдельно выделяем точки с нулевым уловом\nzero_data <- DATA %>% filter(PROM == 0)\n\n####### ВИЗУАЛИЗАЦИЯ ################\n\n# Фасеточная карта по годам\nggplot() +\n  # Граница России\n  geom_sf(data = russia, fill = \"lightblue\", color = \"gray40\") +\n  \n  # Ограничение области отображения\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +\n  \n  # Точки с уловом\n  geom_point(\n    data = nonzero_data,\n    aes(x = X, y = Y, size = PROM_cat, color = PROM),\n    alpha = 0.7\n  ) +\n  \n  # Нулевые уловы — крестики\n  geom_point(\n    data = zero_data,\n    aes(x = X, y = Y),\n    shape = 4, size = 1.2, stroke = 1, color = \"black\"\n  ) +\n  \n  # Цветовая шкала\n  scale_color_viridis_c(option = \"H\", name = NULL) +\n  \n  # Настройка размеров точек по категориям\n  scale_size_manual(\n    name = \"Улов (экз./ч)\",\n    values = c(1, 2,4, 6),\n    drop = FALSE\n  ) +\n  \n  # Фасет по годам\n  facet_wrap(~ YEAR, ncol = 2, labeller = label_value) +\n  \n  # Тема и заголовок\n  theme_bw() +\n  labs(\n    title = \"Распределение уловов краба по годам\",\n    subtitle = NULL,\n    x = \"Долгота\", \n    y = \"Широта\"\n  ) +\n  theme(\n    panel.grid = element_line(color = \"gray90\"),\n    legend.position = \"bottom\"\n  )\n```\n\n## Карта распределения уловов с автокорреляцией LISA\n\nАлгоритм LISA (Local Indicators of Spatial Association) представляет собой инструмент выявления пространственных закономерностей на уровне отдельных объектов. В отличие от глобальных показателей, которые дают обобщенную оценку автокорреляции для всего региона, LISA позволяет идентифицировать конкретные кластеры и аномалии, определяя, какие именно участки вносят основной вклад в пространственную структуру данных. В контексте анализа промысловых данных краба за 2023 год, этот метод позволяет выявить зоны концентрации уловов и территории с аномальными показателями.\n\nСуть кластеризации по методу LISA заключается в сравнении значения каждого конкретного объекта (точки съемки) со значениями его соседей. Алгоритм последовательно выполняет несколько ключевых шагов: сначала создается матрица пространственных весов, где для каждой точки определяются k ближайших соседей (в данном случае k=4). Затем для каждой точки рассчитывается локальный индекс Морана (Ii), который количественно оценивает степень сходства между значением в точке и ее окружением. Статистическая значимость кластеризации проверяется через p-значение, полученное методом Монте-Карло.\n\nБиологическая интерпретация выявленных кластеров основана на их классификации:\n\n-   **High-High** (красные точки): зоны высокой концентрации уловов, окруженные такими же продуктивными участками — потенциальные \"горячие точки\" скопления краба\n\n-   **Low-Low** (синие точки): территории с устойчиво низкими уловами, окруженные аналогичными участками — возможные акватории с неблагоприятными условиями\n\n-   **High-Low** (розовые точки): аномалии высоких уловов на фоне низкопродуктивного окружения — требуют проверки на ошибки данных или изучения уникальных локальных факторов\n\n-   **Low-High** (голубые точки): участки неожиданно низких уловов в окружении продуктивных зон — возможные признаки перелова или деградации среды\n\nВизуализация результатов (рис. 6) сочетает картографическую основу с семантикой цвета и размера: размер точки пропорционален величине улова (PROM), а цвет отражает тип кластера. Серые точки обозначают территории без статистически значимой автокорреляции. Ограничение области исследования координатами 37-49° в.д. и 68.5-70.5° с.ш. фокусирует анализ на ключевом промысловом районе, а преобразование в проекцию UTM (32638) обеспечивает точность расчетов расстояний.\n\nПрактическая ценность анализа заключается в возможности целевого управления промыслом: выявленные кластеры High-High могут стать объектами особого мониторинга для предотвращения перелова, тогда как зоны Low-Low требуют изучения причин низкой продуктивности (например, исследования донных сообществ или океанографических условий). Аномальные точки (High-Low/Low-High) служат индикаторами для выборочного контроля достоверности данных. Такой подход переводит сырые данные съемки в пространственно-стратифицированную основу для принятия управленческих решений, позволяя оптимизировать промысловое усилие и минимизировать воздействие на уязвимые участки донных экосистем.\n\n![Рис. 6.: Карта распределения уловов с автокорреляцией LISA](images/KARTOGRAPH6.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Загрузка библиотек\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(spdep)\nlibrary(ggspatial)\nlibrary(readxl)\n\n# 1. ЗАГРУЗКА И ПОДГОТОВКА ДАННЫХ\nDATA <- read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(YEAR == 2023, SURV == \"CRAB\")\n\n# Проверка названий колонок\nprint(names(DATA))  # Убедитесь, что координаты названы правильно\n\n# Преобразование в пространственные данные (замените X/Y на ваши названия)\npoints_sf <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# 2. ПОЛУЧЕНИЕ КАРТЫ РОССИИ\n# Задаем границы области\nxmin <- 37\nxmax <- 49\nymin <- 68.5\nymax <- 70.5\n\n# Создаём ограничивающий прямоугольник\nbbox <- st_bbox(c(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), crs = 4326)\nbbox_poly <- st_as_sfc(bbox)\n\n# Карта России\nrussia <- ne_countries(country = \"Russia\", scale = 10) %>% \n  st_as_sf() %>% \n  st_crop(bbox)  # Обрезка без st_intersection\n\n# 3. ПОДГОТОВКА ТОЧЕК\n# Удаление дубликатов по координатам\ncoords <- st_coordinates(points_sf)\npoints_sf <- points_sf[!duplicated(coords), , drop = FALSE]\n\n# Перевод в UTM\npoints_utm <- st_transform(points_sf, crs = 32638)\n\n# 4. АНАЛИЗ LISA\n# Матрица весов\nknn <- knearneigh(points_utm, k = 4)\nnb <- knn2nb(knn)\nlistw <- nb2listw(nb, style = \"W\")\n\n# Локальный Моран\nlocal_moran <- localmoran(points_utm$PROM, listw)\n\n# Добавляем кластеры\npoints_utm <- points_utm %>%\n  mutate(\n    Local_I = local_moran[, \"Ii\"],\n    P_value = local_moran[, \"Pr(z != E(Ii))\"],\n    Mean_PROM = mean(PROM, na.rm = TRUE),  # Добавляем среднее значение\n    Cluster = case_when(\n      Local_I > 0 & PROM > Mean_PROM ~ \"High-High\",\n      Local_I > 0 & PROM <= Mean_PROM ~ \"Low-Low\",  # Включаем PROM == 0\n      Local_I < 0 & PROM > Mean_PROM ~ \"High-Low\",\n      Local_I < 0 & PROM <= Mean_PROM ~ \"Low-High\",  # PROM == 0 попадает сюда\n      TRUE ~ \"Not significant\"\n    )\n  )\n\n# Обратно в WGS84\npoints_result <- st_transform(points_utm, crs = 4326)\n\n# 5. ВИЗУАЛИЗАЦИЯ\ncluster_colors <- c(\n  \"High-High\" = \"red\",\n  \"Low-Low\" = \"blue\",\n  \"High-Low\" = \"pink\",\n  \"Low-High\" = \"lightblue\",\n  \"Not significant\" = \"gray\"\n)\n\nggplot() +\n  # Карта России\n  geom_sf(data = russia, fill = \"lightblue\", color = \"black\") +\n  \n  # Все точки (включая PROM == 0) — в одном слое\n  geom_sf(\n    data = points_result,\n    aes(color = Cluster, size = PROM),\n    alpha = 0.8\n  ) +\n  \n  # Настройки координат и масштаба\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax), expand = FALSE) +\n  annotation_scale(location = \"tl\", width_hint = 0.3) +\n  \n  # Цвет и размер\n  scale_color_manual(values = cluster_colors) +\n  scale_size_continuous(range = c(1, 8), name = \"Величина улова\") +\n  \n  # Заголовки и тема\n  labs(\n    title = \"Пространственная автокорреляция уловов краба (LISA)\",\n    subtitle = \"2023 год, тип съемки: CRAB\",\n    color = \"Тип кластера\"\n  ) +\n  \ntheme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5),\n    legend.position = \"right\",\n    panel.border = element_rect(colour = \"black\", size = 1, fill = NA)  # Рамка вокруг карты\n  )\n```\n\n## Карта распределения уловов с автокорреляцией LISA по фасеткам\n\n![Рис. 7.: Карта распределения уловов с автокорреляцией LISA по фасеткам](images/KARTOGRAPH7.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка памяти и установка рабочей папки\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Загрузка необходимых пакетов\nlibrary(rnaturalearth)  # Географические карты\nlibrary(tidyverse)      # Обработка данных и визуализация\nlibrary(sf)             # Пространственные данные\nlibrary(spdep)          # Пространственная статистика\nlibrary(ggspatial)      # Дополнения для карт в ggplot\nlibrary(readxl)         # Чтение Excel-файлов\n\n# 1. ЗАГРУЗКА И ПРЕОБРАЗОВАНИЕ ДАННЫХ\n# - Чтение данных из Excel\n# - Фильтрация только данных по крабу\nDATA <- read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(SURV == \"CRAB\")\n\n# Преобразование в пространственный объект с координатами\npoints_sf <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# 2. ПОДГОТОВКА КАРТОГРАФИЧЕСКОЙ ОСНОВЫ\n# - Определение границ области исследования\nxmin <- 37; xmax <- 49; ymin <- 68.5; ymax <- 70.7\n\n# - Создание ограничивающего прямоугольника\nbbox <- st_bbox(c(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), crs = 4326)\n\n# - Загрузка и обрезка карты России по заданным границам\nrussia <- ne_countries(country = \"Russia\", scale = 10) %>% \n  st_as_sf() %>% \n  st_crop(bbox)\n\n# 3. ФУНКЦИЯ ДЛЯ ПРОСТРАНСТВЕННОГО АНАЛИЗА ПО ГОДАМ\nanalyze_year <- function(data_year) {\n  # Удаление дубликатов координат\n  coords <- st_coordinates(data_year)\n  data_year <- data_year[!duplicated(coords), , drop = FALSE]\n  \n  # Перепроецирование в UTM для точных расчетов\n  points_utm <- st_transform(data_year, crs = 32638)\n  \n  # Построение матрицы пространственных весов (4 ближайших соседа)\n  knn <- knearneigh(points_utm, k = 4)\n  nb <- knn2nb(knn)\n  listw <- nb2listw(nb, style = \"W\")  # Стандартизованная матрица\n  \n  # Расчет локальной пространственной автокорреляции (LISA)\n  local_moran <- localmoran(points_utm$PROM, listw)\n  \n  # Классификация кластеров на основе результатов\n  points_utm <- points_utm %>%\n    mutate(\n      Local_I = local_moran[, \"Ii\"],\n      P_value = local_moran[, \"Pr(z != E(Ii))\"],\n      Mean_PROM = mean(PROM, na.rm = TRUE),\n      Cluster = case_when(\n        Local_I > 0 & PROM > Mean_PROM ~ \"High-High\",     # Горячая точка\n        Local_I > 0 & PROM <= Mean_PROM ~ \"Low-Low\",      # Холодная точка\n        Local_I < 0 & PROM > Mean_PROM ~ \"High-Low\",      # Выброс (высокий среди низких)\n        Local_I < 0 & PROM <= Mean_PROM ~ \"Low-High\",     # Выброс (низкий среди высоких)\n        TRUE ~ \"Not significant\"                          # Незначимые\n      )\n    )\n  \n  # Возврат в географические координаты\n  st_transform(points_utm, crs = 4326)\n}\n\n# 4. ОБРАБОТКА ДАННЫХ ПО ГОДАМ\n# - Разделение данных по годам\n# - Применение анализа для каждого года\n# - Объединение результатов\nresults_list <- DATA %>%\n  group_split(YEAR) %>% \n  lapply(function(group) {\n    analyze_year(st_as_sf(group, coords = c(\"X\", \"Y\"), crs = 4326))\n  }) %>%\n  bind_rows()\n\n# 5. КАТЕГОРИЗАЦИЯ УЛОВОВ\n# - Расчет квантилей для всего набора данных\nPROM_breaks <- quantile(results_list$PROM, \n                         probs = c(0, 0.25, 0.5, 0.75, 1), \n                         na.rm = TRUE) %>% \n  round(1)  # Округление значений\n\n# - Создание меток с реальными диапазонами\nPROM_labels <- sprintf(\"%.1f - %.1f\", PROM_breaks[1:4], PROM_breaks[2:5])\n\n# - Добавление категорий уловов в данные\nresults_list <- results_list %>%\n  mutate(\n    PROM_category = cut(\n      PROM, \n      breaks = PROM_breaks, \n      labels = PROM_labels,\n      include.lowest = TRUE\n    )\n  )\n\n# 6. ВИЗУАЛИЗАЦИЯ РЕЗУЛЬТАТОВ\n# Цветовая схема для типов кластеров\ncluster_colors <- c(\n  \"High-High\" = \"red\",       # Горячие точки\n  \"Low-Low\" = \"blue\",        # Холодные точки\n  \"High-Low\" = \"pink\",       # Выбросы высокие\n  \"Low-High\" = \"lightblue\",  # Выбросы низкие\n  \"Not significant\" = \"gray\" # Незначимые\n)\n\n# Построение карты\nggplot(data = results_list) +\n  # Базовая карта России\n  geom_sf(data = russia, fill = \"#E8E5D6\", color = \"black\", inherit.aes = FALSE) +\n  \n  # Точки наблюдений с цветом по кластерам и размером по уловам\n  geom_sf(aes(color = Cluster, size = PROM_category), alpha = 0.8) +\n  \n  # Разделение на панели по годам\n  facet_wrap(~ YEAR, ncol = 2) +\n  \n  # Установка границ карты\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax), expand = FALSE) +\n  \n  # Настройка легенды для кластеров\n  scale_color_manual(\n    values = cluster_colors,\n    name = \"Тип кластера\",\n    guide = guide_legend(nrow = 2)\n  ) +\n  \n  # Настройка легенды для уловов (реальные диапазоны)\n  scale_size_manual(\n    name = \"Величина улова\",\n    values = c(1, 2, 3, 5),  # Размеры точек для 4-х категорий\n    breaks = levels(results_list$PROM_category),\n    guide = guide_legend(nrow = 2)\n  ) +\n  \n  # Заголовки и подписи\n  labs(\n    title = \"Пространственная автокорреляция уловов краба (LISA)\",\n    subtitle = \"Тип съемки: CRAB\"\n  ) +\n  \n  # Оформление графика\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(size = 9, margin = margin(t = 5)),\n    axis.text.y = element_text(size = 9, angle = 90, hjust = 0.5, margin = margin(r = 5)),\n    panel.background = element_rect(fill = \"#F0F8FF\", color = NA),  # Фон океана\n    panel.grid.major = element_line(color = \"grey90\", linetype = \"dotted\"),\n    legend.position = \"bottom\",           # Легенда внизу\n    legend.box = \"horizontal\",            # Горизонтальное расположение\n    panel.border = element_rect(fill = NA, color = \"black\", size = 0.7),\n    strip.background = element_rect(fill = \"white\", color = \"black\", size = 0.7),  # Заголовки панелей\n    strip.text = element_text(size = 11, face = \"bold\")\n  ) +\n  \n  # Разметка осей (долгота с шагом 2°, широта с шагом 1°)\n  scale_x_continuous(\n    breaks = seq(floor(xmin), ceiling(xmax), by = 2),\n    labels = function(x) paste0(x, \"°E\")\n  ) +\n  scale_y_continuous(\n    breaks = seq(floor(ymin), ceiling(ymax), by = 1),  \n    labels = function(y) paste0(y, \"°N\")\n  )\n```\n\n## Промысловые карты с квартильным распределением уловов\n\n![Рис. 8.: Промысловые карты с квартильным распределением уловов](images/KARTOGRAPH8.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Загрузка необходимых библиотек\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(sf)\n\n####### ЗАГРУЗКА ДАННЫХ И ПОДГОТОВКА ПРОСТРАНСТВЕННЫХ ОБЪЕКТОВ ################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"FISHERY\") %>% \n  filter(YEAR == 2023)\n\n# Получение границ России\nrussia <- ne_countries(scale = 10, country = \"Russia\") %>% \n  st_as_sf()\n\n# Установка границ отображаемой области\nxmin=37; xmax=48; ymin=68.6; ymax=71\n\n####### ПОДГОТОВКА ДАННЫХ ДЛЯ ВИЗУАЛИЗАЦИИ ################\n# Вычисляем квартили отдельно\nquantiles <- quantile(DATA$CPUE[DATA$CPUE > 0], probs = seq(0, 1, 0.25))\n\n# Создаем 4 категории с реальными диапазонами значений\nnonzero_data <- DATA %>% \n  filter(CPUE > 0) %>%\n  mutate(\n    CPUE_cat = cut(\n      CPUE,\n      breaks = quantiles,\n      include.lowest = TRUE,\n      labels = c(\n        sprintf(\"%.1f - %.1f\", quantiles[1], quantiles[2]),\n        sprintf(\"%.1f - %.1f\", quantiles[2], quantiles[3]),\n        sprintf(\"%.1f - %.1f\", quantiles[3], quantiles[4]),\n        sprintf(\"%.1f - %.1f\", quantiles[4], quantiles[5])\n      )\n    )\n  )\n\n# Построение карты\nggplot() +\n  # Базовая карта России\n  geom_sf(data = russia, fill = \"lightblue\", color = \"gray40\") + \n  # Ограничение области отображения\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +\n  # Точки наблюдений с категориальным размером\n  geom_point(\n    data = nonzero_data,\n    aes(x = X, y = Y, size = CPUE_cat, color = CPUE),\n    alpha = 0.7\n  ) +\n  # Точки для нулевых уловов (крестики)\n  geom_point(\n    data = filter(DATA, CPUE == 0),\n    aes(x = X, y = Y),\n    shape = 4, size = 1.2, stroke = 1, color = \"black\"\n  ) +\n  # Цветовая шкала (непрерывная)\n  scale_color_viridis_c(option = \"H\", name = NULL) +\n  # Ручная настройка размеров для категорий\n  scale_size_manual(\n    name = \"CPUE\",\n    values = c(2, 4, 6, 8),  # Размеры точек для категорий\n    drop = FALSE\n  ) +\n  # Настройки темы\n  theme_bw() +\n  labs(\n    title = \"Распределение CPUE краба (2023)\",\n    subtitle = NULL,\n    x = \"Долгота\", \n    y = \"Широта\"\n  ) +\n  theme(\n    panel.grid = element_line(color = \"gray90\"),\n    legend.position = \"bottom\"\n  )\n```\n\n## Промысловые карты с агрегацией в центрах полигонов (промквадратов)\n\n![Рис. 9.: Промысловые карты с агрегацией в центрах полигонов (промквадратов)](images/KARTOGRAPH9.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Загрузка необходимых библиотек\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(sf)\n\n####### ЗАГРУЗКА ДАННЫХ И ПОДГОТОВКА ПРОСТРАНСТВЕННЫХ ОБЪЕКТОВ ################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"FISHERY\") %>% \n  filter(YEAR == 2023)\n\n# Преобразуем CPUE в пространственные точки\nspec_points <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# Карта России\nrussia <- ne_countries(scale = 10, country = \"Russia\") \n\n# Параметры карты и сетки\nxmin <- 32; xmax <- 48; ymin <- 68; ymax <- 72\nxcs <- 1; ycs <- 0.25\n\n\n# Создание основного датафрейма и пространственных объектов\npoints_sf <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# Создание сетки\ngrid_sf <- st_make_grid(points_sf, \n                        cellsize = c(xcs, ycs),\n                        n = c(2 + (xmax - xmin)/xcs, 2 + (ymax - ymin)/ycs),\n                        offset = c(xmin - xcs, ymin - ycs)) %>% \n  st_sf() %>% \n  mutate(cell_id = row_number())\n\n# Присоединяем точки Catch к сетке и агрегируем по ячейкам и годам\nshares_df_catch <- st_join(points_sf, grid_sf) %>% \n  st_drop_geometry() %>% \n  group_by(cell_id, YEAR) %>% \n  summarise(\n    Count = n(),\n    CATCH = mean(CPUE, na.rm = TRUE)\n  ) %>% \n  ungroup()\n\n# Присоединяем статистику Catch к сетке\ngird_shares_catch <- right_join(grid_sf, shares_df_catch, by = \"cell_id\")\n\n\n\n# Центроиды сетки по W\nCENTROIDS_W <- gird_shares_catch %>% \n  st_centroid()\n\n#################### ВИЗУАЛИЗАЦИЯ #########################################\n\nggplot() +\n  # 1. Сетка без заливки\n  geom_sf(data = grid_sf, fill = NA, color = \"grey80\", linewidth = 0.3) +\n  \n  # 2. Границы России\n  geom_sf(data = russia, fill = \"grey95\") +\n  \n  # 3. Центроиды ячеек с CATCH (цвет и размер по значению)\n  geom_sf(\n    data = CENTROIDS_W, \n    aes(size = CATCH, color = CATCH),\n    shape = 16, \n    alpha = 0.7\n  ) +\n  \n  # 4. Цветовая шкала (viridis как в первом скрипте)\n  scale_color_viridis_c(\n    option = \"H\", \n    name = NULL,\n    limits = c(0, max(gird_shares_catch$CATCH, na.rm = TRUE))\n  ) +\n  \n  # 5. Шкала размера центроидов\n  scale_size_continuous(\n    range = c(1, 10), \n    name = \"CPUE\"\n  ) +\n  \n  # 6. Обрезаем область отображения\n  coord_sf(\n    xlim = c(xmin, xmax), \n    ylim = c(ymin, ymax),\n    expand = FALSE  # Точное соответствие границ\n  ) +\n  \n  # 7. Шкалы для осей координат\n  scale_x_continuous(\n    breaks = seq(xmin, xmax, by = 2),  # Метки каждые 2 градуса\n    name = \"Долгота\"\n  ) +\n  scale_y_continuous(\n    breaks = seq(ymin, ymax, by = 0.5),  # Метки каждые 0.5 градуса\n    name = \"Широта\"\n  ) +\n  \n  # 8. Тема оформления\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank(),\n    legend.position = \"bottom\",\n    panel.border = element_rect(fill = NA, color = \"black\", size = 0.5),\n    # Добавляем сетку для осей координат\n    panel.grid.major = element_line(color = \"gray90\", linewidth = 0.2)\n  ) +\n  \n  # 9. Явное указание названий осей (дублируем для надежности)\n  labs(x = \"Долгота\", y = \"Широта\")\n```\n\n## Промысловые карты - картограммы\n\n![Рис. 10.: Промысловые карты - картограммы](images/KARTOGRAPH10.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Загрузка необходимых библиотек\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(sf)\n\n####### ЗАГРУЗКА ДАННЫХ И ПОДГОТОВКА ПРОСТРАНСТВЕННЫХ ОБЪЕКТОВ ################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"FISHERY\") %>% \n  filter(YEAR == 2023)\n\n# Преобразуем CPUE в пространственные точки\nspec_points <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# Карта России\nrussia <- ne_countries(scale = 10, country = \"Russia\") \n\n# Параметры карты и сетки\nxmin <- 32; xmax <- 48; ymin <- 68; ymax <- 72\nxcs <- 1; ycs <- 0.25\n\n\n# Создание основного датафрейма и пространственных объектов\npoints_sf <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# Создание сетки\ngrid_sf <- st_make_grid(points_sf, \n                        cellsize = c(xcs, ycs),\n                        n = c(2 + (xmax - xmin)/xcs, 2 + (ymax - ymin)/ycs),\n                        offset = c(xmin - xcs, ymin - ycs)) %>% \n  st_sf() %>% \n  mutate(cell_id = row_number())\n\n# Присоединяем точки Catch к сетке и агрегируем по ячейкам и годам\nshares_df_catch <- st_join(points_sf, grid_sf) %>% \n  st_drop_geometry() %>% \n  group_by(cell_id, YEAR) %>% \n  summarise(\n    Count = n(),\n    CATCH = mean(CPUE, na.rm = TRUE)\n  ) %>% \n  ungroup()\n\n# Присоединяем статистику Catch к сетке\ngird_shares_catch <- right_join(grid_sf, shares_df_catch, by = \"cell_id\")\n\n\n\n# Центроиды сетки по W\nCENTROIDS_W <- gird_shares_catch %>% \n  st_centroid()\n\n#################### ВИЗУАЛИЗАЦИЯ #########################################\n\nggplot() +\n  # 1. Сетка без заливки\n  geom_sf(data = grid_sf, fill = NA, color = \"grey80\", linewidth = 0.3) +\n  \n  # 2. Границы России\n  geom_sf(data = russia, fill = \"grey95\") +\n  \n  # 3. Заливка по улову с палитрой viridis option \"H\"\n  geom_sf(data = gird_shares_catch, aes(fill = CATCH), color = NA) +\n  \n  # 4. Цветовая шкала viridis option \"H\" для заливки\n  scale_fill_viridis_c(\n    option = \"H\", \n    name = \"CPUE\",\n    limits = c(0, max(gird_shares_catch$CATCH, na.rm = TRUE)),\n    na.value = \"transparent\"\n  ) +\n  \n  # 5. Обрезаем область отображения\n  coord_sf(\n    xlim = c(xmin, xmax), \n    ylim = c(ymin, ymax),\n    expand = FALSE\n  ) +\n  \n  # 6. Шкалы для осей координат\n  scale_x_continuous(\n    breaks = seq(xmin, xmax, by = 2),\n    name = \"Долгота\"\n  ) +\n  scale_y_continuous(\n    breaks = seq(ymin, ymax, by = 0.5),\n    name = \"Широта\"\n  ) +\n  \n  # 7. Тема оформления\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank(),\n    legend.position = \"bottom\",\n    panel.border = element_rect(fill = NA, color = \"black\", size = 0.5),\n    panel.grid.major = element_line(color = \"gray90\", size = 0.2)\n  ) +\n  labs(x = \"Долгота\", y = \"Широта\")\n```\n\n## Промысловые карты - картограммы по фасеткам\n\n![Рис. 11.: Промысловые карты - картограммы по фасеткам](images/KARTOGRAPH11.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(ggspatial)\nlibrary(sf)\n\n####### READ DATA AND PREPARE SPATIAL OBJECTS ############################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"FISHERY\") %>% \n  filter(YEAR > 2020 & YEAR < 2025)\n\n# Карта России\nrussia <- ne_countries(scale = 10, country = \"Russia\") \n\n# Параметры карты и сетки\nxmin <- 32; xmax <- 48; ymin <- 68; ymax <- 72\nxcs <- 2; ycs <- 0.5\n\n# Преобразование в пространственные объекты\npoints_sf <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# Создание сетки\ngrid_sf <- st_make_grid(\n  points_sf,\n  cellsize = c(xcs, ycs),\n  n = c(2 + (xmax - xmin)/xcs, 2 + (ymax - ymin)/ycs),\n  offset = c(xmin - xcs, ymin - ycs)\n) %>% \n  st_sf() %>% \n  mutate(cell_id = row_number())\n\n# Агрегация данных по сетке и годам\nshares_df_catch <- points_sf %>% \n  st_join(grid_sf) %>% \n  st_drop_geometry() %>% \n  group_by(cell_id, YEAR) %>% \n  summarise(CATCH = mean(CPUE, na.rm = TRUE), .groups = 'drop')\n\n# Присоединение статистики к сетке\ngird_shares_catch <- grid_sf %>% \n  right_join(shares_df_catch, by = \"cell_id\")\n\n#################### ВИЗУАЛИЗАЦИЯ #########################################\n\n# Определяем общий максимум CPUE для единой шкалы цветов\ncatch_max <- max(gird_shares_catch$CATCH, na.rm = TRUE)\n\n# Рассчитываем шаг для подписей (в 2 раза реже исходной сетки)\nx_breaks <- seq(xmin, xmax, by = xcs * 2)  # 4 градуса\ny_breaks <- seq(ymin, ymax, by = ycs * 2)  # 1 градус\n\n# Функция для форматирования подписей: пропускаем первую подпись\nformat_labels <- function(breaks) {\n  labels <- paste0(breaks, \"°\")\n  labels[1] <- \"\"  # Пропускаем первую подпись\n  return(labels)\n}\n\nggplot() +\n  # Контуры сетки\n  geom_sf(data = grid_sf, fill = NA, color = \"grey80\", linewidth = 0.3) +\n  \n  # Заливка по улову с цветовой схемой viridis\n  geom_sf(data = gird_shares_catch, aes(fill = CATCH), color = NA) +\n  \n  # Границы России\n  geom_sf(data = russia, fill = \"#E8E5D6\") +\n  \n  # Фасетирование по годам\n  facet_wrap(~ YEAR, nrow = 2) +\n  \n  # Цветовая шкала\n  scale_fill_viridis_c(\n    option = \"H\", \n    name = \"CPUE\",\n    limits = c(0, catch_max),\n    na.value = \"transparent\"\n  ) +\n  \n  # Область отображения\n  coord_sf(\n    xlim = c(xmin, xmax), \n    ylim = c(ymin, ymax),\n    expand = FALSE\n  ) +\n  \n  # Управление подписями осей с символом градуса (пропускаем первую подпись)\n  scale_x_continuous(\n    breaks = x_breaks,\n    labels = format_labels\n  ) +\n  scale_y_continuous(\n    breaks = y_breaks,\n    labels = format_labels\n  ) +\n  \n  # Оформление с тиками на осях\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank(),\n    legend.position = \"bottom\",\n    legend.key.width = unit(2.5, \"cm\"),\n    legend.title = element_text(vjust = 0.8, size = 12),\n    panel.border = element_rect(fill = NA, color = \"black\", size = 0.7),\n    panel.grid.major = element_line(color = \"grey90\", size = 0.2),\n    strip.background = element_rect(fill = \"#E8E5D6\", color = \"black\"),\n    strip.text = element_text(face = \"bold\", size = 12),\n    axis.text.x = element_text(size = 9, angle = 0, margin = margin(t = 5)),\n    axis.text.y = element_text(size = 9, angle = 90, hjust = 0.5, margin = margin(r = 5)),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    \n    # Тики (засечки) на оси\n    axis.ticks = element_line(color = \"black\", size = 0.5),\n    axis.ticks.length = unit(0.2, \"cm\"),\n    axis.ticks.x = element_line(color = \"black\", size = 0.5),\n    axis.ticks.y = element_line(color = \"black\", size = 0.5)\n  ) +\n  \n  # Настройка легенды\n  guides(fill = guide_colorbar(\n    title.position = \"top\",\n    title.hjust = 0.5,\n    barwidth = 15,\n    frame.colour = \"black\",\n    ticks.colour = \"black\"\n  ))\n\n# Сохранение результата\nggsave(\"KARTOGRAPH11.jpg\", \n       device = \"jpeg\", \n       dpi = 300,\n       width = 7,\n       height = 5,\n       units = \"in\")\n```\n\n## Гибридные карты - картограммы и точки (съемка и промысловые данные)\n\n![Рис. 12.: Гибридные карты - картограммы и точки (съемка и промысловые данные)](images/KARTOGRAPH12.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(ggspatial)\nlibrary(sf)\n\n####### READ DATA AND PREPARE SPATIAL OBJECTS ############################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"FISHERY\") %>% \n  filter(YEAR > 2020 & YEAR < 2025)\n\nSURVEY <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(YEAR > 2020 & YEAR < 2025, SURV == \"CRAB\")\n\n# Создание 4 категорий для переменной PROM\nbreaks <- quantile(SURVEY$PROM, \n                   probs = c(0, 0.25, 0.5, 0.75, 1), \n                   na.rm = TRUE)\nSURVEY$PROM_cat <- cut(SURVEY$PROM,\n                       breaks = breaks,\n                       include.lowest = TRUE,\n                       labels = c(\"Q1 (Low)\", \"Q2\", \"Q3\", \"Q4 (High)\"))\n\n# Карта России\nrussia <- ne_countries(scale = 10, country = \"Russia\") \n\n# Параметры карты и сетки\nxmin <- 32; xmax <- 48; ymin <- 68; ymax <- 72\nxcs <- 2; ycs <- 0.5\n\n# Преобразование в пространственные объекты\npoints_sf <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\nsurvey_sf <- st_as_sf(SURVEY, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# Создание сетки\ngrid_sf <- st_make_grid(\n  points_sf,\n  cellsize = c(xcs, ycs),\n  n = c(2 + (xmax - xmin)/xcs, 2 + (ymax - ymin)/ycs),\n  offset = c(xmin - xcs, ymin - ycs)\n) %>% \n  st_sf() %>% \n  mutate(cell_id = row_number())\n\n# Агрегация данных по сетке и годам\nshares_df_catch <- points_sf %>% \n  st_join(grid_sf) %>% \n  st_drop_geometry() %>% \n  group_by(cell_id, YEAR) %>% \n  summarise(CATCH = mean(CPUE, na.rm = TRUE), .groups = 'drop')\n\n# Присоединение статистики к сетке\ngird_shares_catch <- grid_sf %>% \n  right_join(shares_df_catch, by = \"cell_id\")\n\n################### ВИЗУАЛИЗАЦИЯ #########################################\nggplot() +\n  # Контуры сетки\n  geom_sf(data = grid_sf, fill = NA, color = \"grey80\", linewidth = 0.3) +\n  \n  # Заливка по улову (средний CPUE)\n  geom_sf(data = gird_shares_catch, aes(fill = CATCH)) +\n  \n  # Границы России\n  geom_sf(data = russia, fill = \"#E8E5D6\") +\n  \n  # Точки SURVEY: голубые с черной окантовкой\n  geom_sf(data = survey_sf, \n          aes(size = PROM_cat),\n          fill = \"lightblue\",    # Голубая заливка\n          color = \"black\",        # Черная окантовка\n          alpha = 0.7,\n          shape = 21,             # Круг с обводкой\n          stroke = 0.5,           # Толщина окантовки\n          show.legend = \"point\") +\n  \n  # Фасетирование по годам\n  facet_wrap(~ YEAR, nrow = 2) +\n  \n  # Цветовая шкала для заливки\n  scale_fill_gradient(\n    low = \"white\", \n    high = \"red\",\n    na.value = NA,\n    limits = c(0, max(gird_shares_catch$CATCH, na.rm = TRUE)),\n    name = \"Catch (CPUE)\"\n  ) +\n  \n  # Шкала размеров для точек\n  scale_size_manual(\n    name = \"PROM Category\",\n    values = c(1.5, 2.5, 3.5, 4.5)  # Размеры точек для 4 категорий\n  ) +\n  \n  ### ОСИ С ГЕОГРАФИЧЕСКИМИ КООРДИНАТАМИ ###\n  scale_x_continuous(\n    breaks = c(32, 38, 44, 48),                    \n    labels = c(\"32°E\", \"38°E\", \"44°E\", \"48°E\"),    \n    name = NULL\n  ) +\n  scale_y_continuous(\n    breaks = c(68.5, 69.5, 70.5, 71.5),          \n    labels = c(\"68.5°N\", \"69.5°N\", \"70.5°N\", \"71.5°N\"),\n    name = NULL\n  ) +\n  \n  # Область отображения\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +\n  \n  # Оформление\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(size = 8),\n    axis.text.y = element_text(size = 8, angle = 90, hjust = 0.5),\n    panel.grid = element_line(color = \"grey90\"),\n    legend.position = \"bottom\",\n    legend.box = \"horizontal\",  # Размещение легенд в одну строку\n    panel.border = element_rect(fill = NA, color = \"black\", size = 0.5),\n    strip.background = element_rect(fill = \"white\", color = \"black\")\n  ) +\n  # Управление легендами\n  guides(\n    fill = guide_colorbar(title.position = \"top\", title.hjust = 0.5),\n    size = guide_legend(title.position = \"top\", title.hjust = 0.5)\n  )\n```\n\n## Карты для \"главы Материал и методы\"\n\n![Рис. 13.: Карты для \"главы Материал и методы\"](images/KARTOGRAPH13.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls()) # Удаление всех объектов из глобального окружения\nsetwd(\"C:/COURSES/KARTOGRAPH/\") # Установка рабочей директории\n\n# -----------------\n# ЗАГРУЗКА ПАКЕТОВ\n# -----------------\nlibrary(sf)          # Пространственные операции с векторными данными\nlibrary(marmap)      # Работа с батиметрическими данными (карты глубин)\nlibrary(tidyverse)   # Коллекция пакетов для обработки данных (dplyr, ggplot2 и др.)\nlibrary(rnaturalearth) # Векторные картографические данные (границы, береговые линии)\nlibrary(ggspatial)   # Инструменты для пространственной визуализации в ggplot\nlibrary(readxl)      # Импорт данных из Excel-файлов\n\n# -----------------\n# ЗАГРУЗКА ДАННЫХ\n# -----------------\n# Чтение данных из Excel-листа\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\")\n\n# Фильтрация данных:\nSUMMER <- DATA[DATA$SURV == \"SUM\" & DATA$YEAR == 2024, ] # Летние исследования 2024\nCRAB <- DATA[DATA$SURV == \"CRAB\" & DATA$YEAR == 2024, ]   # Крабовые исследования 2024\n\n# -----------------\n# ПОДГОТОВКА КАРТОГРАФИЧЕСКОЙ ОСНОВЫ\n# -----------------\n# Загрузка векторных границ России\nrussia_map <- ne_states(country = \"russia\", returnclass = \"sf\")\n\n# Загрузка береговой линии мирового океана\ncoast <- ne_coastline(scale = 10, returnclass = \"sf\")\n\n# Создание сетки для навигации (5° по долготе, 1° по широте)\nga_grid <- russia_map %>% \n  st_make_grid(cellsize = c(5, 1), offset = c(30, 67))\n\n# Установка границ региона интереса\nxmin <- 30; xmax <- 58\nymin <- 67; ymax <- 72.5\n\n# -----------------\n# БАТИМЕТРИЧЕСКИЕ ДАННЫЕ\n# -----------------\n# Загрузка данных о глубинах из базы NOAA\nbat <- getNOAA.bathy(\n  lon1 = xmin, lon2 = xmax,\n  lat1 = ymin, lat2 = ymax,\n  resolution = 1,   # Разрешение данных (1 минута дуги)\n  keep = TRUE       # Сохранить кэш на диске\n)\n\n# Преобразование в таблицу XYZ (долгота, широта, глубина)\nbat_xyz <- as.xyz(bat)\n\n# Создание цветовой схемы для глубин:\nbreaks <- c(-10000, -7000, -6000, -5000, -4000, -3000, -2000, -1000, \n            -500, -200, -50, -1, 5, 50, 100, 150, 200, 300, 400, 500, 1000, 3000)\ncols <- c(\n  \"#5e99d6\", \"#669cd4\", \"#6c9fd4\", \"#96bce3\", \"#AEC8E3\", \"#a6c4e3\",\n  \"#AEC8E3\", \"#BBD0EB\", \"#C7DCF1\", \"#DAECFA\", \"#D2E5F6\", \"#e1f2d8\",\n  \"#B8D3AA\", \"#b3b387\", \"#9EC187\", \"#C7D097\", \"#DADBAF\", \"#F3F0C7\",\n  \"#E6DBA8\", \"#DACFA1\", \"#D1BF81\", \"#C69D45\"\n)\n\n# Категоризация глубин для визуализации\nbat_xyz$V4 <- cut(bat_xyz$V3, breaks = breaks)\nniveles <- levels(bat_xyz$V4)  # Сохранение уровней для легенды\n\n# -----------------\n# ПОСТРОЕНИЕ БАЗОВОЙ КАРТЫ\n# -----------------\nmap <- ggplot() +\n  # Векторные границы России\n  geom_sf(data = russia_map) +\n  # Батиметрическая подложка (цвет = глубина)\n  geom_tile(data = bat_xyz, aes(x = V1, y = V2, fill = V4), show.legend = FALSE) +\n  # Цветовая схема для глубин\n  scale_fill_manual(name = \"Глубина\", values = cols, breaks = niveles) +\n  # Наложение сетки\n  geom_sf(data = ga_grid, alpha = 0.01, linetype = 3) +\n  # Береговая линия\n  geom_sf(data = coast, linewidth = 0.2, fill = NA) +\n  # Ограничение области карты\n  coord_sf(xlim = c(32, 56), ylim = c(68.5, 72.3)) +\n  # Масштабная линейка (top-left)\n  annotation_scale(location = \"tl\", width_hint = 0.2) +\n  # Оформление\n  labs(x = NULL, y = NULL, fill = \"Глубина (м)\") +\n  theme(panel.border = element_rect(colour = \"black\", fill = NA, linewidth = 1))\n\n# -----------------\n# ДОБАВЛЕНИЕ АННОТАЦИЙ\n# -----------------\nmap <- map +\n  annotate(\"text\", x = 40, y = 72.1, size = 5, \n           label = \"Баренцево море\", fontface = \"bold\") +\n  annotate(\"text\", x = 52.2, y = 69.1, size = 4, \n           label = \"о. Колгуев\", fontface = \"bold\") +\n  annotate(\"text\", x = 33, y = 68.9, size = 4, \n           label = \"Кольский\", fontface = \"bold\") +\n  annotate(\"text\", x = 33, y = 68.6, size = 4, \n           label = \"п-ов\", fontface = \"bold\")\n\n# -----------------\n# ДОБАВЛЕНИЕ ТОЧЕК НАБЛЮДЕНИЙ\n# -----------------\nmap <- map +\n  # Точки исследований краба (синие)\n  geom_point(\n    data = CRAB, \n    aes(x = X + 0.2, y = Y), # Смещение для визуального разделения\n    size = 3, color = \"black\", fill = \"#1E90FF\", \n    shape = 21, alpha = 1\n  ) +\n  # Точки летних исследований (оранжевые)\n  geom_point(\n    data = SUMMER, \n    aes(x = X, y = Y), \n    size = 3, color = \"black\", fill = \"#FFA500\", \n    shape = 21, alpha = 1\n  )\n\n# Вывод финальной карты\nprint(map)\n\n# -----------------\n# СОХРАНЕНИЕ РЕЗУЛЬТАТА\n# -----------------\nggsave(\"DATA_MAP.jpg\", \n       plot = map,          # Используем явное указание объекта\n       device = \"jpeg\", \n       dpi = 600,           # Высокое разрешение\n       width = 7,           # Ширина в дюймах\n       height = 5,          # Высота в дюймах\n       units = \"in\")\n```\n\n## Карты с картой-врезкой и маршрутом\n\n![Рис. 14.: Карты с картой-врезкой и маршрутом](images/KARTOGRAPH14.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls()) # Удаление всех объектов из глобального окружения\nsetwd(\"C:/COURSES/KARTOGRAPH/\") # Установка рабочей директории\n\n# -----------------\n# ЗАГРУЗКА ПАКЕТОВ\n# -----------------\nlibrary(sf)          # Пространственные операции с векторными данными\nlibrary(marmap)      # Работа с батиметрическими данными (карты глубин)\nlibrary(tidyverse)   # Коллекция пакетов для обработки данных\nlibrary(rnaturalearth) # Векторные картографические данные\nlibrary(ggspatial)   # Инструменты для пространственной визуализации\nlibrary(readxl)      # Импорт данных из Excel\nlibrary(ggOceanMaps) # Специализированные карты океанов\nlibrary(cowplot)     # Компоновка графиков и добавление элементов\n\n# -----------------\n# ЗАГРУЗКА ДАННЫХ\n# -----------------\n# Чтение данных из Excel\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\")\n\n# Фильтрация данных (крабовые исследования 2022)\nDATA <- DATA[DATA$SURV == \"CRAB\" & DATA$YEAR == 2022, ]\n\n# Загрузка векторных границ России\nrussia_map <- ne_states(country = \"russia\", returnclass = \"sf\")\n\n# Установка границ региона интереса\nxmin <- 35; xmax <- 50\nymin <- 67.2; ymax <- 71\n\n# -----------------\n# БАТИМЕТРИЧЕСКИЕ ДАННЫЕ\n# -----------------\n# Загрузка данных о глубинах\nbat <- getNOAA.bathy(xmin, xmax, ymin, ymax, resolution = 1, keep = TRUE)\nbat_xyz <- as.xyz(bat)\n\n# Определение цветовых уровней для глубин\nbreaks <- c(-10000, -7000, -6000, -5000, -4000, -3000, -2000, -1000, \n            -500, -200, -50, -1, 5, 50, 100, 150, 200, 300, 400, 500, 1000, 3000)\ncols <- c(\n  \"#5e99d6\", \"#669cd4\", \"#6c9fd4\", \"#96bce3\", \"#AEC8E3\", \"#a6c4e3\",\n  \"#AEC8E3\", \"#BBD0EB\", \"#C7DCF1\", \"#DAECFA\", \"#D2E5F6\", \"#e1f2d8\",\n  \"#B8D3AA\", \"#b3b387\", \"#9EC187\", \"#C7D097\", \"#DADBAF\", \"#F3F0C7\",\n  \"#E6DBA8\", \"#DACFA1\", \"#D1BF81\", \"#C69D45\"\n)\n\n# Категоризация глубин\nbat_xyz$V4 <- cut(bat_xyz$V3, breaks = breaks)\nniveles <- levels(bat_xyz$V4)\n\n# Создание координатной сетки\nga_grid <- russia_map %>% \n  st_make_grid(cellsize = c(2, 0.5), offset = c(34, 67))\n\n# -----------------\n# ПОСТРОЕНИЕ ОСНОВНОЙ КАРТЫ\n# -----------------\nmap <- ggplot() +\n  # Векторные границы России\n  geom_sf(data = russia_map) +\n  # Батиметрическая подложка\n  geom_tile(data = bat_xyz, aes(x = V1, y = V2, fill = V4), show.legend = FALSE) +\n  scale_fill_manual(values = cols, breaks = niveles) +\n  # Контур нулевой глубины (береговая линия)\n  geom_contour(data = bat_xyz, aes(x = V1, y = V2, z = V3), \n               breaks = 0, color = \"black\", linewidth = 0.5) + \n  # Координатная сетка\n  geom_sf(data = ga_grid, alpha = 0.01, linetype = 3) +\n  # Ограничение области карты\n  coord_sf(xlim = c(36, 49), ylim = c(67.4, 70.8)) + \n  # Масштабная линейка\n  annotation_scale(location = \"tr\", width_hint = 0.5) +\n  labs(x = NULL, y = NULL) +\n  # Географические подписи\n  annotate(\"text\", x = 47, y = 70.7, size = 5, \n           label = \"Баренцево море\", fontface = \"bold\") +\n  annotate(\"text\", x = 48.4, y = 68.62, size = 4,\n           label = \"о. Колгуев\", fontface = \"bold\") +\n  annotate(\"text\", x = 37.5, y = 67.7, size = 5,\n           label = \"Кольский п-ов\", fontface = \"bold\") +\n  # Маршрут и точки исследований\n  geom_path(data = DATA, aes(x = X, y = Y), color = \"black\") +\n  geom_point(data = DATA, aes(x = X, y = Y), \n             size = 3, color = \"black\", fill = \"white\", \n             shape = 21, alpha = 0.8) +\n  # ДОБАВЛЕНИЕ РАМКИ - ключевое изменение\n  theme(panel.border = element_rect(colour = \"black\", fill = NA, linewidth = 1.5))\n\n# -----------------\n# СОЗДАНИЕ ВСТАВКИ-ЛОКАЦИИ\n# -----------------\n# Область для вставки\nins <- data.frame(lon = c(10, 10, 70, 70), lat = c(67, 80, 80, 67))\n\n# Получение данных для вставки\nmar_bathy <- getNOAA.bathy(9, 71, 66.5, 83, res = 4, keep = TRUE)\nbathy <- raster_bathymetry(stars::st_as_stars(marmap::as.raster(mar_bathy)), \n                           depths = NULL, verbose = FALSE)\n\n# Построение вставки\ninsetmap <- basemap(ins, shapefiles = list(land = dd_land, bathy = bathy), \n                   bathy.style = \"rub\", legends = FALSE) +\n  # Прямоугольник, обозначающий область основной карты\n  geom_rect(aes(xmin = 35, xmax = 51, ymin = 67.5, ymax = 71), \n            fill = \"black\", color = \"black\", alpha = 0.2) +\n  labs(y = NULL, x = NULL) +\n  # Упрощение оформления\n  theme(axis.text.x = element_blank(), \n        axis.text.y = element_blank(),\n        # Рамка для вставки\n        panel.border = element_rect(colour = \"black\", fill = NA, linewidth = 1))\n\n# -----------------\n# ФИНАЛЬНАЯ КОМПОНОВКА С РАМКОЙ\n# -----------------\nMAP <- ggdraw() +\n  # Основная карта\n  draw_plot(map) +\n  # Вставка с позиционированием\n  draw_plot(insetmap,\n            height = 0.3,\n            x = -0.26,\n            y = 0.55) \n\n# Вывод финальной карты\nprint(MAP)\n\n# -----------------\n# СОХРАНЕНИЕ РЕЗУЛЬТАТА\n# -----------------\nggsave(\"DATA_MAP_FRAMED.jpg\", \n       plot = MAP,\n       device = \"jpeg\", \n       dpi = 600,\n       width = 7,\n       height = 6,\n       units = \"in\")\n```\n","srcMarkdownNoYaml":"\n\n## Введение\n\nЭто занятие — про то, как превратить координаты и уловы в честные карты, которые помогают думать, а не просто украшать отчёт. Мы будем работать в R, потому что он дисциплинирует: каждая операция видна, воспроизводима и проверяема, а любой красивый результат можно разобрать до строчки кода. В логике курса мы пойдём от простого к сложному: от базовой точечной карты распределения уловов — к картам с береговой линией, к учёту нулевых уловов и разбиению по квартилям, к фасетам для сравнения лет, к локальной автокорреляции (LISA), к промысловым картам и картограммам, и, наконец, к гибридным решениям, где данные съёмок и промысла встречаются на одной карте. В конце добавим «служебные» карты для раздела «Материал и методы» и карты с врезками — тот самый минимум, который ожидают рецензенты. В духе Ноама Хомского напомним: карта — это не территория, а модель наших предположений; чем прозрачнее исходные решения (данные, проекция, шкалы), тем меньше поводов для самообмана.\n\nВ основе любой качественной карты лежат три вещи: корректная подготовка данных, грамотная картографическая основа и осмысленная визуальная метафора. Сначала убеждаемся, что координаты в единой системе (WGS84), отсутствуют перепутанные долготы и широты, а нулевые уловы размечены как нули, а не пропуски. Затем выбираем основу: береговая линия и полигоны стран из rnaturalearth, при необходимости батиметрия из marmap, корректная проекция для расстояний и площадей (в задачах локального масштаба — UTM). И только после этого — визуальные решения: непрерывные шкалы с воспринимаемо ровной палитрой (viridis), понятная легенда, единицы измерения, подписи, масштабная линейка и, где уместно, стрелка «север». Важный этический момент: размер и цвет несут разные смыслы; не заставляйте читателя угадывать, что из них интенсивность, а что — частота или категория. Нулевые уловы — это не «мусор», а сильный сигнал об отсутствии; показывайте их отдельным слоем и символом, чтобы не переоценивать «горячие точки».\n\nПо мере усложнения задач мы добавляем структуру. Разбиение по квартилям даёт сопоставимость между годами, фасеты позволяют увидеть межгодовую динамику без наложения, LISA подсвечивает кластеры высокой и низкой интенсивности и аномалии, где значение точки расходится с окружением. Картограммы или сеточная агрегация помогают уйти от шумной точки к устойчивой картинке на уровне промысловых квадратов; гибридные карты честно показывают возможный разрыв между научной съёмкой и промыслом. Здесь важно помнить про «анатомию ошибки»: выбор размера ячейки, числа соседей в LISA, границ квартилей и способа агрегации — это не техническая деталь, а модельное решение; фиксируйте его явно, чтобы завтра вы сами могли воспроизвести сегодняшнюю карту.\n\nПрактический результат должен быть пригоден для публикации. Все примеры в R можно экспортировать в векторные форматы (PDF, SVG) и растровые (PNG, TIFF) с высоким разрешением, где подписи, легенды и цвета сохраняют читаемость при печати. В скрипте мы покажем, как автоматически подбирать границы области с небольшим буфером — и почему чаще лучше задать их вручную, чтобы карта не «гуляла» между рис. 1 и рис. 2. Мы разберём, как организовать легенды, чтобы они не спорили друг с другом при фасетировании, как синхронизировать цветовые шкалы между годами, чтобы зелёное «вчера» и зелёное «сегодня» значили одно и то же, и как использовать врезку, чтобы читатель понял контекст региона, а не искал его на глобусе.\n\nНаконец, про дисциплину и воспроизводимость. Данные берём из одного файла ([KARTOGRAPHIC.xlsx](https://mombus.github.io/cRab/data/KARTOGRAPHIC.xlsx)), зависимости минимальны и явно перечислены, рабочая директория задаётся в начале, все параметры карт — на виду. Такой стиль не только ускоряет работу, но и воспитывает привычку проверять себя: если карта получилась слишком «красивая», вернитесь и взгляните на нули, на шкалы, на проекцию, на подписи. Хорошая карта в рыбохозяйственной и гидробиологической практике — это не \"арт‑объект\", а прозрачный инструмент коммуникации: с ней удобно спорить, её можно повторить и на её основе можно принять решение. Если к концу занятия вы без подсказок соберёте три‑четыре типовых карты для результатов и одну аккуратную для «Материалов и методов», задача занятия выполнена.\n\n**Для работы скрипта:**\n\n1.  Скачайте файл данных ([KARTOGRAPHIC.xlsx](https://mombus.github.io/cRab/data/KARTOGRAPHIC.xlsx))\n\n2.  Установите рабочую директорию в setwd()\n\n3.  Установите необходимые пакеты : **`install.packages(c(\"readxl\", \"tidyverse, \"rnaturalearth\", \"sf\", \"viridis\" ))`** `и др.`\n\n## Карта распределения уловов в съемке\n\nДанная карта демонстрирует распределение уловов краба в ходе исследовательской съемки. На ней отображены точки наблюдений, где размер и цвет точек соответствуют величине улова.\n\n![Рис. 1.: Пример карты распределения уловов в съемке](images/KARTOGRAPH1.jpg){fig-align=\"center\" width=\"70%\"}\n\nВ скрипте границы карты (лимиты) определяются автоматически с буфером, но чаще их просто устанавливают вручную, например:\n\n```{r}\n#| output: false\n#| eval: false\nxmin <- 37\nxmax <- 49\nymin <- 68.5\nymax <- 70.5\n```\n\nСкрипт карты целиком:\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка памяти и установка рабочей папки\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Загрузка необходимых пакетов\nlibrary(tidyverse)  # Обработка данных и визуализация\nlibrary(readxl)     # Чтение Excel-файлов\n\n# 1. ЗАГРУЗКА ДАННЫХ\nDATA <- read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(YEAR == 2023, SURV == \"CRAB\")  # Фильтр для 2023 года и съемки CRAB\n\n# 2. АВТОМАТИЧЕСКИЙ РАСЧЕТ ГРАНИЦ С БУФЕРОМ 5%\n# Расчет диапазонов координат\nx_range <- range(DATA$X, na.rm = TRUE)\ny_range <- range(DATA$Y, na.rm = TRUE)\n\n# Расчет 5% буфера\nx_buffer <- 0.05 * diff(x_range)\ny_buffer <- 0.05 * diff(y_range)\n\n# Установка границ с буфером\nxmin <- x_range[1] - x_buffer\nxmax <- x_range[2] + x_buffer\nymin <- y_range[1] - y_buffer\nymax <- y_range[2] + y_buffer\n\n# 3. ВИЗУАЛИЗАЦИЯ ТОЧЕК\nggplot(DATA) +\n  # Точки наблюдений с размером и цветом по величине улова\n  geom_point(aes(x = X, y = Y, size = PROM, color = PROM), alpha = 0.7) +\n  \n  # Цветовая шкала (виридисная палитра)\n  scale_color_viridis_c(option = \"H\", name = \"Улов\") +\n  \n  # Шкала размеров точек\n  scale_size_continuous(name = \"Улов\") +\n  \n  # Настройка границ с автоматически рассчитанными значениями\n  coord_cartesian(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +\n  \n  # Подписи осей\n  labs(x = \"Долгота\", y = \"Широта\", \n       title = \"Распределение уловов краба\", \n       subtitle = \"2023 год, тип съемки: CRAB\") +\n  \n  # Оформление графика\n  theme_bw() +\n  theme(\n    panel.grid = element_line(color = \"grey90\"),\n    legend.position = \"bottom\"\n  )\n\n```\n\n## Карта распределения уловов в съемке с береговой линией\n\n![Рис. 2.: Пример карты распределения уловов в съемке с береговой линией](images/KARTOGRAPH2.jpg){fig-align=\"center\" width=\"70%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())  # Удаление всех объектов из глобального окружения\nsetwd(\"C:/COURSES/KARTOGRAPH/\")  # Установка рабочей директории\n\n# Загрузка необходимых библиотек\nlibrary(rnaturalearth)  # Для получения векторных карт мира\nlibrary(tidyverse)      # Коллекция пакетов для работы с данными\nlibrary(sf)             # Пространственный анализ\n\n####### ЗАГРУЗКА ДАННЫХ И ПОДГОТОВКА ПРОСТРАНСТВЕННЫХ ОБЪЕКТОВ ################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(YEAR == 2023, SURV == \"CRAB\")  # Фильтр данных за 2023 год по типу съемки\n\n# Получение границ России\nrussia <- ne_countries(scale = 10, country = \"Russia\")  # Загрузка векторных границ (масштаб 1:10м)\n\n# Установка границ отображаемой области (долгота/широта)\nxmin=37  # Западная граница\nxmax=49  # Восточная граница\nymin=68.5 # Южная граница\nymax=70.5 # Северная граница\n\n# Построение карты\nggplot() +\n  # Базовая карта России\n  geom_sf(data = russia, fill = \"lightblue\") + \n  # Ограничение области отображения\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +\n  # Точки наблюдений с размером и цветом по переменной PROM\n  geom_point(aes(x = X, y = Y, size = PROM, color = PROM),\n             data = DATA, alpha = 0.6) +\n  # Цветовая шкала (viridis, вариант H)\n  scale_color_viridis_c(option = \"H\")\n```\n\n## Карта распределения уловов, включая нулевые\n\n![Рис. 3.: Карта распределения уловов, включая нулевые](images/KARTOGRAPH3.jpg){fig-align=\"center\" width=\"70%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())  # Удаление всех объектов из глобального окружения\nsetwd(\"C:/COURSES/KARTOGRAPH/\")  # Установка рабочей директории\n\n# Загрузка необходимых библиотек\nlibrary(rnaturalearth)  # Для получения векторных карт мира\nlibrary(tidyverse)      # Коллекция пакетов для работы с данными\nlibrary(sf)             # Пространственный анализ\n\n####### ЗАГРУЗКА ДАННЫХ И ПОДГОТОВКА ПРОСТРАНСТВЕННЫХ ОБЪЕКТОВ ################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(YEAR == 2023, SURV == \"CRAB\")  # Фильтр данных за 2023 год по типу съемки\n\n# Получение границ России\nrussia <- ne_countries(scale = 10, country = \"Russia\")  # Загрузка векторных границ (масштаб 1:10м)\n\n# Установка границ отображаемой области (долгота/широта)\nxmin=37  # Западная граница\nxmax=49  # Восточная граница\nymin=68.5 # Южная граница\nymax=70.5 # Северная граница\n\n# Построение карты\nggplot() +\n  # Базовая карта России\n  geom_sf(data = russia, fill = \"lightblue\") + \n  # Ограничение области отображения\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +\n  # Точки наблюдений с размером и цветом по переменной PROM (ненулевые уловы)\n  geom_point(aes(x = X, y = Y, size = PROM, color = PROM),\n             data = filter(DATA, PROM > 0), alpha = 0.6) +\n  # Точки для нулевых уловов (крестики)\n  geom_point(aes(x = X, y = Y),\n             data = filter(DATA, PROM == 0),\n             shape = 4, size = 1, stroke = 1, color = \"black\") +\n  # Цветовая шкала (viridis, вариант H)\n  scale_color_viridis_c(option = \"H\")\n```\n\n## Карта распределения уловов, распределенных по квартилям\n\n![Рис. 4.: Карта распределения уловов, распределенных по квартилям](images/KARTOGRAPH4.jpg){fig-align=\"center\" width=\"70%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Загрузка необходимых библиотек\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(sf)\n\n####### ЗАГРУЗКА ДАННЫХ И ПОДГОТОВКА ПРОСТРАНСТВЕННЫХ ОБЪЕКТОВ ################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(YEAR == 2023, SURV == \"CRAB\")\n\n# Получение границ России\nrussia <- ne_countries(scale = 10, country = \"Russia\") %>% \n  st_as_sf()\n\n# Установка границ отображаемой области\nxmin=37; xmax=49; ymin=68.5; ymax=70.5\n\n####### ПОДГОТОВКА ДАННЫХ ДЛЯ ВИЗУАЛИЗАЦИИ ################\n# Вычисляем квартили отдельно\nquantiles <- quantile(DATA$PROM[DATA$PROM > 0], probs = seq(0, 1, 0.25))\n\n# Создаем 4 категории с реальными диапазонами значений\nnonzero_data <- DATA %>% \n  filter(PROM > 0) %>%\n  mutate(\n    PROM_cat = cut(\n      PROM,\n      breaks = quantiles,\n      include.lowest = TRUE,\n      labels = c(\n        sprintf(\"%.1f - %.1f\", quantiles[1], quantiles[2]),\n        sprintf(\"%.1f - %.1f\", quantiles[2], quantiles[3]),\n        sprintf(\"%.1f - %.1f\", quantiles[3], quantiles[4]),\n        sprintf(\"%.1f - %.1f\", quantiles[4], quantiles[5])\n      )\n    )\n  )\n\n# Построение карты\nggplot() +\n  # Базовая карта России\n  geom_sf(data = russia, fill = \"lightblue\", color = \"gray40\") + \n  # Ограничение области отображения\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +\n  # Точки наблюдений с категориальным размером\n  geom_point(\n    data = nonzero_data,\n    aes(x = X, y = Y, size = PROM_cat, color = PROM),\n    alpha = 0.7\n  ) +\n  # Точки для нулевых уловов (крестики)\n  geom_point(\n    data = filter(DATA, PROM == 0),\n    aes(x = X, y = Y),\n    shape = 4, size = 1.2, stroke = 1, color = \"black\"\n  ) +\n  # Цветовая шкала (непрерывная)\n  scale_color_viridis_c(option = \"H\", name = NULL) +\n  # Ручная настройка размеров для категорий\n  scale_size_manual(\n    name = \"Улов (экз./ч)\",\n    values = c(2, 4, 6, 8),  # Размеры точек для категорий\n    drop = FALSE\n  ) +\n  # Настройки темы\n  theme_bw() +\n  labs(\n    title = \"Распределение уловов краба (2023)\",\n    subtitle = \"Черные крестики - нулевые уловы\",\n    x = \"Долгота\", \n    y = \"Широта\"\n  ) +\n  theme(\n    panel.grid = element_line(color = \"gray90\"),\n    legend.position = \"bottom\"\n  )\n```\n\n## Карта распределения уловов по фасеткам\n\n![Рис. 5.: Карта распределения уловов по фасеткам](images/KARTOGRAPH5.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Установка и подключение библиотек (если не установлено — раскомментируй)\n# install.packages(c(\"rnaturalearth\", \"tidyverse\", \"sf\", \"readxl\", \"viridis\"))\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(readxl)\nlibrary(viridis)\n\n####### ЗАГРУЗКА ДАННЫХ И ПОДГОТОВКА ПРОСТРАНСТВЕННЫХ ОБЪЕКТОВ ################\n\n# Чтение и фильтрация данных (убираем фильтр по году, чтобы работать со всеми годами)\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(SURV == \"CRAB\")\n\n# Получение границ России\nrussia <- ne_countries(scale = 10, country = \"Russia\") %>% \n  st_as_sf()\n\n# Установка границ отображаемой области\nxmin <- 37; xmax <- 49\nymin <- 68.5; ymax <- 70.5\n\n# Вычисляем общие квартили для всех лет (чтобы категории были сопоставимыми)\nquantiles <- quantile(DATA$PROM[DATA$PROM > 0], probs = seq(0, 1, 0.25))\n\n# Создаем данные с ненулевыми уловами и категориями\nnonzero_data <- DATA %>%\n  filter(PROM > 0) %>%\n  mutate(\nPROM_cat = cut(\n  PROM,\n  breaks = c(-Inf, quantiles[2:4], Inf),\n  include.lowest = TRUE,\n  labels = c(\n    sprintf(\"%d - %d\", floor(quantiles[1]), floor(quantiles[2])),\n    sprintf(\"%d - %d\", floor(quantiles[2]), floor(quantiles[3])),\n    sprintf(\"%d - %d\", floor(quantiles[3]), floor(quantiles[4])),\n    sprintf(\"%d - %d\", floor(quantiles[4]), floor(max(DATA$PROM)))\n  )\n)\n  )\n\n# Отдельно выделяем точки с нулевым уловом\nzero_data <- DATA %>% filter(PROM == 0)\n\n####### ВИЗУАЛИЗАЦИЯ ################\n\n# Фасеточная карта по годам\nggplot() +\n  # Граница России\n  geom_sf(data = russia, fill = \"lightblue\", color = \"gray40\") +\n  \n  # Ограничение области отображения\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +\n  \n  # Точки с уловом\n  geom_point(\n    data = nonzero_data,\n    aes(x = X, y = Y, size = PROM_cat, color = PROM),\n    alpha = 0.7\n  ) +\n  \n  # Нулевые уловы — крестики\n  geom_point(\n    data = zero_data,\n    aes(x = X, y = Y),\n    shape = 4, size = 1.2, stroke = 1, color = \"black\"\n  ) +\n  \n  # Цветовая шкала\n  scale_color_viridis_c(option = \"H\", name = NULL) +\n  \n  # Настройка размеров точек по категориям\n  scale_size_manual(\n    name = \"Улов (экз./ч)\",\n    values = c(1, 2,4, 6),\n    drop = FALSE\n  ) +\n  \n  # Фасет по годам\n  facet_wrap(~ YEAR, ncol = 2, labeller = label_value) +\n  \n  # Тема и заголовок\n  theme_bw() +\n  labs(\n    title = \"Распределение уловов краба по годам\",\n    subtitle = NULL,\n    x = \"Долгота\", \n    y = \"Широта\"\n  ) +\n  theme(\n    panel.grid = element_line(color = \"gray90\"),\n    legend.position = \"bottom\"\n  )\n```\n\n## Карта распределения уловов с автокорреляцией LISA\n\nАлгоритм LISA (Local Indicators of Spatial Association) представляет собой инструмент выявления пространственных закономерностей на уровне отдельных объектов. В отличие от глобальных показателей, которые дают обобщенную оценку автокорреляции для всего региона, LISA позволяет идентифицировать конкретные кластеры и аномалии, определяя, какие именно участки вносят основной вклад в пространственную структуру данных. В контексте анализа промысловых данных краба за 2023 год, этот метод позволяет выявить зоны концентрации уловов и территории с аномальными показателями.\n\nСуть кластеризации по методу LISA заключается в сравнении значения каждого конкретного объекта (точки съемки) со значениями его соседей. Алгоритм последовательно выполняет несколько ключевых шагов: сначала создается матрица пространственных весов, где для каждой точки определяются k ближайших соседей (в данном случае k=4). Затем для каждой точки рассчитывается локальный индекс Морана (Ii), который количественно оценивает степень сходства между значением в точке и ее окружением. Статистическая значимость кластеризации проверяется через p-значение, полученное методом Монте-Карло.\n\nБиологическая интерпретация выявленных кластеров основана на их классификации:\n\n-   **High-High** (красные точки): зоны высокой концентрации уловов, окруженные такими же продуктивными участками — потенциальные \"горячие точки\" скопления краба\n\n-   **Low-Low** (синие точки): территории с устойчиво низкими уловами, окруженные аналогичными участками — возможные акватории с неблагоприятными условиями\n\n-   **High-Low** (розовые точки): аномалии высоких уловов на фоне низкопродуктивного окружения — требуют проверки на ошибки данных или изучения уникальных локальных факторов\n\n-   **Low-High** (голубые точки): участки неожиданно низких уловов в окружении продуктивных зон — возможные признаки перелова или деградации среды\n\nВизуализация результатов (рис. 6) сочетает картографическую основу с семантикой цвета и размера: размер точки пропорционален величине улова (PROM), а цвет отражает тип кластера. Серые точки обозначают территории без статистически значимой автокорреляции. Ограничение области исследования координатами 37-49° в.д. и 68.5-70.5° с.ш. фокусирует анализ на ключевом промысловом районе, а преобразование в проекцию UTM (32638) обеспечивает точность расчетов расстояний.\n\nПрактическая ценность анализа заключается в возможности целевого управления промыслом: выявленные кластеры High-High могут стать объектами особого мониторинга для предотвращения перелова, тогда как зоны Low-Low требуют изучения причин низкой продуктивности (например, исследования донных сообществ или океанографических условий). Аномальные точки (High-Low/Low-High) служат индикаторами для выборочного контроля достоверности данных. Такой подход переводит сырые данные съемки в пространственно-стратифицированную основу для принятия управленческих решений, позволяя оптимизировать промысловое усилие и минимизировать воздействие на уязвимые участки донных экосистем.\n\n![Рис. 6.: Карта распределения уловов с автокорреляцией LISA](images/KARTOGRAPH6.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Загрузка библиотек\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(spdep)\nlibrary(ggspatial)\nlibrary(readxl)\n\n# 1. ЗАГРУЗКА И ПОДГОТОВКА ДАННЫХ\nDATA <- read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(YEAR == 2023, SURV == \"CRAB\")\n\n# Проверка названий колонок\nprint(names(DATA))  # Убедитесь, что координаты названы правильно\n\n# Преобразование в пространственные данные (замените X/Y на ваши названия)\npoints_sf <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# 2. ПОЛУЧЕНИЕ КАРТЫ РОССИИ\n# Задаем границы области\nxmin <- 37\nxmax <- 49\nymin <- 68.5\nymax <- 70.5\n\n# Создаём ограничивающий прямоугольник\nbbox <- st_bbox(c(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), crs = 4326)\nbbox_poly <- st_as_sfc(bbox)\n\n# Карта России\nrussia <- ne_countries(country = \"Russia\", scale = 10) %>% \n  st_as_sf() %>% \n  st_crop(bbox)  # Обрезка без st_intersection\n\n# 3. ПОДГОТОВКА ТОЧЕК\n# Удаление дубликатов по координатам\ncoords <- st_coordinates(points_sf)\npoints_sf <- points_sf[!duplicated(coords), , drop = FALSE]\n\n# Перевод в UTM\npoints_utm <- st_transform(points_sf, crs = 32638)\n\n# 4. АНАЛИЗ LISA\n# Матрица весов\nknn <- knearneigh(points_utm, k = 4)\nnb <- knn2nb(knn)\nlistw <- nb2listw(nb, style = \"W\")\n\n# Локальный Моран\nlocal_moran <- localmoran(points_utm$PROM, listw)\n\n# Добавляем кластеры\npoints_utm <- points_utm %>%\n  mutate(\n    Local_I = local_moran[, \"Ii\"],\n    P_value = local_moran[, \"Pr(z != E(Ii))\"],\n    Mean_PROM = mean(PROM, na.rm = TRUE),  # Добавляем среднее значение\n    Cluster = case_when(\n      Local_I > 0 & PROM > Mean_PROM ~ \"High-High\",\n      Local_I > 0 & PROM <= Mean_PROM ~ \"Low-Low\",  # Включаем PROM == 0\n      Local_I < 0 & PROM > Mean_PROM ~ \"High-Low\",\n      Local_I < 0 & PROM <= Mean_PROM ~ \"Low-High\",  # PROM == 0 попадает сюда\n      TRUE ~ \"Not significant\"\n    )\n  )\n\n# Обратно в WGS84\npoints_result <- st_transform(points_utm, crs = 4326)\n\n# 5. ВИЗУАЛИЗАЦИЯ\ncluster_colors <- c(\n  \"High-High\" = \"red\",\n  \"Low-Low\" = \"blue\",\n  \"High-Low\" = \"pink\",\n  \"Low-High\" = \"lightblue\",\n  \"Not significant\" = \"gray\"\n)\n\nggplot() +\n  # Карта России\n  geom_sf(data = russia, fill = \"lightblue\", color = \"black\") +\n  \n  # Все точки (включая PROM == 0) — в одном слое\n  geom_sf(\n    data = points_result,\n    aes(color = Cluster, size = PROM),\n    alpha = 0.8\n  ) +\n  \n  # Настройки координат и масштаба\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax), expand = FALSE) +\n  annotation_scale(location = \"tl\", width_hint = 0.3) +\n  \n  # Цвет и размер\n  scale_color_manual(values = cluster_colors) +\n  scale_size_continuous(range = c(1, 8), name = \"Величина улова\") +\n  \n  # Заголовки и тема\n  labs(\n    title = \"Пространственная автокорреляция уловов краба (LISA)\",\n    subtitle = \"2023 год, тип съемки: CRAB\",\n    color = \"Тип кластера\"\n  ) +\n  \ntheme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5),\n    legend.position = \"right\",\n    panel.border = element_rect(colour = \"black\", size = 1, fill = NA)  # Рамка вокруг карты\n  )\n```\n\n## Карта распределения уловов с автокорреляцией LISA по фасеткам\n\n![Рис. 7.: Карта распределения уловов с автокорреляцией LISA по фасеткам](images/KARTOGRAPH7.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка памяти и установка рабочей папки\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Загрузка необходимых пакетов\nlibrary(rnaturalearth)  # Географические карты\nlibrary(tidyverse)      # Обработка данных и визуализация\nlibrary(sf)             # Пространственные данные\nlibrary(spdep)          # Пространственная статистика\nlibrary(ggspatial)      # Дополнения для карт в ggplot\nlibrary(readxl)         # Чтение Excel-файлов\n\n# 1. ЗАГРУЗКА И ПРЕОБРАЗОВАНИЕ ДАННЫХ\n# - Чтение данных из Excel\n# - Фильтрация только данных по крабу\nDATA <- read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(SURV == \"CRAB\")\n\n# Преобразование в пространственный объект с координатами\npoints_sf <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# 2. ПОДГОТОВКА КАРТОГРАФИЧЕСКОЙ ОСНОВЫ\n# - Определение границ области исследования\nxmin <- 37; xmax <- 49; ymin <- 68.5; ymax <- 70.7\n\n# - Создание ограничивающего прямоугольника\nbbox <- st_bbox(c(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), crs = 4326)\n\n# - Загрузка и обрезка карты России по заданным границам\nrussia <- ne_countries(country = \"Russia\", scale = 10) %>% \n  st_as_sf() %>% \n  st_crop(bbox)\n\n# 3. ФУНКЦИЯ ДЛЯ ПРОСТРАНСТВЕННОГО АНАЛИЗА ПО ГОДАМ\nanalyze_year <- function(data_year) {\n  # Удаление дубликатов координат\n  coords <- st_coordinates(data_year)\n  data_year <- data_year[!duplicated(coords), , drop = FALSE]\n  \n  # Перепроецирование в UTM для точных расчетов\n  points_utm <- st_transform(data_year, crs = 32638)\n  \n  # Построение матрицы пространственных весов (4 ближайших соседа)\n  knn <- knearneigh(points_utm, k = 4)\n  nb <- knn2nb(knn)\n  listw <- nb2listw(nb, style = \"W\")  # Стандартизованная матрица\n  \n  # Расчет локальной пространственной автокорреляции (LISA)\n  local_moran <- localmoran(points_utm$PROM, listw)\n  \n  # Классификация кластеров на основе результатов\n  points_utm <- points_utm %>%\n    mutate(\n      Local_I = local_moran[, \"Ii\"],\n      P_value = local_moran[, \"Pr(z != E(Ii))\"],\n      Mean_PROM = mean(PROM, na.rm = TRUE),\n      Cluster = case_when(\n        Local_I > 0 & PROM > Mean_PROM ~ \"High-High\",     # Горячая точка\n        Local_I > 0 & PROM <= Mean_PROM ~ \"Low-Low\",      # Холодная точка\n        Local_I < 0 & PROM > Mean_PROM ~ \"High-Low\",      # Выброс (высокий среди низких)\n        Local_I < 0 & PROM <= Mean_PROM ~ \"Low-High\",     # Выброс (низкий среди высоких)\n        TRUE ~ \"Not significant\"                          # Незначимые\n      )\n    )\n  \n  # Возврат в географические координаты\n  st_transform(points_utm, crs = 4326)\n}\n\n# 4. ОБРАБОТКА ДАННЫХ ПО ГОДАМ\n# - Разделение данных по годам\n# - Применение анализа для каждого года\n# - Объединение результатов\nresults_list <- DATA %>%\n  group_split(YEAR) %>% \n  lapply(function(group) {\n    analyze_year(st_as_sf(group, coords = c(\"X\", \"Y\"), crs = 4326))\n  }) %>%\n  bind_rows()\n\n# 5. КАТЕГОРИЗАЦИЯ УЛОВОВ\n# - Расчет квантилей для всего набора данных\nPROM_breaks <- quantile(results_list$PROM, \n                         probs = c(0, 0.25, 0.5, 0.75, 1), \n                         na.rm = TRUE) %>% \n  round(1)  # Округление значений\n\n# - Создание меток с реальными диапазонами\nPROM_labels <- sprintf(\"%.1f - %.1f\", PROM_breaks[1:4], PROM_breaks[2:5])\n\n# - Добавление категорий уловов в данные\nresults_list <- results_list %>%\n  mutate(\n    PROM_category = cut(\n      PROM, \n      breaks = PROM_breaks, \n      labels = PROM_labels,\n      include.lowest = TRUE\n    )\n  )\n\n# 6. ВИЗУАЛИЗАЦИЯ РЕЗУЛЬТАТОВ\n# Цветовая схема для типов кластеров\ncluster_colors <- c(\n  \"High-High\" = \"red\",       # Горячие точки\n  \"Low-Low\" = \"blue\",        # Холодные точки\n  \"High-Low\" = \"pink\",       # Выбросы высокие\n  \"Low-High\" = \"lightblue\",  # Выбросы низкие\n  \"Not significant\" = \"gray\" # Незначимые\n)\n\n# Построение карты\nggplot(data = results_list) +\n  # Базовая карта России\n  geom_sf(data = russia, fill = \"#E8E5D6\", color = \"black\", inherit.aes = FALSE) +\n  \n  # Точки наблюдений с цветом по кластерам и размером по уловам\n  geom_sf(aes(color = Cluster, size = PROM_category), alpha = 0.8) +\n  \n  # Разделение на панели по годам\n  facet_wrap(~ YEAR, ncol = 2) +\n  \n  # Установка границ карты\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax), expand = FALSE) +\n  \n  # Настройка легенды для кластеров\n  scale_color_manual(\n    values = cluster_colors,\n    name = \"Тип кластера\",\n    guide = guide_legend(nrow = 2)\n  ) +\n  \n  # Настройка легенды для уловов (реальные диапазоны)\n  scale_size_manual(\n    name = \"Величина улова\",\n    values = c(1, 2, 3, 5),  # Размеры точек для 4-х категорий\n    breaks = levels(results_list$PROM_category),\n    guide = guide_legend(nrow = 2)\n  ) +\n  \n  # Заголовки и подписи\n  labs(\n    title = \"Пространственная автокорреляция уловов краба (LISA)\",\n    subtitle = \"Тип съемки: CRAB\"\n  ) +\n  \n  # Оформление графика\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(size = 9, margin = margin(t = 5)),\n    axis.text.y = element_text(size = 9, angle = 90, hjust = 0.5, margin = margin(r = 5)),\n    panel.background = element_rect(fill = \"#F0F8FF\", color = NA),  # Фон океана\n    panel.grid.major = element_line(color = \"grey90\", linetype = \"dotted\"),\n    legend.position = \"bottom\",           # Легенда внизу\n    legend.box = \"horizontal\",            # Горизонтальное расположение\n    panel.border = element_rect(fill = NA, color = \"black\", size = 0.7),\n    strip.background = element_rect(fill = \"white\", color = \"black\", size = 0.7),  # Заголовки панелей\n    strip.text = element_text(size = 11, face = \"bold\")\n  ) +\n  \n  # Разметка осей (долгота с шагом 2°, широта с шагом 1°)\n  scale_x_continuous(\n    breaks = seq(floor(xmin), ceiling(xmax), by = 2),\n    labels = function(x) paste0(x, \"°E\")\n  ) +\n  scale_y_continuous(\n    breaks = seq(floor(ymin), ceiling(ymax), by = 1),  \n    labels = function(y) paste0(y, \"°N\")\n  )\n```\n\n## Промысловые карты с квартильным распределением уловов\n\n![Рис. 8.: Промысловые карты с квартильным распределением уловов](images/KARTOGRAPH8.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Загрузка необходимых библиотек\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(sf)\n\n####### ЗАГРУЗКА ДАННЫХ И ПОДГОТОВКА ПРОСТРАНСТВЕННЫХ ОБЪЕКТОВ ################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"FISHERY\") %>% \n  filter(YEAR == 2023)\n\n# Получение границ России\nrussia <- ne_countries(scale = 10, country = \"Russia\") %>% \n  st_as_sf()\n\n# Установка границ отображаемой области\nxmin=37; xmax=48; ymin=68.6; ymax=71\n\n####### ПОДГОТОВКА ДАННЫХ ДЛЯ ВИЗУАЛИЗАЦИИ ################\n# Вычисляем квартили отдельно\nquantiles <- quantile(DATA$CPUE[DATA$CPUE > 0], probs = seq(0, 1, 0.25))\n\n# Создаем 4 категории с реальными диапазонами значений\nnonzero_data <- DATA %>% \n  filter(CPUE > 0) %>%\n  mutate(\n    CPUE_cat = cut(\n      CPUE,\n      breaks = quantiles,\n      include.lowest = TRUE,\n      labels = c(\n        sprintf(\"%.1f - %.1f\", quantiles[1], quantiles[2]),\n        sprintf(\"%.1f - %.1f\", quantiles[2], quantiles[3]),\n        sprintf(\"%.1f - %.1f\", quantiles[3], quantiles[4]),\n        sprintf(\"%.1f - %.1f\", quantiles[4], quantiles[5])\n      )\n    )\n  )\n\n# Построение карты\nggplot() +\n  # Базовая карта России\n  geom_sf(data = russia, fill = \"lightblue\", color = \"gray40\") + \n  # Ограничение области отображения\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +\n  # Точки наблюдений с категориальным размером\n  geom_point(\n    data = nonzero_data,\n    aes(x = X, y = Y, size = CPUE_cat, color = CPUE),\n    alpha = 0.7\n  ) +\n  # Точки для нулевых уловов (крестики)\n  geom_point(\n    data = filter(DATA, CPUE == 0),\n    aes(x = X, y = Y),\n    shape = 4, size = 1.2, stroke = 1, color = \"black\"\n  ) +\n  # Цветовая шкала (непрерывная)\n  scale_color_viridis_c(option = \"H\", name = NULL) +\n  # Ручная настройка размеров для категорий\n  scale_size_manual(\n    name = \"CPUE\",\n    values = c(2, 4, 6, 8),  # Размеры точек для категорий\n    drop = FALSE\n  ) +\n  # Настройки темы\n  theme_bw() +\n  labs(\n    title = \"Распределение CPUE краба (2023)\",\n    subtitle = NULL,\n    x = \"Долгота\", \n    y = \"Широта\"\n  ) +\n  theme(\n    panel.grid = element_line(color = \"gray90\"),\n    legend.position = \"bottom\"\n  )\n```\n\n## Промысловые карты с агрегацией в центрах полигонов (промквадратов)\n\n![Рис. 9.: Промысловые карты с агрегацией в центрах полигонов (промквадратов)](images/KARTOGRAPH9.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Загрузка необходимых библиотек\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(sf)\n\n####### ЗАГРУЗКА ДАННЫХ И ПОДГОТОВКА ПРОСТРАНСТВЕННЫХ ОБЪЕКТОВ ################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"FISHERY\") %>% \n  filter(YEAR == 2023)\n\n# Преобразуем CPUE в пространственные точки\nspec_points <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# Карта России\nrussia <- ne_countries(scale = 10, country = \"Russia\") \n\n# Параметры карты и сетки\nxmin <- 32; xmax <- 48; ymin <- 68; ymax <- 72\nxcs <- 1; ycs <- 0.25\n\n\n# Создание основного датафрейма и пространственных объектов\npoints_sf <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# Создание сетки\ngrid_sf <- st_make_grid(points_sf, \n                        cellsize = c(xcs, ycs),\n                        n = c(2 + (xmax - xmin)/xcs, 2 + (ymax - ymin)/ycs),\n                        offset = c(xmin - xcs, ymin - ycs)) %>% \n  st_sf() %>% \n  mutate(cell_id = row_number())\n\n# Присоединяем точки Catch к сетке и агрегируем по ячейкам и годам\nshares_df_catch <- st_join(points_sf, grid_sf) %>% \n  st_drop_geometry() %>% \n  group_by(cell_id, YEAR) %>% \n  summarise(\n    Count = n(),\n    CATCH = mean(CPUE, na.rm = TRUE)\n  ) %>% \n  ungroup()\n\n# Присоединяем статистику Catch к сетке\ngird_shares_catch <- right_join(grid_sf, shares_df_catch, by = \"cell_id\")\n\n\n\n# Центроиды сетки по W\nCENTROIDS_W <- gird_shares_catch %>% \n  st_centroid()\n\n#################### ВИЗУАЛИЗАЦИЯ #########################################\n\nggplot() +\n  # 1. Сетка без заливки\n  geom_sf(data = grid_sf, fill = NA, color = \"grey80\", linewidth = 0.3) +\n  \n  # 2. Границы России\n  geom_sf(data = russia, fill = \"grey95\") +\n  \n  # 3. Центроиды ячеек с CATCH (цвет и размер по значению)\n  geom_sf(\n    data = CENTROIDS_W, \n    aes(size = CATCH, color = CATCH),\n    shape = 16, \n    alpha = 0.7\n  ) +\n  \n  # 4. Цветовая шкала (viridis как в первом скрипте)\n  scale_color_viridis_c(\n    option = \"H\", \n    name = NULL,\n    limits = c(0, max(gird_shares_catch$CATCH, na.rm = TRUE))\n  ) +\n  \n  # 5. Шкала размера центроидов\n  scale_size_continuous(\n    range = c(1, 10), \n    name = \"CPUE\"\n  ) +\n  \n  # 6. Обрезаем область отображения\n  coord_sf(\n    xlim = c(xmin, xmax), \n    ylim = c(ymin, ymax),\n    expand = FALSE  # Точное соответствие границ\n  ) +\n  \n  # 7. Шкалы для осей координат\n  scale_x_continuous(\n    breaks = seq(xmin, xmax, by = 2),  # Метки каждые 2 градуса\n    name = \"Долгота\"\n  ) +\n  scale_y_continuous(\n    breaks = seq(ymin, ymax, by = 0.5),  # Метки каждые 0.5 градуса\n    name = \"Широта\"\n  ) +\n  \n  # 8. Тема оформления\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank(),\n    legend.position = \"bottom\",\n    panel.border = element_rect(fill = NA, color = \"black\", size = 0.5),\n    # Добавляем сетку для осей координат\n    panel.grid.major = element_line(color = \"gray90\", linewidth = 0.2)\n  ) +\n  \n  # 9. Явное указание названий осей (дублируем для надежности)\n  labs(x = \"Долгота\", y = \"Широта\")\n```\n\n## Промысловые карты - картограммы\n\n![Рис. 10.: Промысловые карты - картограммы](images/KARTOGRAPH10.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\n# Загрузка необходимых библиотек\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(sf)\n\n####### ЗАГРУЗКА ДАННЫХ И ПОДГОТОВКА ПРОСТРАНСТВЕННЫХ ОБЪЕКТОВ ################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"FISHERY\") %>% \n  filter(YEAR == 2023)\n\n# Преобразуем CPUE в пространственные точки\nspec_points <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# Карта России\nrussia <- ne_countries(scale = 10, country = \"Russia\") \n\n# Параметры карты и сетки\nxmin <- 32; xmax <- 48; ymin <- 68; ymax <- 72\nxcs <- 1; ycs <- 0.25\n\n\n# Создание основного датафрейма и пространственных объектов\npoints_sf <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# Создание сетки\ngrid_sf <- st_make_grid(points_sf, \n                        cellsize = c(xcs, ycs),\n                        n = c(2 + (xmax - xmin)/xcs, 2 + (ymax - ymin)/ycs),\n                        offset = c(xmin - xcs, ymin - ycs)) %>% \n  st_sf() %>% \n  mutate(cell_id = row_number())\n\n# Присоединяем точки Catch к сетке и агрегируем по ячейкам и годам\nshares_df_catch <- st_join(points_sf, grid_sf) %>% \n  st_drop_geometry() %>% \n  group_by(cell_id, YEAR) %>% \n  summarise(\n    Count = n(),\n    CATCH = mean(CPUE, na.rm = TRUE)\n  ) %>% \n  ungroup()\n\n# Присоединяем статистику Catch к сетке\ngird_shares_catch <- right_join(grid_sf, shares_df_catch, by = \"cell_id\")\n\n\n\n# Центроиды сетки по W\nCENTROIDS_W <- gird_shares_catch %>% \n  st_centroid()\n\n#################### ВИЗУАЛИЗАЦИЯ #########################################\n\nggplot() +\n  # 1. Сетка без заливки\n  geom_sf(data = grid_sf, fill = NA, color = \"grey80\", linewidth = 0.3) +\n  \n  # 2. Границы России\n  geom_sf(data = russia, fill = \"grey95\") +\n  \n  # 3. Заливка по улову с палитрой viridis option \"H\"\n  geom_sf(data = gird_shares_catch, aes(fill = CATCH), color = NA) +\n  \n  # 4. Цветовая шкала viridis option \"H\" для заливки\n  scale_fill_viridis_c(\n    option = \"H\", \n    name = \"CPUE\",\n    limits = c(0, max(gird_shares_catch$CATCH, na.rm = TRUE)),\n    na.value = \"transparent\"\n  ) +\n  \n  # 5. Обрезаем область отображения\n  coord_sf(\n    xlim = c(xmin, xmax), \n    ylim = c(ymin, ymax),\n    expand = FALSE\n  ) +\n  \n  # 6. Шкалы для осей координат\n  scale_x_continuous(\n    breaks = seq(xmin, xmax, by = 2),\n    name = \"Долгота\"\n  ) +\n  scale_y_continuous(\n    breaks = seq(ymin, ymax, by = 0.5),\n    name = \"Широта\"\n  ) +\n  \n  # 7. Тема оформления\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank(),\n    legend.position = \"bottom\",\n    panel.border = element_rect(fill = NA, color = \"black\", size = 0.5),\n    panel.grid.major = element_line(color = \"gray90\", size = 0.2)\n  ) +\n  labs(x = \"Долгота\", y = \"Широта\")\n```\n\n## Промысловые карты - картограммы по фасеткам\n\n![Рис. 11.: Промысловые карты - картограммы по фасеткам](images/KARTOGRAPH11.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(ggspatial)\nlibrary(sf)\n\n####### READ DATA AND PREPARE SPATIAL OBJECTS ############################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"FISHERY\") %>% \n  filter(YEAR > 2020 & YEAR < 2025)\n\n# Карта России\nrussia <- ne_countries(scale = 10, country = \"Russia\") \n\n# Параметры карты и сетки\nxmin <- 32; xmax <- 48; ymin <- 68; ymax <- 72\nxcs <- 2; ycs <- 0.5\n\n# Преобразование в пространственные объекты\npoints_sf <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# Создание сетки\ngrid_sf <- st_make_grid(\n  points_sf,\n  cellsize = c(xcs, ycs),\n  n = c(2 + (xmax - xmin)/xcs, 2 + (ymax - ymin)/ycs),\n  offset = c(xmin - xcs, ymin - ycs)\n) %>% \n  st_sf() %>% \n  mutate(cell_id = row_number())\n\n# Агрегация данных по сетке и годам\nshares_df_catch <- points_sf %>% \n  st_join(grid_sf) %>% \n  st_drop_geometry() %>% \n  group_by(cell_id, YEAR) %>% \n  summarise(CATCH = mean(CPUE, na.rm = TRUE), .groups = 'drop')\n\n# Присоединение статистики к сетке\ngird_shares_catch <- grid_sf %>% \n  right_join(shares_df_catch, by = \"cell_id\")\n\n#################### ВИЗУАЛИЗАЦИЯ #########################################\n\n# Определяем общий максимум CPUE для единой шкалы цветов\ncatch_max <- max(gird_shares_catch$CATCH, na.rm = TRUE)\n\n# Рассчитываем шаг для подписей (в 2 раза реже исходной сетки)\nx_breaks <- seq(xmin, xmax, by = xcs * 2)  # 4 градуса\ny_breaks <- seq(ymin, ymax, by = ycs * 2)  # 1 градус\n\n# Функция для форматирования подписей: пропускаем первую подпись\nformat_labels <- function(breaks) {\n  labels <- paste0(breaks, \"°\")\n  labels[1] <- \"\"  # Пропускаем первую подпись\n  return(labels)\n}\n\nggplot() +\n  # Контуры сетки\n  geom_sf(data = grid_sf, fill = NA, color = \"grey80\", linewidth = 0.3) +\n  \n  # Заливка по улову с цветовой схемой viridis\n  geom_sf(data = gird_shares_catch, aes(fill = CATCH), color = NA) +\n  \n  # Границы России\n  geom_sf(data = russia, fill = \"#E8E5D6\") +\n  \n  # Фасетирование по годам\n  facet_wrap(~ YEAR, nrow = 2) +\n  \n  # Цветовая шкала\n  scale_fill_viridis_c(\n    option = \"H\", \n    name = \"CPUE\",\n    limits = c(0, catch_max),\n    na.value = \"transparent\"\n  ) +\n  \n  # Область отображения\n  coord_sf(\n    xlim = c(xmin, xmax), \n    ylim = c(ymin, ymax),\n    expand = FALSE\n  ) +\n  \n  # Управление подписями осей с символом градуса (пропускаем первую подпись)\n  scale_x_continuous(\n    breaks = x_breaks,\n    labels = format_labels\n  ) +\n  scale_y_continuous(\n    breaks = y_breaks,\n    labels = format_labels\n  ) +\n  \n  # Оформление с тиками на осях\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank(),\n    legend.position = \"bottom\",\n    legend.key.width = unit(2.5, \"cm\"),\n    legend.title = element_text(vjust = 0.8, size = 12),\n    panel.border = element_rect(fill = NA, color = \"black\", size = 0.7),\n    panel.grid.major = element_line(color = \"grey90\", size = 0.2),\n    strip.background = element_rect(fill = \"#E8E5D6\", color = \"black\"),\n    strip.text = element_text(face = \"bold\", size = 12),\n    axis.text.x = element_text(size = 9, angle = 0, margin = margin(t = 5)),\n    axis.text.y = element_text(size = 9, angle = 90, hjust = 0.5, margin = margin(r = 5)),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    \n    # Тики (засечки) на оси\n    axis.ticks = element_line(color = \"black\", size = 0.5),\n    axis.ticks.length = unit(0.2, \"cm\"),\n    axis.ticks.x = element_line(color = \"black\", size = 0.5),\n    axis.ticks.y = element_line(color = \"black\", size = 0.5)\n  ) +\n  \n  # Настройка легенды\n  guides(fill = guide_colorbar(\n    title.position = \"top\",\n    title.hjust = 0.5,\n    barwidth = 15,\n    frame.colour = \"black\",\n    ticks.colour = \"black\"\n  ))\n\n# Сохранение результата\nggsave(\"KARTOGRAPH11.jpg\", \n       device = \"jpeg\", \n       dpi = 300,\n       width = 7,\n       height = 5,\n       units = \"in\")\n```\n\n## Гибридные карты - картограммы и точки (съемка и промысловые данные)\n\n![Рис. 12.: Гибридные карты - картограммы и точки (съемка и промысловые данные)](images/KARTOGRAPH12.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls())\nsetwd(\"C:/COURSES/KARTOGRAPH/\")\n\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nlibrary(ggspatial)\nlibrary(sf)\n\n####### READ DATA AND PREPARE SPATIAL OBJECTS ############################\n\n# Чтение и фильтрация данных\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"FISHERY\") %>% \n  filter(YEAR > 2020 & YEAR < 2025)\n\nSURVEY <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\") %>% \n  filter(YEAR > 2020 & YEAR < 2025, SURV == \"CRAB\")\n\n# Создание 4 категорий для переменной PROM\nbreaks <- quantile(SURVEY$PROM, \n                   probs = c(0, 0.25, 0.5, 0.75, 1), \n                   na.rm = TRUE)\nSURVEY$PROM_cat <- cut(SURVEY$PROM,\n                       breaks = breaks,\n                       include.lowest = TRUE,\n                       labels = c(\"Q1 (Low)\", \"Q2\", \"Q3\", \"Q4 (High)\"))\n\n# Карта России\nrussia <- ne_countries(scale = 10, country = \"Russia\") \n\n# Параметры карты и сетки\nxmin <- 32; xmax <- 48; ymin <- 68; ymax <- 72\nxcs <- 2; ycs <- 0.5\n\n# Преобразование в пространственные объекты\npoints_sf <- st_as_sf(DATA, coords = c(\"X\", \"Y\"), crs = 4326)\nsurvey_sf <- st_as_sf(SURVEY, coords = c(\"X\", \"Y\"), crs = 4326)\n\n# Создание сетки\ngrid_sf <- st_make_grid(\n  points_sf,\n  cellsize = c(xcs, ycs),\n  n = c(2 + (xmax - xmin)/xcs, 2 + (ymax - ymin)/ycs),\n  offset = c(xmin - xcs, ymin - ycs)\n) %>% \n  st_sf() %>% \n  mutate(cell_id = row_number())\n\n# Агрегация данных по сетке и годам\nshares_df_catch <- points_sf %>% \n  st_join(grid_sf) %>% \n  st_drop_geometry() %>% \n  group_by(cell_id, YEAR) %>% \n  summarise(CATCH = mean(CPUE, na.rm = TRUE), .groups = 'drop')\n\n# Присоединение статистики к сетке\ngird_shares_catch <- grid_sf %>% \n  right_join(shares_df_catch, by = \"cell_id\")\n\n################### ВИЗУАЛИЗАЦИЯ #########################################\nggplot() +\n  # Контуры сетки\n  geom_sf(data = grid_sf, fill = NA, color = \"grey80\", linewidth = 0.3) +\n  \n  # Заливка по улову (средний CPUE)\n  geom_sf(data = gird_shares_catch, aes(fill = CATCH)) +\n  \n  # Границы России\n  geom_sf(data = russia, fill = \"#E8E5D6\") +\n  \n  # Точки SURVEY: голубые с черной окантовкой\n  geom_sf(data = survey_sf, \n          aes(size = PROM_cat),\n          fill = \"lightblue\",    # Голубая заливка\n          color = \"black\",        # Черная окантовка\n          alpha = 0.7,\n          shape = 21,             # Круг с обводкой\n          stroke = 0.5,           # Толщина окантовки\n          show.legend = \"point\") +\n  \n  # Фасетирование по годам\n  facet_wrap(~ YEAR, nrow = 2) +\n  \n  # Цветовая шкала для заливки\n  scale_fill_gradient(\n    low = \"white\", \n    high = \"red\",\n    na.value = NA,\n    limits = c(0, max(gird_shares_catch$CATCH, na.rm = TRUE)),\n    name = \"Catch (CPUE)\"\n  ) +\n  \n  # Шкала размеров для точек\n  scale_size_manual(\n    name = \"PROM Category\",\n    values = c(1.5, 2.5, 3.5, 4.5)  # Размеры точек для 4 категорий\n  ) +\n  \n  ### ОСИ С ГЕОГРАФИЧЕСКИМИ КООРДИНАТАМИ ###\n  scale_x_continuous(\n    breaks = c(32, 38, 44, 48),                    \n    labels = c(\"32°E\", \"38°E\", \"44°E\", \"48°E\"),    \n    name = NULL\n  ) +\n  scale_y_continuous(\n    breaks = c(68.5, 69.5, 70.5, 71.5),          \n    labels = c(\"68.5°N\", \"69.5°N\", \"70.5°N\", \"71.5°N\"),\n    name = NULL\n  ) +\n  \n  # Область отображения\n  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +\n  \n  # Оформление\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(size = 8),\n    axis.text.y = element_text(size = 8, angle = 90, hjust = 0.5),\n    panel.grid = element_line(color = \"grey90\"),\n    legend.position = \"bottom\",\n    legend.box = \"horizontal\",  # Размещение легенд в одну строку\n    panel.border = element_rect(fill = NA, color = \"black\", size = 0.5),\n    strip.background = element_rect(fill = \"white\", color = \"black\")\n  ) +\n  # Управление легендами\n  guides(\n    fill = guide_colorbar(title.position = \"top\", title.hjust = 0.5),\n    size = guide_legend(title.position = \"top\", title.hjust = 0.5)\n  )\n```\n\n## Карты для \"главы Материал и методы\"\n\n![Рис. 13.: Карты для \"главы Материал и методы\"](images/KARTOGRAPH13.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls()) # Удаление всех объектов из глобального окружения\nsetwd(\"C:/COURSES/KARTOGRAPH/\") # Установка рабочей директории\n\n# -----------------\n# ЗАГРУЗКА ПАКЕТОВ\n# -----------------\nlibrary(sf)          # Пространственные операции с векторными данными\nlibrary(marmap)      # Работа с батиметрическими данными (карты глубин)\nlibrary(tidyverse)   # Коллекция пакетов для обработки данных (dplyr, ggplot2 и др.)\nlibrary(rnaturalearth) # Векторные картографические данные (границы, береговые линии)\nlibrary(ggspatial)   # Инструменты для пространственной визуализации в ggplot\nlibrary(readxl)      # Импорт данных из Excel-файлов\n\n# -----------------\n# ЗАГРУЗКА ДАННЫХ\n# -----------------\n# Чтение данных из Excel-листа\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\")\n\n# Фильтрация данных:\nSUMMER <- DATA[DATA$SURV == \"SUM\" & DATA$YEAR == 2024, ] # Летние исследования 2024\nCRAB <- DATA[DATA$SURV == \"CRAB\" & DATA$YEAR == 2024, ]   # Крабовые исследования 2024\n\n# -----------------\n# ПОДГОТОВКА КАРТОГРАФИЧЕСКОЙ ОСНОВЫ\n# -----------------\n# Загрузка векторных границ России\nrussia_map <- ne_states(country = \"russia\", returnclass = \"sf\")\n\n# Загрузка береговой линии мирового океана\ncoast <- ne_coastline(scale = 10, returnclass = \"sf\")\n\n# Создание сетки для навигации (5° по долготе, 1° по широте)\nga_grid <- russia_map %>% \n  st_make_grid(cellsize = c(5, 1), offset = c(30, 67))\n\n# Установка границ региона интереса\nxmin <- 30; xmax <- 58\nymin <- 67; ymax <- 72.5\n\n# -----------------\n# БАТИМЕТРИЧЕСКИЕ ДАННЫЕ\n# -----------------\n# Загрузка данных о глубинах из базы NOAA\nbat <- getNOAA.bathy(\n  lon1 = xmin, lon2 = xmax,\n  lat1 = ymin, lat2 = ymax,\n  resolution = 1,   # Разрешение данных (1 минута дуги)\n  keep = TRUE       # Сохранить кэш на диске\n)\n\n# Преобразование в таблицу XYZ (долгота, широта, глубина)\nbat_xyz <- as.xyz(bat)\n\n# Создание цветовой схемы для глубин:\nbreaks <- c(-10000, -7000, -6000, -5000, -4000, -3000, -2000, -1000, \n            -500, -200, -50, -1, 5, 50, 100, 150, 200, 300, 400, 500, 1000, 3000)\ncols <- c(\n  \"#5e99d6\", \"#669cd4\", \"#6c9fd4\", \"#96bce3\", \"#AEC8E3\", \"#a6c4e3\",\n  \"#AEC8E3\", \"#BBD0EB\", \"#C7DCF1\", \"#DAECFA\", \"#D2E5F6\", \"#e1f2d8\",\n  \"#B8D3AA\", \"#b3b387\", \"#9EC187\", \"#C7D097\", \"#DADBAF\", \"#F3F0C7\",\n  \"#E6DBA8\", \"#DACFA1\", \"#D1BF81\", \"#C69D45\"\n)\n\n# Категоризация глубин для визуализации\nbat_xyz$V4 <- cut(bat_xyz$V3, breaks = breaks)\nniveles <- levels(bat_xyz$V4)  # Сохранение уровней для легенды\n\n# -----------------\n# ПОСТРОЕНИЕ БАЗОВОЙ КАРТЫ\n# -----------------\nmap <- ggplot() +\n  # Векторные границы России\n  geom_sf(data = russia_map) +\n  # Батиметрическая подложка (цвет = глубина)\n  geom_tile(data = bat_xyz, aes(x = V1, y = V2, fill = V4), show.legend = FALSE) +\n  # Цветовая схема для глубин\n  scale_fill_manual(name = \"Глубина\", values = cols, breaks = niveles) +\n  # Наложение сетки\n  geom_sf(data = ga_grid, alpha = 0.01, linetype = 3) +\n  # Береговая линия\n  geom_sf(data = coast, linewidth = 0.2, fill = NA) +\n  # Ограничение области карты\n  coord_sf(xlim = c(32, 56), ylim = c(68.5, 72.3)) +\n  # Масштабная линейка (top-left)\n  annotation_scale(location = \"tl\", width_hint = 0.2) +\n  # Оформление\n  labs(x = NULL, y = NULL, fill = \"Глубина (м)\") +\n  theme(panel.border = element_rect(colour = \"black\", fill = NA, linewidth = 1))\n\n# -----------------\n# ДОБАВЛЕНИЕ АННОТАЦИЙ\n# -----------------\nmap <- map +\n  annotate(\"text\", x = 40, y = 72.1, size = 5, \n           label = \"Баренцево море\", fontface = \"bold\") +\n  annotate(\"text\", x = 52.2, y = 69.1, size = 4, \n           label = \"о. Колгуев\", fontface = \"bold\") +\n  annotate(\"text\", x = 33, y = 68.9, size = 4, \n           label = \"Кольский\", fontface = \"bold\") +\n  annotate(\"text\", x = 33, y = 68.6, size = 4, \n           label = \"п-ов\", fontface = \"bold\")\n\n# -----------------\n# ДОБАВЛЕНИЕ ТОЧЕК НАБЛЮДЕНИЙ\n# -----------------\nmap <- map +\n  # Точки исследований краба (синие)\n  geom_point(\n    data = CRAB, \n    aes(x = X + 0.2, y = Y), # Смещение для визуального разделения\n    size = 3, color = \"black\", fill = \"#1E90FF\", \n    shape = 21, alpha = 1\n  ) +\n  # Точки летних исследований (оранжевые)\n  geom_point(\n    data = SUMMER, \n    aes(x = X, y = Y), \n    size = 3, color = \"black\", fill = \"#FFA500\", \n    shape = 21, alpha = 1\n  )\n\n# Вывод финальной карты\nprint(map)\n\n# -----------------\n# СОХРАНЕНИЕ РЕЗУЛЬТАТА\n# -----------------\nggsave(\"DATA_MAP.jpg\", \n       plot = map,          # Используем явное указание объекта\n       device = \"jpeg\", \n       dpi = 600,           # Высокое разрешение\n       width = 7,           # Ширина в дюймах\n       height = 5,          # Высота в дюймах\n       units = \"in\")\n```\n\n## Карты с картой-врезкой и маршрутом\n\n![Рис. 14.: Карты с картой-врезкой и маршрутом](images/KARTOGRAPH14.jpg){fig-align=\"center\" width=\"80%\"}\n\n```{r}\n#| output: false\n#| eval: false\n# Очистка окружения и установка рабочей директории\nrm(list = ls()) # Удаление всех объектов из глобального окружения\nsetwd(\"C:/COURSES/KARTOGRAPH/\") # Установка рабочей директории\n\n# -----------------\n# ЗАГРУЗКА ПАКЕТОВ\n# -----------------\nlibrary(sf)          # Пространственные операции с векторными данными\nlibrary(marmap)      # Работа с батиметрическими данными (карты глубин)\nlibrary(tidyverse)   # Коллекция пакетов для обработки данных\nlibrary(rnaturalearth) # Векторные картографические данные\nlibrary(ggspatial)   # Инструменты для пространственной визуализации\nlibrary(readxl)      # Импорт данных из Excel\nlibrary(ggOceanMaps) # Специализированные карты океанов\nlibrary(cowplot)     # Компоновка графиков и добавление элементов\n\n# -----------------\n# ЗАГРУЗКА ДАННЫХ\n# -----------------\n# Чтение данных из Excel\nDATA <- readxl::read_excel(\"KARTOGRAPHIC.xlsx\", sheet = \"SURVEY\")\n\n# Фильтрация данных (крабовые исследования 2022)\nDATA <- DATA[DATA$SURV == \"CRAB\" & DATA$YEAR == 2022, ]\n\n# Загрузка векторных границ России\nrussia_map <- ne_states(country = \"russia\", returnclass = \"sf\")\n\n# Установка границ региона интереса\nxmin <- 35; xmax <- 50\nymin <- 67.2; ymax <- 71\n\n# -----------------\n# БАТИМЕТРИЧЕСКИЕ ДАННЫЕ\n# -----------------\n# Загрузка данных о глубинах\nbat <- getNOAA.bathy(xmin, xmax, ymin, ymax, resolution = 1, keep = TRUE)\nbat_xyz <- as.xyz(bat)\n\n# Определение цветовых уровней для глубин\nbreaks <- c(-10000, -7000, -6000, -5000, -4000, -3000, -2000, -1000, \n            -500, -200, -50, -1, 5, 50, 100, 150, 200, 300, 400, 500, 1000, 3000)\ncols <- c(\n  \"#5e99d6\", \"#669cd4\", \"#6c9fd4\", \"#96bce3\", \"#AEC8E3\", \"#a6c4e3\",\n  \"#AEC8E3\", \"#BBD0EB\", \"#C7DCF1\", \"#DAECFA\", \"#D2E5F6\", \"#e1f2d8\",\n  \"#B8D3AA\", \"#b3b387\", \"#9EC187\", \"#C7D097\", \"#DADBAF\", \"#F3F0C7\",\n  \"#E6DBA8\", \"#DACFA1\", \"#D1BF81\", \"#C69D45\"\n)\n\n# Категоризация глубин\nbat_xyz$V4 <- cut(bat_xyz$V3, breaks = breaks)\nniveles <- levels(bat_xyz$V4)\n\n# Создание координатной сетки\nga_grid <- russia_map %>% \n  st_make_grid(cellsize = c(2, 0.5), offset = c(34, 67))\n\n# -----------------\n# ПОСТРОЕНИЕ ОСНОВНОЙ КАРТЫ\n# -----------------\nmap <- ggplot() +\n  # Векторные границы России\n  geom_sf(data = russia_map) +\n  # Батиметрическая подложка\n  geom_tile(data = bat_xyz, aes(x = V1, y = V2, fill = V4), show.legend = FALSE) +\n  scale_fill_manual(values = cols, breaks = niveles) +\n  # Контур нулевой глубины (береговая линия)\n  geom_contour(data = bat_xyz, aes(x = V1, y = V2, z = V3), \n               breaks = 0, color = \"black\", linewidth = 0.5) + \n  # Координатная сетка\n  geom_sf(data = ga_grid, alpha = 0.01, linetype = 3) +\n  # Ограничение области карты\n  coord_sf(xlim = c(36, 49), ylim = c(67.4, 70.8)) + \n  # Масштабная линейка\n  annotation_scale(location = \"tr\", width_hint = 0.5) +\n  labs(x = NULL, y = NULL) +\n  # Географические подписи\n  annotate(\"text\", x = 47, y = 70.7, size = 5, \n           label = \"Баренцево море\", fontface = \"bold\") +\n  annotate(\"text\", x = 48.4, y = 68.62, size = 4,\n           label = \"о. Колгуев\", fontface = \"bold\") +\n  annotate(\"text\", x = 37.5, y = 67.7, size = 5,\n           label = \"Кольский п-ов\", fontface = \"bold\") +\n  # Маршрут и точки исследований\n  geom_path(data = DATA, aes(x = X, y = Y), color = \"black\") +\n  geom_point(data = DATA, aes(x = X, y = Y), \n             size = 3, color = \"black\", fill = \"white\", \n             shape = 21, alpha = 0.8) +\n  # ДОБАВЛЕНИЕ РАМКИ - ключевое изменение\n  theme(panel.border = element_rect(colour = \"black\", fill = NA, linewidth = 1.5))\n\n# -----------------\n# СОЗДАНИЕ ВСТАВКИ-ЛОКАЦИИ\n# -----------------\n# Область для вставки\nins <- data.frame(lon = c(10, 10, 70, 70), lat = c(67, 80, 80, 67))\n\n# Получение данных для вставки\nmar_bathy <- getNOAA.bathy(9, 71, 66.5, 83, res = 4, keep = TRUE)\nbathy <- raster_bathymetry(stars::st_as_stars(marmap::as.raster(mar_bathy)), \n                           depths = NULL, verbose = FALSE)\n\n# Построение вставки\ninsetmap <- basemap(ins, shapefiles = list(land = dd_land, bathy = bathy), \n                   bathy.style = \"rub\", legends = FALSE) +\n  # Прямоугольник, обозначающий область основной карты\n  geom_rect(aes(xmin = 35, xmax = 51, ymin = 67.5, ymax = 71), \n            fill = \"black\", color = \"black\", alpha = 0.2) +\n  labs(y = NULL, x = NULL) +\n  # Упрощение оформления\n  theme(axis.text.x = element_blank(), \n        axis.text.y = element_blank(),\n        # Рамка для вставки\n        panel.border = element_rect(colour = \"black\", fill = NA, linewidth = 1))\n\n# -----------------\n# ФИНАЛЬНАЯ КОМПОНОВКА С РАМКОЙ\n# -----------------\nMAP <- ggdraw() +\n  # Основная карта\n  draw_plot(map) +\n  # Вставка с позиционированием\n  draw_plot(insetmap,\n            height = 0.3,\n            x = -0.26,\n            y = 0.55) \n\n# Вывод финальной карты\nprint(MAP)\n\n# -----------------\n# СОХРАНЕНИЕ РЕЗУЛЬТАТА\n# -----------------\nggsave(\"DATA_MAP_FRAMED.jpg\", \n       plot = MAP,\n       device = \"jpeg\", \n       dpi = 600,\n       width = 7,\n       height = 6,\n       units = \"in\")\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"chapter 3.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.29","bibliography":["references.bib"],"editor":"visual","theme":["cosmo","brand"],"title":"Основы картографии"},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"chapter 3.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"block-headings":true,"bibliography":["references.bib"],"editor":"visual","documentclass":"scrreprt","title":"Основы картографии"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf"]}
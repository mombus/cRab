[
  {
    "objectID": "chapter 9.html",
    "href": "chapter 9.html",
    "title": "10  Стандартизация CPUE: GLM, GAM, GAMM",
    "section": "",
    "text": "10.1 Введение\nВ рамках данного практического занятия рассматриваются методы стандартизации улова на усилие (CPUE) с использованием обобщенных линейных (GLM), обобщенных аддитивных (GAM) и обобщенных аддитивных смешанных моделей (GAMM). Стандартизированный индекс CPUE служит важным показателем состояния запаса, который часто используется в качестве входных данных в моделях “запас-промысел”. Исходные данные уловов на усилие обычно содержат неучтенную вариацию, вызванную влиянием различных факторов, таких как сезон, район промысла, глубина, тип грунта, орудия лова или особенности конкретного судна . Если эту вариацию не устранить, то сырой, нестандартизированный индекс CPUE может давать искаженную картину динамики запаса. Цель стандартизации заключается в том, чтобы отделить изменение численности запаса от влияния этих побочных факторов, получив таким образом более надежный и сопоставимый с истиной численностью популяции (части популяции) индекс.\nПолный скрипт можно скачать по ссылке.\nДля работы скрипта:",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Стандартизация CPUE: GLM, GAM, GAMM</span>"
    ]
  },
  {
    "objectID": "chapter 9.html#введение",
    "href": "chapter 9.html#введение",
    "title": "10  Стандартизация CPUE: GLM, GAM, GAMM",
    "section": "",
    "text": "Скачайте файл данных (KARTOGRAPHIC.xlsx)\nУстановите рабочую директорию в setwd()\nУстановите необходимые пакеты : install.packages(c(\"readxl\", \"tidyverse, \"mgcv\", \"gamm4\", \"DHARMa\" )) и др.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Стандартизация CPUE: GLM, GAM, GAMM</span>"
    ]
  },
  {
    "objectID": "chapter 9.html#пошаговое-описание-скрипта",
    "href": "chapter 9.html#пошаговое-описание-скрипта",
    "title": "10  Стандартизация CPUE: GLM, GAM, GAMM",
    "section": "10.2 Пошаговое описание скрипта",
    "text": "10.2 Пошаговое описание скрипта\nСкрипт начинается с загрузки необходимых пакетов для обработки данных, построения моделей и визуализации результатов. Среда настраивается путем установки рабочей директории и фиксации случайного зерна для обеспечения воспроизводимости всех последующих вычислений.\nНа следующем этапе происходит загрузка исходных данных из файла Excel. Данные представляют собой промысловую статистику, содержащую информацию о году, месяце, судне, районе, величине улова на усилие (CPUE) и др. Выполняется их предварительная обработка: фильтрация по осенним месяцам, преобразование типов переменных в факторы и числовой формат, а также удаление пропущенных значений. Поскольку для моделирования с гамма-распределением требуются строго положительные значения, для нулевых и отрицательных величин CPUE рассчитывается и добавляется малая поправка. Для первичного ознакомления с данными строится диаграмма размаха, показывающая распределение CPUE по годам.\nДалее определяются вспомогательные функции. Одна функция предназначена для нормировки рассчитанных индексов либо на среднее значение, либо на значение первого года. Другая функция использует метод маргинальных средних для расчета стандартизированных индексов и их доверительных интервалов на основе подобранной модели. Третья функция реализует расчет индексов и оценку неопределенности через бутстреп для моделей со сложной структурой.\nОсновная часть скрипта посвящена построению и анализу трех типов моделей. Первой подбирается обобщенная линейная модель (GLM) с гамма-распределением ошибок и логарифмической связью. В качестве предикторов используются факторы: год, месяц, судно и район. Для визуальной и численной диагностики адекватности модели выводятся ее сводка, таблица коэффициентов, стандартные диагностические графики и графики остатков, проверенные с помощью пакета DHARMa.\nСледующей строится обобщенная аддитивная модель (GAM). На этом этапе используется та же формула и семейство распределений, что и в GLM, но метод подбора гиперпараметров отличается. Проводится аналогичная диагностика модели с помощью функций summary и gam.check.\nЗатем подбирается обобщенная аддитивная смешанная модель (GAMM), которая дополнительно включает случайный эффект от судна. Это позволяет учесть вариацию, вызванную индивидуальными особенностями каждого судна, которые не описываются другими факторами. Диагностика этой модели более сложна и включает анализ остатков, проверку случайных эффектов и тест на гетероскедастичность.\nПосле построения всех моделей для каждой из них рассчитываются стандартизированные индексы CPUE и их доверительные интервалы. Для GLM и GAM это делается с помощью функции, основанной на маргинальных средних, а для GAMM применяется метод бутстрепа.\nФинальный этап включает объединение результатов всех трех моделей в единую таблицу и их визуальное сравнение на графике. На этот же график добавляются фактические медианные значения CPUE по годам из исходных данных для сопоставления со стандартизированными кривыми. В заключение модели сравниваются по информационным критериям (AIC, BIC) и другим метрикам, чтобы дать рекомендации по выбору наиболее адекватной из них.\nНиже приводится скрипт, а ниже скрипта - описание результатов моделирования.\n\n# ========================================================================================================================\n# ПРАКТИЧЕСКОЕ ЗАНЯТИЕ: СТАНДАРТИЗАЦИЯ CPUE С ИСПОЛЬЗОВАНИЕМ GLM, GAM И GAMM\n# Курс: \"Оценка водных биоресурсов в среде R (для начинающих)\"\n# Автор: Баканев С.В. \n# Дата: 20.08.2025\n# \n# Структура:\n# 1) Загрузка пакетов и настройка среды\n# 2) Загрузка и предварительная обработка данных\n# 3) Вспомогательные функции для расчета индексов\n# 4) Моделирование GLM (Gamma с лог-ссылкой)\n# 5) Моделирование GAM (обобщенная аддитивная модель)\n# 6) Моделирование GAMM (смешанная модель со случайными эффектами)\n# 7) Сравнение моделей и финальная визуализация результатов\n# ========================================================================================================================\n\n\n# ==============================================================================\n# БЛОК 1: ЗАГРУЗКА ПАКЕТОВ И НАСТРОЙКА СРЕДЫ\n# ==============================================================================\n\n# Отключаем вспомогательные сообщения при загрузке пакетов\nsuppressPackageStartupMessages({\n  library(tidyverse)   # Основные пакеты для обработки данных и визуализации\n  library(readxl)      # Чтение данных из Excel-файлов\n  library(mgcv)        # Обобщенные аддитивные модели (GAM)\n  library(gamm4)       # GAM со смешанными эффектами\n  library(emmeans)     # Расчет маргинальных средних и контрастов\n  library(broom)       # Преобразование результатов моделей в таблицы\n  library(broom.mixed) # Поддержка смешанных моделей для broom\n  library(DHARMa)      # Диагностика остатков обобщенных моделей\n  library(knitr)       # Форматирование таблиц для отчетов\n})\n\n# Установка рабочей директории\nsetwd(\"C:/GLM/\")\n\n# Фиксируем случайное зерно для воспроизводимости результатов\nset.seed(42)\n\n# ==============================================================================\n# БЛОК 2: ЗАГРУЗКА И ПРЕДОБРАБОТКА ДАННЫХ\n# ==============================================================================\n\n# Определяем путь к файлу с данными\nDATA_PATH &lt;- \"C:/GLM/data/KARTOGRAPHIC.xlsx\"\n\n# Чтение данных из листа \"FISHERY\" и фильтрация осенних месяцев\nDATA &lt;- read_excel(DATA_PATH, sheet = \"FISHERY\") %&gt;%\n  as_tibble() %&gt;%  # Преобразуем в современный формат таблицы\n  filter(MONTH &gt; 8 & MONTH &lt; 12)  # Сентябрь-ноябрь (осенний сезон)\n\n# Преобразование типов переменных и обработка пропусков\nDATA &lt;- DATA %&gt;%\n  mutate(\n    YEAR = as.factor(YEAR),           # Год как категориальная переменная\n    MONTH = as.factor(MONTH),         # Месяц как фактор\n    CALL = as.factor(CALL),           # Идентификатор судна\n    REGION = as.factor(REGION),       # Рыбохозяйственный район\n    VESSELNUMBER = as.factor(VESSELNUMBER),  # Номер судна\n    CPUE = as.numeric(CPUE)           # Целевой показатель - улов на усилие\n  ) %&gt;%\n  filter(!is.na(CPUE))  # Удаление строк с пропусками в CPUE\n\n# Обработка нулевых значений CPUE для Gamma-моделей\nif (any(DATA$CPUE &lt;= 0, na.rm = TRUE)) {\n  min_pos &lt;- min(DATA$CPUE[DATA$CPUE &gt; 0], na.rm = TRUE)  # Минимальный положительный улов\n  offset &lt;- min_pos / 2  # Величина поправки\n  DATA &lt;- DATA %&gt;% \n    mutate(CPUE_POS = if_else(CPUE &lt;= 0, CPUE + offset, CPUE))  # Добавляем поправку\n} else {\n  DATA &lt;- DATA %&gt;% \n    mutate(CPUE_POS = CPUE)  # Исходные данные если нулей нет\n}\n\n# Рассчитываем медианные значения CPUE по годам из исходных данных\nactual_medians &lt;- DATA %&gt;%\n  group_by(YEAR) %&gt;%\n  summarise(median_cpue = median(CPUE, na.rm = TRUE))\n# Рассчитываем медианные значения CPUE по годам из исходных данных для последующих графиков\nactual_medians\n\n# A tibble: 6 x 2\n  YEAR  median_cpue\n  &lt;fct&gt;       &lt;dbl&gt;\n1 2019        200. \n2 2020        116. \n3 2021        132. \n4 2022         84  \n5 2023         79.4\n6 2024         58.3\n\n# Экспресс-визуализация распределения CPUE по годам\nDATA %&gt;%\n  ggplot(aes(x = YEAR, y = CPUE)) +\n  geom_boxplot(outlier.alpha = 0.2) +\n  labs(title = \"Распределение CPUE по годам\", \n       x = \"Год\", \n       y = \"CPUE (улов на усилие)\")\n\n\n\n\n\n\n\n# ==============================================================================\n# БЛОК 3: ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ ДЛЯ РАСЧЕТА ИНДЕКСОВ\n# ==============================================================================\n\n# Функция нормировки индексов\nscale_to_index &lt;- function(values, method = c(\"mean\", \"first\")) {\n  method &lt;- match.arg(method)\n  if (method == \"mean\") {\n    # Нормировка на среднее значение\n    return(as.numeric(values) / mean(as.numeric(values), na.rm = TRUE))\n  }\n  if (method == \"first\") {\n    # Нормировка на значение первого года\n    return(as.numeric(values) / as.numeric(values[1]))\n  }\n}\n\n# Функция расчета индексов для GLM/GAM через маргинальные средние\nemmeans_standardized_index &lt;- function(model, variable = \"YEAR\") {\n  out &lt;- suppressWarnings(\n    emmeans(model, \n            specs = as.formula(paste0(\"~ \", variable)), \n            type = \"response\")\n  )\n  df &lt;- as_tibble(out) %&gt;% \n    select(!!sym(variable), response = response, lower.CL, upper.CL)\n  colnames(df) &lt;- c(\"YEAR\", \"value\", \"lcl\", \"ucl\")\n  df\n}\n\n# Функция расчета индексов для GAMM через бутстреп\ncompute_standardized_index &lt;- function(model, base_data, year_levels, predict_fun,\n                                      response_transform = identity, \n                                      n_boot = 200L, \n                                      seed = 7L) {\n  set.seed(seed)\n  acc &lt;- vector(\"list\", length(year_levels))\n  for (i in seq_along(year_levels)) {\n    newdata &lt;- base_data\n    newdata$YEAR &lt;- factor(year_levels[i], levels = levels(base_data$YEAR))\n    preds &lt;- suppressWarnings(predict_fun(model, newdata))\n    mu &lt;- mean(response_transform(preds), na.rm = TRUE)\n    # Бутстреп для оценки неопределенности\n    boot_vals &lt;- replicate(n_boot, {\n      idx &lt;- sample.int(nrow(base_data), nrow(base_data), replace = TRUE)\n      bd &lt;- newdata[idx, , drop = FALSE]\n      p &lt;- suppressWarnings(predict_fun(model, bd))\n      mean(response_transform(p), na.rm = TRUE)\n    })\n    ci &lt;- quantile(boot_vals, c(0.025, 0.975), na.rm = TRUE)\n    acc[[i]] &lt;- tibble(YEAR = year_levels[i], value = mu, lcl = ci[[1]], ucl = ci[[2]])\n  }\n  bind_rows(acc)\n}\n\n# ==============================================================================\n# БЛОК 4: МОДЕЛИРОВАНИЕ GLM (GAMMA С ЛОГ-ССЫЛКОЙ)\n# ==============================================================================\n\n# Подбор модели с фиксированными эффектами\nglm_gamma_fit &lt;- glm(\n  CPUE_POS ~ YEAR + MONTH + CALL + REGION,  # Формула с факторными предикторами\n  family = Gamma(link = \"log\"),            # Гамма-распределение с логарифмической связью\n  data = DATA\n)\n\n# Диагностика модели\nsummary(glm_gamma_fit)  # Стандартная сводка модели\n\n\nCall:\nglm(formula = CPUE_POS ~ YEAR + MONTH + CALL + REGION, family = Gamma(link = \"log\"), \n    data = DATA)\n\nCoefficients:\n                                                  Estimate Std. Error t value\n(Intercept)                                        5.57642    0.07942  70.216\nYEAR2020                                          -0.22713    0.04586  -4.953\nYEAR2021                                          -0.22438    0.04557  -4.924\nYEAR2022                                          -0.64329    0.04345 -14.806\nYEAR2023                                          -0.77311    0.04647 -16.637\nYEAR2024                                          -1.12817    0.05157 -21.879\nMONTH10                                           -0.13725    0.02443  -5.617\nMONTH11                                           -0.13714    0.03540  -3.874\nCALLUAAK                                          -0.29534    0.06092  -4.848\nCALLUAKC                                          -0.53490    0.06381  -8.382\nCALLUBEV                                          -3.67233    0.12187 -30.133\nCALLUBQQ                                          -0.35433    0.07057  -5.021\nCALLUBSR                                          -0.33516    0.06266  -5.349\nCALLUBUR                                          -0.58246    0.06175  -9.433\nCALLUBYT                                          -0.21520    0.06088  -3.535\nCALLUCFF                                          -0.06756    0.09825  -0.688\nCALLUCXF                                          -2.34302    0.10638 -22.025\nCALLUDII                                          -0.46287    0.05710  -8.107\nCALLUDUT                                          -1.02162    0.07550 -13.532\nCALLUDWM                                          -2.42502    0.09480 -25.582\nCALLUEBK                                           0.25852    0.13371   1.934\nCALLUEMO                                          -0.17024    0.08103  -2.101\nCALLUENZ                                           0.04928    0.06442   0.765\nCALLUFIK                                           0.29700    0.13043   2.277\nCALLUGXE                                          -0.56384    0.06265  -9.000\nCALLUIVO                                          -0.21572    0.06500  -3.319\nREGIONCEB.-ЦEHTPAЛЬHЫЙ P-H                         0.16521    0.46672   0.354\nREGIONCEB.CKЛOH MУPMAHCKOГO MEЛKOBOДЬЯ            -0.07615    0.15513  -0.491\nREGIONCEBEPO-KAHИHCKAЯ БAHKA                       0.16332    0.08236   1.983\nREGIONKAHИHCKAЯ БAHKA                              0.06291    0.07875   0.799\nREGIONKAHИHCKO- KOЛГУEBCKOE MEЛKOBOДЬE(CEB.CKЛOH)  0.21310    0.08519   2.501\nREGIONKAHИHCKO-KOЛГУEBCKOE MEЛKOBOДЬE              0.18223    0.07757   2.349\nREGIONMУPMAHCKOE MEЛKOBOДЬE                        0.07737    0.07753   0.998\nREGIONЗAП.-ПPИБPEЖHЫЙ P-H                          0.72882    0.46327   1.573\nREGIONЗAП.-ЦEHTPAЛЬHЫЙ P-H                         0.13328    0.08416   1.584\nREGIONЗAП.CKЛOH ГУCИHOЙ БAHKИ                      0.64238    0.11646   5.516\nREGIONЮЖ.CKЛOH ГУCИHOЙ БAHKИ                       0.69320    0.13068   5.305\n                                                  Pr(&gt;|t|)    \n(Intercept)                                        &lt; 2e-16 ***\nYEAR2020                                          7.62e-07 ***\nYEAR2021                                          8.85e-07 ***\nYEAR2022                                           &lt; 2e-16 ***\nYEAR2023                                           &lt; 2e-16 ***\nYEAR2024                                           &lt; 2e-16 ***\nMONTH10                                           2.08e-08 ***\nMONTH11                                           0.000109 ***\nCALLUAAK                                          1.30e-06 ***\nCALLUAKC                                           &lt; 2e-16 ***\nCALLUBEV                                           &lt; 2e-16 ***\nCALLUBQQ                                          5.36e-07 ***\nCALLUBSR                                          9.37e-08 ***\nCALLUBUR                                           &lt; 2e-16 ***\nCALLUBYT                                          0.000413 ***\nCALLUCFF                                          0.491691    \nCALLUCXF                                           &lt; 2e-16 ***\nCALLUDII                                          6.93e-16 ***\nCALLUDUT                                           &lt; 2e-16 ***\nCALLUDWM                                           &lt; 2e-16 ***\nCALLUEBK                                          0.053247 .  \nCALLUEMO                                          0.035718 *  \nCALLUENZ                                          0.444299    \nCALLUFIK                                          0.022839 *  \nCALLUGXE                                           &lt; 2e-16 ***\nCALLUIVO                                          0.000913 ***\nREGIONCEB.-ЦEHTPAЛЬHЫЙ P-H                        0.723377    \nREGIONCEB.CKЛOH MУPMAHCKOГO MEЛKOBOДЬЯ            0.623533    \nREGIONCEBEPO-KAHИHCKAЯ БAHKA                      0.047425 *  \nREGIONKAHИHCKAЯ БAHKA                             0.424416    \nREGIONKAHИHCKO- KOЛГУEBCKOE MEЛKOBOДЬE(CEB.CKЛOH) 0.012413 *  \nREGIONKAHИHCKO-KOЛГУEBCKOE MEЛKOBOДЬE             0.018863 *  \nREGIONMУPMAHCKOE MEЛKOBOДЬE                       0.318379    \nREGIONЗAП.-ПPИБPEЖHЫЙ P-H                         0.115753    \nREGIONЗAП.-ЦEHTPAЛЬHЫЙ P-H                        0.113361    \nREGIONЗAП.CKЛOH ГУCИHOЙ БAHKИ                     3.69e-08 ***\nREGIONЮЖ.CKЛOH ГУCИHOЙ БAHKИ                      1.19e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Gamma family taken to be 0.4172272)\n\n    Null deviance: 2980.2  on 3890  degrees of freedom\nResidual deviance: 1785.6  on 3854  degrees of freedom\nAIC: 42851\n\nNumber of Fisher Scoring iterations: 11\n\n# Таблица коэффициентов в форматированном виде\nbroom::tidy(glm_gamma_fit) %&gt;%\n  mutate(across(estimate:statistic, ~round(.x, 4))) %&gt;%\n  kable(caption = \"Коэффициенты GLM модели\", align = \"lrrrr\")\n\n\nКоэффициенты GLM модели\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n5.5764\n0.0794\n70.2164\n0.0000000\n\n\nYEAR2020\n-0.2271\n0.0459\n-4.9530\n0.0000008\n\n\nYEAR2021\n-0.2244\n0.0456\n-4.9236\n0.0000009\n\n\nYEAR2022\n-0.6433\n0.0434\n-14.8059\n0.0000000\n\n\nYEAR2023\n-0.7731\n0.0465\n-16.6372\n0.0000000\n\n\nYEAR2024\n-1.1282\n0.0516\n-21.8785\n0.0000000\n\n\nMONTH10\n-0.1372\n0.0244\n-5.6170\n0.0000000\n\n\nMONTH11\n-0.1371\n0.0354\n-3.8736\n0.0001090\n\n\nCALLUAAK\n-0.2953\n0.0609\n-4.8479\n0.0000013\n\n\nCALLUAKC\n-0.5349\n0.0638\n-8.3823\n0.0000000\n\n\nCALLUBEV\n-3.6723\n0.1219\n-30.1334\n0.0000000\n\n\nCALLUBQQ\n-0.3543\n0.0706\n-5.0213\n0.0000005\n\n\nCALLUBSR\n-0.3352\n0.0627\n-5.3488\n0.0000001\n\n\nCALLUBUR\n-0.5825\n0.0618\n-9.4326\n0.0000000\n\n\nCALLUBYT\n-0.2152\n0.0609\n-3.5347\n0.0004130\n\n\nCALLUCFF\n-0.0676\n0.0982\n-0.6877\n0.4916914\n\n\nCALLUCXF\n-2.3430\n0.1064\n-22.0254\n0.0000000\n\n\nCALLUDII\n-0.4629\n0.0571\n-8.1065\n0.0000000\n\n\nCALLUDUT\n-1.0216\n0.0755\n-13.5319\n0.0000000\n\n\nCALLUDWM\n-2.4250\n0.0948\n-25.5817\n0.0000000\n\n\nCALLUEBK\n0.2585\n0.1337\n1.9335\n0.0532474\n\n\nCALLUEMO\n-0.1702\n0.0810\n-2.1009\n0.0357185\n\n\nCALLUENZ\n0.0493\n0.0644\n0.7650\n0.4442989\n\n\nCALLUFIK\n0.2970\n0.1304\n2.2770\n0.0228387\n\n\nCALLUGXE\n-0.5638\n0.0627\n-8.9996\n0.0000000\n\n\nCALLUIVO\n-0.2157\n0.0650\n-3.3187\n0.0009126\n\n\nREGIONCEB.-ЦEHTPAЛЬHЫЙ P-H\n0.1652\n0.4667\n0.3540\n0.7233768\n\n\nREGIONCEB.CKЛOH MУPMAHCKOГO MEЛKOBOДЬЯ\n-0.0762\n0.1551\n-0.4909\n0.6235329\n\n\nREGIONCEBEPO-KAHИHCKAЯ БAHKA\n0.1633\n0.0824\n1.9831\n0.0474248\n\n\nREGIONKAHИHCKAЯ БAHKA\n0.0629\n0.0788\n0.7989\n0.4244161\n\n\nREGIONKAHИHCKO- KOЛГУEBCKOE MEЛKOBOДЬE(CEB.CKЛOH)\n0.2131\n0.0852\n2.5013\n0.0124133\n\n\nREGIONKAHИHCKO-KOЛГУEBCKOE MEЛKOBOДЬE\n0.1822\n0.0776\n2.3492\n0.0188631\n\n\nREGIONMУPMAHCKOE MEЛKOBOДЬE\n0.0774\n0.0775\n0.9979\n0.3183790\n\n\nREGIONЗAП.-ПPИБPEЖHЫЙ P-H\n0.7288\n0.4633\n1.5732\n0.1157534\n\n\nREGIONЗAП.-ЦEHTPAЛЬHЫЙ P-H\n0.1333\n0.0842\n1.5836\n0.1133609\n\n\nREGIONЗAП.CKЛOH ГУCИHOЙ БAHKИ\n0.6424\n0.1165\n5.5160\n0.0000000\n\n\nREGIONЮЖ.CKЛOH ГУCИHOЙ БAHKИ\n0.6932\n0.1307\n5.3046\n0.0000001\n\n\n\n\n# Графики диагностики остатков\npar(mfrow = c(2, 2))\nplot(glm_gamma_fit)  # Стандартные диагностические графики GLM\n\n\n\n\n\n\n\npar(mfrow = c(1, 1))\n\n# Диагностика остатков GLM с использованием DHARMa\nsim_glm &lt;- simulateResiduals(glm_gamma_fit, n = 1000, refit = FALSE)\nplot(sim_glm, main = \"GLM\")\n\n\n\n\n\n\n\n# Расчет и визуализация индексов\nidx_glm &lt;- emmeans_standardized_index(glm_gamma_fit) %&gt;%\n  mutate(model = \"GLM_Gamma\",\n         index_mean = scale_to_index(value, \"mean\"),\n         index_first = scale_to_index(value, \"first\"))\n\n# Добавление доверительных интервалов\nidx_glm &lt;- idx_glm %&gt;%\n  mutate(\n    lcl_index_mean = scale_to_index(lcl, \"mean\"),\n    ucl_index_mean = scale_to_index(ucl, \"mean\")\n  )\n\n# Визуализация индексов GLM\n\nidx_glm %&gt;%\n  ggplot(aes(x = YEAR, y = value, group = 1)) +\n  geom_line() +\n  geom_point() +\n  geom_ribbon(aes(ymin = lcl, ymax = ucl), alpha = 0.3) +\n  geom_point(data = actual_medians, \n           aes(x = YEAR, y = median_cpue), \n           shape = 4,  # 4 соответствует крестику (x)\n           size = 3, \n           color = \"black\", \n           inherit.aes = FALSE)+\nlabs(title = \"Индексы CPUE по GLM модели (крестики - факт)\", \n       x = \"Год\", \n       y = \"Стандартизированный индекс\")\n\n\n\n\n\n\n\n# ==============================================================================\n# БЛОК 5: МОДЕЛИРОВАНИЕ GAM\n# ==============================================================================\n\n# Подбор обобщенной аддитивной модели\ngam_fit &lt;- gam(\n  CPUE_POS ~ YEAR + MONTH + CALL + REGION,  # Линейная формула без сглаживания\n  family = Gamma(link = \"log\"),            # Аналогичное GLM распределение\n  method = \"REML\",                         # Метод оптимизации гиперпараметров\n  data = DATA\n)\n\nsummary(gam_fit)  # Сводка модели\n\n\nFamily: Gamma \nLink function: log \n\nFormula:\nCPUE_POS ~ YEAR + MONTH + CALL + REGION\n\nParametric coefficients:\n                                                  Estimate Std. Error t value\n(Intercept)                                        5.57646    0.07942  70.217\nYEAR2020                                          -0.22712    0.04586  -4.953\nYEAR2021                                          -0.22438    0.04557  -4.924\nYEAR2022                                          -0.64329    0.04345 -14.806\nYEAR2023                                          -0.77309    0.04647 -16.637\nYEAR2024                                          -1.12812    0.05156 -21.878\nMONTH10                                           -0.13725    0.02443  -5.617\nMONTH11                                           -0.13714    0.03540  -3.874\nCALLUAAK                                          -0.29528    0.06092  -4.847\nCALLUAKC                                          -0.53484    0.06381  -8.381\nCALLUBEV                                          -3.67226    0.12187 -30.133\nCALLUBQQ                                          -0.35427    0.07057  -5.020\nCALLUBSR                                          -0.33512    0.06266  -5.348\nCALLUBUR                                          -0.58242    0.06175  -9.432\nCALLUBYT                                          -0.21516    0.06088  -3.534\nCALLUCFF                                          -0.06750    0.09825  -0.687\nCALLUCXF                                          -2.34296    0.10638 -22.025\nCALLUDII                                          -0.46282    0.05710  -8.106\nCALLUDUT                                          -1.02155    0.07550 -13.531\nCALLUDWM                                          -2.42497    0.09479 -25.581\nCALLUEBK                                           0.25858    0.13371   1.934\nCALLUEMO                                          -0.17018    0.08103  -2.100\nCALLUENZ                                           0.04934    0.06442   0.766\nCALLUFIK                                           0.29706    0.13043   2.278\nCALLUGXE                                          -0.56375    0.06265  -8.998\nCALLUIVO                                          -0.21565    0.06500  -3.318\nREGIONCEB.-ЦEHTPAЛЬHЫЙ P-H                         0.16508    0.46672   0.354\nREGIONCEB.CKЛOH MУPMAHCKOГO MEЛKOBOДЬЯ            -0.07627    0.15513  -0.492\nREGIONCEBEPO-KAHИHCKAЯ БAHKA                       0.16322    0.08236   1.982\nREGIONKAHИHCKAЯ БAHKA                              0.06281    0.07875   0.798\nREGIONKAHИHCKO- KOЛГУEBCKOE MEЛKOBOДЬE(CEB.CKЛOH)  0.21299    0.08519   2.500\nREGIONKAHИHCKO-KOЛГУEBCKOE MEЛKOBOДЬE              0.18213    0.07757   2.348\nREGIONMУPMAHCKOE MEЛKOBOДЬE                        0.07728    0.07753   0.997\nREGIONЗAП.-ПPИБPEЖHЫЙ P-H                          0.72877    0.46327   1.573\nREGIONЗAП.-ЦEHTPAЛЬHЫЙ P-H                         0.13318    0.08416   1.583\nREGIONЗAП.CKЛOH ГУCИHOЙ БAHKИ                      0.64226    0.11646   5.515\nREGIONЮЖ.CKЛOH ГУCИHOЙ БAHKИ                       0.69310    0.13068   5.304\n                                                  Pr(&gt;|t|)    \n(Intercept)                                        &lt; 2e-16 ***\nYEAR2020                                          7.62e-07 ***\nYEAR2021                                          8.85e-07 ***\nYEAR2022                                           &lt; 2e-16 ***\nYEAR2023                                           &lt; 2e-16 ***\nYEAR2024                                           &lt; 2e-16 ***\nMONTH10                                           2.08e-08 ***\nMONTH11                                           0.000109 ***\nCALLUAAK                                          1.30e-06 ***\nCALLUAKC                                           &lt; 2e-16 ***\nCALLUBEV                                           &lt; 2e-16 ***\nCALLUBQQ                                          5.39e-07 ***\nCALLUBSR                                          9.39e-08 ***\nCALLUBUR                                           &lt; 2e-16 ***\nCALLUBYT                                          0.000414 ***\nCALLUCFF                                          0.492100    \nCALLUCXF                                           &lt; 2e-16 ***\nCALLUDII                                          6.98e-16 ***\nCALLUDUT                                           &lt; 2e-16 ***\nCALLUDWM                                           &lt; 2e-16 ***\nCALLUEBK                                          0.053187 .  \nCALLUEMO                                          0.035785 *  \nCALLUENZ                                          0.443735    \nCALLUFIK                                          0.022810 *  \nCALLUGXE                                           &lt; 2e-16 ***\nCALLUIVO                                          0.000916 ***\nREGIONCEB.-ЦEHTPAЛЬHЫЙ P-H                        0.723578    \nREGIONCEB.CKЛOH MУPMAHCKOГO MEЛKOBOДЬЯ            0.623006    \nREGIONCEBEPO-KAHИHCKAЯ БAHKA                      0.047563 *  \nREGIONKAHИHCKAЯ БAHKA                             0.425185    \nREGIONKAHИHCKO- KOЛГУEBCKOE MEЛKOBOДЬE(CEB.CKЛOH) 0.012456 *  \nREGIONKAHИHCKO-KOЛГУEBCKOE MEЛKOBOДЬE             0.018931 *  \nREGIONMУPMAHCKOE MEЛKOBOДЬE                       0.318981    \nREGIONЗAП.-ПPИБPEЖHЫЙ P-H                         0.115776    \nREGIONЗAП.-ЦEHTPAЛЬHЫЙ P-H                        0.113615    \nREGIONЗAП.CKЛOH ГУCИHOЙ БAHKИ                     3.72e-08 ***\nREGIONЮЖ.CKЛOH ГУCИHOЙ БAHKИ                      1.20e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nR-sq.(adj) =  0.397   Deviance explained = 40.1%\n-REML =  21455  Scale est. = 0.41722   n = 3891\n\n# Проверка адекватности модели (графики остатков)\nmgcv::gam.check(gam_fit)\n\n\n\n\n\n\n\n\n\nMethod: REML   Optimizer: outer newton\nfull convergence after 5 iterations.\nGradient range [-0.0003574844,-0.0003574844]\n(score 21454.84 & scale 0.4172217).\nHessian positive definite, eigenvalue range [2198.061,2198.061].\nModel rank =  37 / 37 \n\n# Диагностика остатков GAM с использованием DHARMa\nsim_gam &lt;- simulateResiduals(gam_fit, n = 1000, refit = FALSE)\n\nRegistered S3 method overwritten by 'mgcViz':\n  method from   \n  +.gg   ggplot2\n\nplot(sim_gam, main = \"GAM\")\n\n\n\n\n\n\n\n# Расчет индексов\nidx_gam &lt;- emmeans_standardized_index(gam_fit) %&gt;%\n  mutate(model = \"GAM\",\n         index_mean = scale_to_index(value, \"mean\"),\n         index_first = scale_to_index(value, \"first\"))\n\n# Доверительные интервалы\nidx_gam &lt;- idx_gam %&gt;%\n  mutate(\n    lcl_index_mean = scale_to_index(lcl, \"mean\"),\n    ucl_index_mean = scale_to_index(ucl, \"mean\")\n  )\n\n\n# Визуализация\nidx_gam %&gt;%\n  ggplot(aes(x = YEAR, y = value, group = 1)) +\n  geom_line() +\n  geom_point() +\n  geom_ribbon(aes(ymin = lcl, ymax = ucl), alpha = 0.3) +\n  geom_point(data = actual_medians, \n           aes(x = YEAR, y = median_cpue), \n           shape = 4,  # 4 соответствует крестику (x)\n           size = 3, \n           color = \"black\", \n           inherit.aes = FALSE)+\n  labs(title = \"Индексы CPUE по GAM модели (крестики - факт\", \n       x = \"Год\", \n       y = \"Стандартизированный индекс\")\n\n\n\n\n\n\n\n# ==============================================================================\n# БЛОК 6: МОДЕЛИРОВАНИЕ GAMM (СМЕШАННАЯ МОДЕЛЬ)\n# ==============================================================================\n\n# Подбор модели со смешанными эффектами\ngamm_fit &lt;- gamm4::gamm4(\n  formula = CPUE_POS ~ YEAR + MONTH + REGION,  # Фиксированные эффекты\n  random = ~ (1 | CALL),                       # Случайный эффект для судна\n  family = Gamma(link = \"log\"),               # Распределение\n  data = DATA\n)\n\n# 1. График остатков от предсказанных значений\nplot(fitted(gamm_fit$gam), residuals(gamm_fit$gam, type = \"deviance\"),\n     xlab = \"Предсказанные значения\", ylab = \"Девиансные остатки\",\n     main = \"Остатки GAMM vs. Предсказания\")\nabline(h = 0, col = \"red\", lty = 2)\n\n\n\n\n\n\n\n# 2. QQ-plot для остатков\nqqnorm(residuals(gamm_fit$gam, type = \"deviance\"),\n       main = \"QQ-plot для остатков GAMM\")\nqqline(residuals(gamm_fit$gam, type = \"deviance\"), col = \"red\")\n\n\n\n\n\n\n\n# 3. Диагностика случайных эффектов\ncat(\"\\nСлучайные эффекты (CALL):\\n\")\n\n\nСлучайные эффекты (CALL):\n\nprint(summary(ranef(gamm_fit$mer)$CALL))\n\n  (Intercept)      \n Min.   :-2.92229  \n 1st Qu.: 0.09295  \n Median : 0.32996  \n Mean   : 0.00306  \n 3rd Qu.: 0.54065  \n Max.   : 0.93271  \n\n# График случайных эффектов\nrandom_effects &lt;- ranef(gamm_fit$mer)$CALL\nplot(density(random_effects[,1]), main = \"Распределение случайных эффектов\",\n     xlab = \"Случайный эффект\", ylab = \"Плотность\")\n\n\n\n\n\n\n\n# 5. Проверка гетероскедастичности\nlibrary(lmtest)\n\nЗагрузка требуемого пакета: zoo\n\n\n\nПрисоединяю пакет: 'zoo'\n\n\nСледующие объекты скрыты от 'package:base':\n\n    as.Date, as.Date.numeric\n\nbptest(gamm_fit$gam$y ~ fitted(gamm_fit$gam)) %&gt;% \n  print()\n\n\n    studentized Breusch-Pagan test\n\ndata:  gamm_fit$gam$y ~ fitted(gamm_fit$gam)\nBP = 222.14, df = 1, p-value &lt; 2.2e-16\n\n# 6. Сводка по модели\ncat(\"\\nСводка GAMM модели:\\n\")\n\n\nСводка GAMM модели:\n\nprint(summary(gamm_fit$gam))\n\n\nFamily: Gamma \nLink function: log \n\nFormula:\nCPUE_POS ~ YEAR + MONTH + REGION\n\nParametric coefficients:\n                                                  Estimate Std. Error t value\n(Intercept)                                        4.91649    0.17171  28.632\nYEAR2020                                          -0.23162    0.04580  -5.058\nYEAR2021                                          -0.22798    0.04552  -5.008\nYEAR2022                                          -0.64763    0.04338 -14.928\nYEAR2023                                          -0.77570    0.04641 -16.716\nYEAR2024                                          -1.13070    0.05152 -21.947\nMONTH10                                           -0.13620    0.02445  -5.571\nMONTH11                                           -0.13630    0.03542  -3.848\nREGIONCEB.-ЦEHTPAЛЬHЫЙ P-H                         0.16149    0.46710   0.346\nREGIONCEB.CKЛOH MУPMAHCKOГO MEЛKOBOДЬЯ            -0.08013    0.15524  -0.516\nREGIONCEBEPO-KAHИHCKAЯ БAHKA                       0.15971    0.08238   1.939\nREGIONKAHИHCKAЯ БAHKA                              0.05886    0.07877   0.747\nREGIONKAHИHCKO- KOЛГУEBCKOE MEЛKOBOДЬE(CEB.CKЛOH)  0.20859    0.08522   2.448\nREGIONKAHИHCKO-KOЛГУEBCKOE MEЛKOBOДЬE              0.17834    0.07759   2.299\nREGIONMУPMAHCKOE MEЛKOBOДЬE                        0.07353    0.07755   0.948\nREGIONЗAП.-ПPИБPEЖHЫЙ P-H                          0.72926    0.46366   1.573\nREGIONЗAП.-ЦEHTPAЛЬHЫЙ P-H                         0.12967    0.08419   1.540\nREGIONЗAП.CKЛOH ГУCИHOЙ БAHKИ                      0.63836    0.11653   5.478\nREGIONЮЖ.CKЛOH ГУCИHOЙ БAHKИ                       0.68988    0.13078   5.275\n                                                  Pr(&gt;|t|)    \n(Intercept)                                        &lt; 2e-16 ***\nYEAR2020                                          4.44e-07 ***\nYEAR2021                                          5.74e-07 ***\nYEAR2022                                           &lt; 2e-16 ***\nYEAR2023                                           &lt; 2e-16 ***\nYEAR2024                                           &lt; 2e-16 ***\nMONTH10                                           2.70e-08 ***\nMONTH11                                           0.000121 ***\nREGIONCEB.-ЦEHTPAЛЬHЫЙ P-H                        0.729566    \nREGIONCEB.CKЛOH MУPMAHCKOГO MEЛKOBOДЬЯ            0.605763    \nREGIONCEBEPO-KAHИHCKAЯ БAHKA                      0.052628 .  \nREGIONKAHИHCKAЯ БAHKA                             0.455013    \nREGIONKAHИHCKO- KOЛГУEBCKOE MEЛKOBOДЬE(CEB.CKЛOH) 0.014424 *  \nREGIONKAHИHCKO-KOЛГУEBCKOE MEЛKOBOДЬE             0.021580 *  \nREGIONMУPMAHCKOE MEЛKOBOДЬE                       0.343099    \nREGIONЗAП.-ПPИБPEЖHЫЙ P-H                         0.115842    \nREGIONЗAП.-ЦEHTPAЛЬHЫЙ P-H                        0.123604    \nREGIONЗAП.CKЛOH ГУCИHOЙ БAHKИ                     4.57e-08 ***\nREGIONЮЖ.CKЛOH ГУCИHOЙ БAHKИ                      1.40e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nR-sq.(adj) =  0.172   \nglmer.ML =   1786  Scale est. = 0.41793   n = 3891\n\nprint(summary(gamm_fit$mer))\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: Gamma  ( log )\n\n      AIC       BIC    logLik -2*log(L)  df.resid \n  42933.5   43065.1  -21445.7   42891.5      3870 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-1.5364 -0.6769 -0.1721  0.4716 11.0577 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n CALL     (Intercept) 0.4320   0.6573  \n Residual             0.4179   0.6465  \nNumber of obs: 3891, groups:  CALL, 19\n\nFixed effects:\n                                                   Estimate Std. Error t value\nX(Intercept)                                        4.91649    0.23488  20.932\nXYEAR2020                                          -0.23162    0.02474  -9.363\nXYEAR2021                                          -0.22798    0.02513  -9.073\nXYEAR2022                                          -0.64763    0.02299 -28.167\nXYEAR2023                                          -0.77570    0.02376 -32.652\nXYEAR2024                                          -1.13070    0.02603 -43.443\nXMONTH10                                           -0.13620    0.01914  -7.116\nXMONTH11                                           -0.13630    0.02359  -5.777\nXREGIONCEB.-ЦEHTPAЛЬHЫЙ P-H                         0.16149    0.46456   0.348\nXREGIONCEB.CKЛOH MУPMAHCKOГO MEЛKOBOДЬЯ            -0.08013    0.03506  -2.285\nXREGIONCEBEPO-KAHИHCKAЯ БAHKA                       0.15971    0.02670   5.982\nXREGIONKAHИHCKAЯ БAHKA                              0.05886    0.02653   2.218\nXREGIONKAHИHCKO- KOЛГУEBCKOE MEЛKOBOДЬE(CEB.CKЛOH)  0.20859    0.02808   7.428\nXREGIONKAHИHCKO-KOЛГУEBCKOE MEЛKOBOДЬE              0.17834    0.02200   8.108\nXREGIONMУPMAHCKOE MEЛKOBOДЬE                        0.07353    0.02318   3.172\nXREGIONЗAП.-ПPИБPEЖHЫЙ P-H                          0.72926    0.46533   1.567\nXREGIONЗAП.-ЦEHTPAЛЬHЫЙ P-H                         0.12967    0.02736   4.739\nXREGIONЗAП.CKЛOH ГУCИHOЙ БAHKИ                      0.63836    0.03291  19.400\nXREGIONЮЖ.CKЛOH ГУCИHOЙ БAHKИ                       0.68988    0.03447  20.015\n                                                   Pr(&gt;|z|)    \nX(Intercept)                                        &lt; 2e-16 ***\nXYEAR2020                                           &lt; 2e-16 ***\nXYEAR2021                                           &lt; 2e-16 ***\nXYEAR2022                                           &lt; 2e-16 ***\nXYEAR2023                                           &lt; 2e-16 ***\nXYEAR2024                                           &lt; 2e-16 ***\nXMONTH10                                           1.11e-12 ***\nXMONTH11                                           7.60e-09 ***\nXREGIONCEB.-ЦEHTPAЛЬHЫЙ P-H                         0.72813    \nXREGIONCEB.CKЛOH MУPMAHCKOГO MEЛKOBOДЬЯ             0.02229 *  \nXREGIONCEBEPO-KAHИHCKAЯ БAHKA                      2.20e-09 ***\nXREGIONKAHИHCKAЯ БAHKA                              0.02654 *  \nXREGIONKAHИHCKO- KOЛГУEBCKOE MEЛKOBOДЬE(CEB.CKЛOH) 1.10e-13 ***\nXREGIONKAHИHCKO-KOЛГУEBCKOE MEЛKOBOДЬE             5.16e-16 ***\nXREGIONMУPMAHCKOE MEЛKOBOДЬE                        0.00151 ** \nXREGIONЗAП.-ПPИБPEЖHЫЙ P-H                          0.11707    \nXREGIONЗAП.-ЦEHTPAЛЬHЫЙ P-H                        2.15e-06 ***\nXREGIONЗAП.CKЛOH ГУCИHOЙ БAHKИ                      &lt; 2e-16 ***\nXREGIONЮЖ.CKЛOH ГУCИHOЙ БAHKИ                       &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nCorrelation matrix not shown by default, as p = 19 &gt; 12.\nUse print(summary(gamm_fit$mer), correlation=TRUE)  or\n    vcov(summary(gamm_fit$mer))        if you need it\n\n# Создание сетки для предсказания\nnewdata_grid &lt;- expand.grid(\n  YEAR = levels(DATA$YEAR),\n  MONTH = levels(DATA$MONTH),\n  REGION = levels(DATA$REGION),\n  CALL = levels(DATA$CALL)[1]  # Фиксированное значение для случайного эффекта\n)\n\n# Предсказание на сетке\nnewdata_grid$pred &lt;- predict(gamm_fit$gam, \n                            newdata = newdata_grid, \n                            type = \"response\")\n\n# Усреднение предсказаний по годам\nidx_gamm &lt;- newdata_grid %&gt;%\n  group_by(YEAR) %&gt;%\n  summarise(value = mean(pred, na.rm = TRUE)) %&gt;%\n  mutate(\n    model = \"GAMM (mgcv)\",\n    index_mean = scale_to_index(value, \"mean\"),\n    index_first = scale_to_index(value, \"first\")\n  )\n\n# Функция расчета доверительных интервалов через бутстреп\ncompute_gamm_ci &lt;- function(model, newdata, n_boot = 100) {\n  boot_means &lt;- replicate(n_boot, {\n    boot_data &lt;- newdata[sample(nrow(newdata), replace = TRUE), ]\n    preds &lt;- predict(model, newdata = boot_data, type = \"response\")\n    boot_data %&gt;%\n      mutate(pred = preds) %&gt;%\n      group_by(YEAR) %&gt;%\n      summarise(mean_pred = mean(pred, na.rm = TRUE)) %&gt;%\n      pull(mean_pred)\n  })\n  \n  ci &lt;- apply(boot_means, 1, function(x) quantile(x, c(0.025, 0.975), na.rm = TRUE))\n  return(list(mean = rowMeans(boot_means), lcl = ci[1, ], ucl = ci[2, ]))\n}\n\n# Расчет интервалов\ngamm_ci &lt;- compute_gamm_ci(gamm_fit$gam, newdata_grid)\n\n# Добавление интервалов к индексам\nidx_gamm &lt;- idx_gamm %&gt;%\n  mutate(\n    lcl = gamm_ci$lcl,\n    ucl = gamm_ci$ucl,\n    lcl_index_mean = scale_to_index(lcl, \"mean\"),\n    ucl_index_mean = scale_to_index(ucl, \"mean\")\n  )\n\n# Визуализация\nidx_gamm %&gt;%\n  ggplot(aes(x = YEAR, y = value, group = 1)) +\n  geom_line() +\n  geom_point() +\n  geom_ribbon(aes(ymin = lcl, ymax = ucl), alpha = 0.3) +\n  geom_point(data = actual_medians, \n           aes(x = YEAR, y = median_cpue), \n           shape = 4,  # 4 соответствует крестику (x)\n           size = 3, \n           color = \"black\", \n           inherit.aes = FALSE)+\nlabs(title = \"Индексы CPUE по GAMM модели (крестики - факт)\", \n       x = \"Год\", \n       y = \"Стандартизированный индекс\")\n\n\n\n\n\n\n\n# ==============================================================================\n# БЛОК 7: СРАВНЕНИЕ МОДЕЛЕЙ И ФИНАЛЬНАЯ ВИЗУАЛИЗАЦИЯ\n# ==============================================================================\n\n# Объединение результатов всех моделей\nindices_all &lt;- bind_rows(\n  idx_glm %&gt;% select(YEAR, value, lcl, ucl, model, index_mean, lcl_index_mean, ucl_index_mean),\n  idx_gam %&gt;% select(YEAR, value, lcl, ucl, model, index_mean, lcl_index_mean, ucl_index_mean),\n  idx_gamm %&gt;% select(YEAR, value, lcl, ucl, model, index_mean, lcl_index_mean, ucl_index_mean)\n) %&gt;% mutate(YEAR = factor(YEAR, levels = levels(DATA$YEAR)))\n\n# Сводная таблица результатов\nindices_all %&gt;% \n  kable(caption = \"Сравнение индексов CPUE по разным моделям\")\n\n\nСравнение индексов CPUE по разным моделям\n\n\n\n\n\n\n\n\n\n\n\n\nYEAR\nvalue\nlcl\nucl\nmodel\nindex_mean\nlcl_index_mean\nucl_index_mean\n\n\n\n\n2019\n158.81216\n138.93290\n181.53585\nGLM_Gamma\n1.5358638\n1.5299542\n1.5417869\n\n\n2020\n126.54457\n111.15088\n144.07018\nGLM_Gamma\n1.2238057\n1.2240136\n1.2235904\n\n\n2021\n126.89292\n111.57409\n144.31498\nGLM_Gamma\n1.2271746\n1.2286741\n1.2256695\n\n\n2022\n83.46580\n73.52525\n94.75032\nGLM_Gamma\n0.8071933\n0.8096733\n0.8047160\n\n\n2023\n73.30390\n64.40714\n83.42960\nGLM_Gamma\n0.7089181\n0.7092631\n0.7085690\n\n\n2024\n51.39565\n45.26094\n58.36186\nGLM_Gamma\n0.4970445\n0.4984216\n0.4956683\n\n\n2019\n158.81218\n138.93304\n181.53572\nGAM\n1.5358554\n1.5299458\n1.5417784\n\n\n2020\n126.54503\n111.15138\n144.07058\nGAM\n1.2238033\n1.2240112\n1.2235880\n\n\n2021\n126.89280\n111.57408\n144.31473\nGAM\n1.2271665\n1.2286660\n1.2256615\n\n\n2022\n83.46561\n73.52514\n94.75002\nGAM\n0.8071869\n0.8096669\n0.8047096\n\n\n2023\n73.30495\n64.40811\n83.43072\nGAM\n0.7089242\n0.7092692\n0.7085751\n\n\n2024\n51.39792\n45.26297\n58.36439\nGAM\n0.4970637\n0.4984408\n0.4956874\n\n\n2019\n165.88930\n153.27889\n186.43794\nGAMM (mgcv)\n1.5400976\n1.5751123\n1.5695052\n\n\n2020\n131.59142\n116.54705\n144.02703\nGAMM (mgcv)\n1.2216800\n1.1976514\n1.2124741\n\n\n2021\n132.07110\n118.64017\n145.21926\nGAMM (mgcv)\n1.2261333\n1.2191606\n1.2225107\n\n\n2022\n86.80692\n79.26688\n96.71028\nGAMM (mgcv)\n0.8059057\n0.8145559\n0.8141438\n\n\n2023\n76.37202\n67.94329\n82.24327\nGAMM (mgcv)\n0.7090292\n0.6981933\n0.6923550\n\n\n2024\n53.55022\n48.20170\n58.08852\nGAMM (mgcv)\n0.4971542\n0.4953264\n0.4890111\n\n\n\n\nindices_all %&gt;%\n  ggplot(aes(x = YEAR, y = value, color = model, group = model, fill = model)) +\n  geom_line() +\n  geom_point() +\n  geom_ribbon(aes(ymin = lcl, ymax = ucl), alpha = 0.1, linetype = \"dashed\") +\ngeom_point(data = actual_medians, \n           aes(x = YEAR, y = median_cpue), \n           shape = 4,  # 4 соответствует крестику (x)\n           size = 3, \n           color = \"black\", \n           inherit.aes = FALSE)+\n  labs(title = \"Сравнение стандартизированных индексов CPUE (крестики - факт)\", \n       x = \"Год\", \n       y = \"Индекс CPUE (кг/ловушку)\", \n       color = \"Модель\", \n       fill = \"Модель\") +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n# ==============================================================================\n# БЛОК 9: СРАВНЕНИЕ МОДЕЛЕЙ ПО ИНФОРМАЦИОННЫМ КРИТЕРИЯМ\n# ==============================================================================\n\ncat(\"\\n=== СРАВНИТЕЛЬНЫЙ АНАЛИЗ МОДЕЛЕЙ ПО ИНФОРМАЦИОННЫМ КРИТЕРИЯМ ===\\n\")\n\n\n=== СРАВНИТЕЛЬНЫЙ АНАЛИЗ МОДЕЛЕЙ ПО ИНФОРМАЦИОННЫМ КРИТЕРИЯМ ===\n\n# Упрощенная функция для извлечения ключевых критериев из моделей\nextract_model_metrics &lt;- function(model, model_name, model_type = \"glm\") {\n  if (model_type == \"glm\") {\n    aic_val &lt;- AIC(model)\n    bic_val &lt;- BIC(model)\n    loglik_val &lt;- as.numeric(logLik(model))\n    df_val &lt;- model$rank\n    null_dev &lt;- model$null.deviance\n    dev &lt;- model$deviance\n  } else if (model_type == \"gam\") {\n    aic_val &lt;- AIC(model)\n    bic_val &lt;- BIC(model)\n    loglik_val &lt;- as.numeric(logLik(model))\n    df_val &lt;- sum(model$edf)\n    null_dev &lt;- model$null.deviance\n    dev &lt;- model$deviance\n  } else if (model_type == \"gamm\") {\n    aic_val &lt;- AIC(model$mer)\n    bic_val &lt;- BIC(model$mer)\n    loglik_val &lt;- as.numeric(logLik(model$mer))\n    df_val &lt;- length(fixef(model$mer)) + 1  # +1 для случайного эффекта\n    null_dev &lt;- model$gam$null.deviance\n    dev &lt;- model$gam$deviance\n  }\n  \n  # Вычисляем долю объясненной девиации\n  deviance_explained &lt;- ifelse(!is.null(null_dev) && !is.null(dev) && null_dev &gt; 0,\n                              (null_dev - dev) / null_dev, NA)\n  \n  data.frame(\n    Model = model_name,\n    AIC = round(aic_val, 2),\n    BIC = round(bic_val, 2),\n    LogLik = round(loglik_val, 2),\n    DF = round(df_val, 2),\n    Deviance_Explained = round(deviance_explained, 4)\n  )\n}\n\n# Извлекаем метрики для всех моделей\nmodel_metrics &lt;- bind_rows(\n  extract_model_metrics(glm_gamma_fit, \"GLM (Gamma)\", \"glm\"),\n  extract_model_metrics(gam_fit, \"GAM\", \"gam\"),\n  extract_model_metrics(gamm_fit, \"GAMM\", \"gamm\")\n)\n\n# Добавляем разницу в AIC относительно наилучшей модели\nmin_aic &lt;- min(model_metrics$AIC)\nmodel_metrics &lt;- model_metrics %&gt;%\n  mutate(Delta_AIC = AIC - min_aic,\n         AIC_Weight = exp(-0.5 * Delta_AIC) / sum(exp(-0.5 * Delta_AIC)))\n\n# Форматируем таблицу для вывода\ncomparison_table &lt;- model_metrics %&gt;%\n  mutate(across(where(is.numeric), ~round(., 3))) %&gt;%\n  arrange(AIC)  # Сортируем по AIC (лучшая модель первая)\n\n# Выводим таблицу сравнения\ncat(\"\\nТАБЛИЦА СРАВНЕНИЯ МОДЕЛЕЙ:\\n\")\n\n\nТАБЛИЦА СРАВНЕНИЯ МОДЕЛЕЙ:\n\nprint(comparison_table)\n\n        Model      AIC      BIC    LogLik DF Deviance_Explained Delta_AIC\n1         GAM 42840.91 43079.03 -21382.45 37              0.401      0.00\n2 GLM (Gamma) 42850.76 43088.88 -21387.38 37              0.401      9.85\n3        GAMM 42933.49 43065.09 -21445.75 20                 NA     92.58\n  AIC_Weight\n1      0.993\n2      0.007\n3      0.000\n\n# Выводим итоговые рекомендации\ncat(\"\\n=== ИТОГОВЫЕ РЕКОМЕНДАЦИИ ПО ВЫБОРУ МОДЕЛИ ===\\n\")\n\n\n=== ИТОГОВЫЕ РЕКОМЕНДАЦИИ ПО ВЫБОРУ МОДЕЛИ ===\n\nbest_model &lt;- comparison_table$Model[1]\ncat(\"Наилучшая модель по критерию AIC:\", best_model, \"\\n\")\n\nНаилучшая модель по критерию AIC: GAM \n\ncat(\"Вес AIC для наилучшей модели:\", round(comparison_table$AIC_Weight[1], 3), \"\\n\")\n\nВес AIC для наилучшей модели: 0.993 \n\nif (nrow(comparison_table) &gt; 1 && comparison_table$Delta_AIC[2] &gt; 2) {\n  cat(\"Наилучшая модель существенно лучше остальных (?AIC &gt; 2).\\n\")\n} else if (nrow(comparison_table) &gt; 1) {\n  cat(\"Несколько моделей имеют сходное качество (?AIC &lt; 2).\\n\")\n}\n\nНаилучшая модель существенно лучше остальных (?AIC &gt; 2).\n\ncat(\"Доля объясненной девиации наилучшей модели:\", \n    round(comparison_table$Deviance_Explained[1], 3), \"\\n\")\n\nДоля объясненной девиации наилучшей модели: 0.401",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Стандартизация CPUE: GLM, GAM, GAMM</span>"
    ]
  },
  {
    "objectID": "chapter 9.html#анализ-glm-модели-с-гамма-распределением-и-лог-ссылкой",
    "href": "chapter 9.html#анализ-glm-модели-с-гамма-распределением-и-лог-ссылкой",
    "title": "10  Стандартизация CPUE: GLM, GAM, GAMM",
    "section": "10.3 Анализ GLM модели с гамма-распределением и лог-ссылкой",
    "text": "10.3 Анализ GLM модели с гамма-распределением и лог-ссылкой\nПодобранная обобщенная линейная модель (GLM) использует гамма-распределение для ошибок и логарифмическую функцию связи. Данное распределение выбрано, поскольку CPUE представляет собой непрерывную положительную величину, а гамма-распределение хорошо описывает такие данные. Логарифмическая связь обеспечивает мультипликативность эффектов факторов, что интерпретируется как относительное изменение CPUE при изменении фактора. Модель включает четыре факторные переменные: год (YEAR), месяц (MONTH), позывной судна (CALL) и район промысла (REGION). Все переменные представлены как факторы, что означает, что для каждого уровня фактора оценивается свой коэффициент, интерпретируемый как отклонение от базового уровня. Базовыми уровнями являются: 2019 год для YEAR, сентябрь (MONTH9) для MONTH, первое судно в алфавитном порядке для CALL и первый район для REGION. Из сводки модели видно, что многие коэффициенты статистически значимы. Все годовые коэффициенты отрицательны и значимы, что указывает на снижение CPUE относительно базового 2019 года. Наибольшее снижение наблюдается в 2024 году (коэффициент -1.128). Месячные коэффициенты также отрицательны и значимы, что говорит о снижении CPUE в октябре и ноябре по сравнению с сентябрем. Большинство коэффициентов для судов значимы и отрицательны, что указывает на то, что уловы на усилие у этих судов в среднем ниже, чем у базового судна. Однако некоторые суда имеют положительные коэффициенты, что означает более высокую производительность. Для районов значимыми оказались лишь некоторые коэффициенты, в основном положительные, что говорит о более высоких уловах в этих районах по сравнению с базовым. Дисперсионный параметр для гамма-семейства равен 0.417, что указывает на умеренную дисперсию. Null deviance составляет 2980.2 при 3890 степенях свободы, а остаточная deviance — 1785.6 при 3854 степенях свободы. Снижение девиации указывает на то, что модель объясняет существенную часть вариации данных. AIC модели равен 42851. Диагностические графики стандартных остатков GLM включают график остатков против предсказанных значений, Q-Q plot, график масштаба-местоположения и график остатков против влияния. Эти графики позволяют оценить гомоскедастичность, нормальность остатков и наличие выбросов. Дополнительная диагностика с помощью пакета DHARMa показывает, что распределение остатков соответствует ожидаемому, что подтверждает адекватность выбранного семейства распределений. Расчет стандартизированных индексов с помощью функции emmeans показывает, что индекс CPUE постепенно снижается с 2019 по 2024 год, что согласуется с отрицательными годовыми коэффициентами. В 2019 году индекс составляет 159, а к 2024 падает до 51.4. Доверительные интервалы не перекрываются между крайними годами, что указывает на статистически значимое снижение. Сравнение с медианными значениями CPUE по годам из исходных данных показывает, что модель несколько сглаживает исходные данные, но общая тенденция снижения сохраняется. Например, в 2019 году медианное значение CPUE было 200, а стандартизированный индекс — 159, что может быть связано с учетом влияния других факторов. Преимущества GLM подхода включают простоту интерпретации коэффициентов, вычислительную эффективность и широкую распространенность. Недостатки заключаются в том, что GLM предполагает линейность влияния факторов на логарифм отклика, что может не всегда выполняться. Кроме того, модель с фиксированными эффектами может не учитывать некоторые источники вариации, такие как пространственно-временная автокорреляция или случайные эффекты судов. В целом, модель адекватно описывает данные и может быть использована для стандартизации CPUE, но для более сложных данных могут потребоваться более гибкие модели, такие как GAM или GAMM.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Стандартизация CPUE: GLM, GAM, GAMM</span>"
    ]
  },
  {
    "objectID": "chapter 9.html#анализ-gam-модели-с-гамма-распределением-и-логарифмической-связью",
    "href": "chapter 9.html#анализ-gam-модели-с-гамма-распределением-и-логарифмической-связью",
    "title": "10  Стандартизация CPUE: GLM, GAM, GAMM",
    "section": "10.4 Анализ GAM модели с гамма-распределением и логарифмической связью",
    "text": "10.4 Анализ GAM модели с гамма-распределением и логарифмической связью\nАнализ подобранной обобщенной аддитивной модели (GAM) с гамма-распределением и логарифмической связью показывает результаты, практически идентичные полученным ранее для GLM модели, что ожидаемо, поскольку в данной реализации GAM использовалась полностью параметрическая формула без сглаживающих функций. Модель была построена с теми же предикторами - годом, месяцем, идентификатором судна и районом промысла.\nСводка модели демонстрирует параметрические коэффициенты, которые практически не отличаются от оценок GLM модели. Все годовые коэффициенты остаются отрицательными и статистически значимыми, подтверждая устойчивую тенденцию снижения стандартизированного индекса CPUE с 2019 по 2024 год. Месячные коэффициенты также значимы и отрицательны, указывая на сезонное снижение уловов в октябре и ноябре по сравнению с сентябрем. Оценки для различных судов и районов промысла практически идентичны полученным в GLM, с сохранением статистической значимости для тех же уровней факторов.\nМодель объясняет 40.1% девиации данных, что полностью соответствует показателю GLM. Значение REML составляет 21455, а оценка дисперсии равна 0.41722, что также практически совпадает с соответствующими показателями GLM модели.\nПроверка адекватности модели с помощью функции gam.check показывает успешную сходимость алгоритма оптимизации после 5 итераций. Градиент близок к нулю, а гессиан положительно определен, что свидетельствует о достижении устойчивого решения. Поскольку в модели отсутствуют сглаживающие компоненты, диагностика не выявляет проблем, связанных с выбором базовой размерности или неадекватностью сглаживания.\nДиагностика остатков с использованием пакета DHARMa показывает равномерное распределение без систематических паттернов, что указывает на соответствие остатков теоретическому гамма-распределению. Графики остатков демонстрируют отсутствие гетероскедастичности и значимых выбросов, что подтверждает адекватность модели.\nРасчет стандартизированных индексов методом маргинальных средних дает значения, практически идентичные полученным из GLM модели. Индекс снижается с 159 в 2019 году до 51.4 в 2024 году, с доверительными интервалами, не перекрывающимися между крайними годами. Нормированные индексы относительно среднего и первого года также полностью совпадают с GLM результатами.\nОсновное преимущество использования GAM в данном случае заключается в методологическом подходе - использовании метода REML для оптимизации, который может обеспечивать более стабильные оценки параметров по сравнению с методом максимального правдоподобия, используемым в GLM. Хотя в данной конкретной реализации с полностью параметрической формулой это преимущество не реализуется в полной мере, GAM предоставляет основу для легкого включения нелинейных эффектов через сглаживающие функции, если такая необходимость возникнет в дальнейшем.\nК недостаткам данного подхода можно отнести избыточную сложность GAM для полностью параметрической модели, поскольку вычислительные затраты выше, чем для GLM, без существенного улучшения качества подгонки. Фактически, в данном случае GAM работает как GLM, но с более сложным алгоритмом оптимизации. Кроме того, диагностика GAM требует дополнительных проверок, связанных со сходимостью алгоритма и адекватностью сглаживания, которые не актуальны для параметрических моделей.\nВ целом, данная реализация GAM не демонстрирует преимуществ перед GLM моделью, но предоставляет основу для будущего расширения модели за счет включения нелинейных эффектов, если анализ данных покажет такую необходимость. Результаты стандартизации CPUE полностью согласуются с полученными ранее средствами GLM.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Стандартизация CPUE: GLM, GAM, GAMM</span>"
    ]
  },
  {
    "objectID": "chapter 9.html#анализ-gamm-модели",
    "href": "chapter 9.html#анализ-gamm-модели",
    "title": "10  Стандартизация CPUE: GLM, GAM, GAMM",
    "section": "10.5 Анализ GAMM модели",
    "text": "10.5 Анализ GAMM модели\nОсобенности смешанных моделей и случайные эффекты\nСмешанные модели, включая GAMM, расширяют возможности стандартных моделей за счет введения случайных эффектов. В то время как фиксированные эффекты оценивают среднее влияние факторов на всю популяцию, случайные эффекты позволяют учесть вариацию, связанную с отдельными группами наблюдений. В ихтиологических исследованиях случайные эффекты часто применяются для учета индивидуальных особенностей судов, различий между районами промысла, или временной автокорреляции.\nСлучайные эффекты особенно полезны, когда:\n\nДанные имеют иерархическую структуру (например, уловы по нескольким судам)\nНаблюдения внутри групп коррелированы\nКоличество уровней фактора велико, и мы хотим обобщить выводы на всю популяцию групп\nНас интересует вариация между группами, а не конкретные сравнения между отдельными уровнями\n\nВ данном случае случайный эффект для судна (CALL) позволяет учесть, что разные суда могут иметь систематические различия в эффективности промысла, не объясняемые другими переменными модели.\nАнализ результатов GAMM модели\nАнализ обобщенной аддитивной смешанной модели показывает несколько важных особенностей. Модель включает фиксированные эффекты года, месяца и района, а также случайный эффект для судна, что позволяет учесть индивидуальные различия между судами в уровне уловов.\nГрафик остатков от предсказанных значений показывает распределение девиансных остатков вокруг нулевой линии. Наблюдается некоторая гетероскедастичность - разброс остатков увеличивается с ростом предсказанных значений, что характерно для данных по уловам. QQ-plot демонстрирует отклонение распределения остатков от нормального в крайних значениях, что ожидаемо для данных с гамма-распределением.\nАнализ случайных эффектов для судов показывает существенную вариацию между разными судами. Значения случайных эффектов варьируют от -2.92 до 0.93, что указывает на значительные различия в эффективности промысла между судами после учета влияния года, месяца и района. Распределение случайных эффектов близко к нормальному с центром около нуля.\nТест Бреуша-Пагана подтверждает наличие гетероскедастичности в модели, что является общей проблемой для моделей с данными по уловам.\nСводка параметрических коэффициентов показывает, что все годовые эффекты статистически значимы и отрицательны, подтверждая общую тенденцию снижения уловов с течением времени. Месячные эффекты также значимы и отрицательны, указывая на сезонное снижение уловов в октябре и ноябре по сравнению с сентябрем. Среди районов промысла несколько показали статистически значимые отличия от базового уровня.\nМодель объясняет 17.2% дисперсии данных, что меньше, чем в предыдущих моделях, что может быть связано с учетом части вариации через случайные эффекты. Информационные критерии AIC (42933.5) и BIC (43065.1) выше, чем у GLM и GAM моделей, что указывает на худшее соответствие данных этой модели с учетом ее сложности.\nГрафик случайных эффектов с тремя модами на значениях 0.5, -1.5 и -3 демонстрирует выраженную стратификацию судов по их промысловой эффективности. Такое распределение указывает на наличие трех различных групп в промысловом флоте, каждая со своими характеристиками. Группа с модой на 0.5 представляет суда с повышенной эффективностью, чьи уловы примерно на 65% (exp(0.5) ≈ 0.65) превышают средний уровень. Эти суда, вероятно, оснащены современным оборудованием, укомплектованы опытными экипажами и работают на наиболее продуктивных участках.\nВторая группа с модой на -1.5 соответствует судам со значительно сниженной эффективностью, показывающим уловы примерно на 78% ниже среднего показателя. Такие результаты могут быть связаны с устаревшим техническим оснащением, менее оптимальными методами лова или работой в менее продуктивных районах. Третья группа с модой на -3 представляет суда с крайне низкой эффективностью, демонстрирующие уловы на 95% ниже среднего уровня. Столь значительное отставание может объясняться серьезными техническими проблемами, отсутствием современного оборудования, неопытностью экипажей или систематическими организационными трудностями.А возможно работой не на мороженном крабе, а живом - требующим другой технологической работы.\nНаличие трех четких мод в распределении случайных эффектов свидетельствует о существенной неоднородности промыслового флота. Это указывает на то, что предположение о нормальном распределении случайных эффектов не выполняется, а данные имеют выраженную групповую структуру. Модель успешно выявляет эту скрытую стратификацию, что подтверждает важность учета случайных эффектов при анализе промысловых данных. Полученные результаты подчеркивают необходимость дифференцированного подхода к анализу эффективности судов и разработки управленческих решений с учетом выявленной группировки. Различные моды могут отражать не только технические различия между судами, но и различные стратегии промысла, доступ к ресурсам или уровень организации работы.\nПреимущества и недостатки подхода GAMM\nОсновное преимущество GAMM подхода заключается в возможности учета групповой структуры данных через случайные эффекты. Это позволяет более адекватно оценить неопределенность предсказаний и избежать завышения значимости эффектов из-за псевдорепликации. Модель обеспечивает более реалистичную оценку вариации в данных, учитывая как фиксированные эффекты, так и случайную вариацию между группами.\nК недостаткам можно отнести повышенную вычислительную сложность и потенциальные проблемы со сходимостью алгоритмов оптимизации. Интерпретация результатов становится сложнее, особенно при наличии взаимодействий между фиксированными и случайными эффектами. В данном случае модель показала худшие показатели качества подгонки по сравнению с более простыми GLM и GAM моделями, что может свидетельствовать о избыточной сложности модели для данного набора данных.\nВ целом, GAMM представляет собой мощный инструмент для анализа данных с иерархической структурой, но его применение должно быть обосновано теоретически и подтверждено улучшением качества модели по сравнению с более простыми альтернативами.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Стандартизация CPUE: GLM, GAM, GAMM</span>"
    ]
  },
  {
    "objectID": "chapter 9.html#сравнительный-анализ-моделей-по-информационным-критериям",
    "href": "chapter 9.html#сравнительный-анализ-моделей-по-информационным-критериям",
    "title": "10  Стандартизация CPUE: GLM, GAM, GAMM",
    "section": "10.6 Сравнительный анализ моделей по информационным критериям",
    "text": "10.6 Сравнительный анализ моделей по информационным критериям\nВ данном разделе проводится систематическое сравнение трех альтернативных моделей - GLM, GAM и GAMM - с использованием информационных критериев и других метрик качества. Для унификации процесса сравнения создана специализированная функция extract_model_metrics, которая адаптирована для извлечения сопоставимых показателей из моделей разной структуры.\nДля GLM и GAM моделей используются стандартные методы расчета критериев, включая AIC, BIC, логарифмическое правдоподобие и долю объясненной девиации. Для GAMM модели, имеющей более сложную смешанную структуру, метрики извлекаются из компонентов mer и gam объекта, с дополнительным учетом случайных эффектов при расчете сложности модели.\nРезультаты сравнения представлены в виде структурированной таблицы, где модели упорядочены по возрастанию AIC - информационного критерия Акаике, который балансирует качество подгонки и сложность модели. Дополнительно вычисляются дельта-AIC (разница относительно наилучшей модели) и веса AIC, которые интерпретируются как вероятности того, что данная модель является наилучшей среди рассматриваемых.\nАнализ результатов показывает четкое разделение моделей по качеству. Модель GAM демонстрирует наилучшие показатели с AIC = 42840.91 и весом AIC 0.993, что означает 99.3% вероятность того, что эта модель является наилучшей среди сравниваемых. Модель GLM показывает очень близкие результаты по объясненной дисперсии (0.401), но несколько худшие значения AIC (42850.76) и минимальный вес (0.007). Модель GAMM значительно уступает по всем критериям с AIC = 42933.49 и нулевым весом в рамках данного сравнения.\nРазница в AIC между GAM и GLM составляет 9.85 единиц, что превышает пороговое значение 2, принятое для утверждения о существенном преимуществе одной модели над другой. Еще более значительная разница в 92.58 единиц между GAM и GAMM подтверждает статистически значимое превосходство GAM модели.\nНа основе проведенного анализа формулируются итоговые рекомендации по выбору модели. Модель GAM идентифицируется как наилучшая с очень высокой степенью уверенности (вес AIC 0.993). Объясняющая способность модели составляет 40.1%, что указывает на хорошее соответствие модели данным.\nДанный сравнительный подход обеспечивает объективную основу для выбора окончательной модели, позволяя учесть как качество подгонки, так и сложность модели, избегая таким образом как избыточного усложнения, так и излишнего упрощения.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Стандартизация CPUE: GLM, GAM, GAMM</span>"
    ]
  }
]